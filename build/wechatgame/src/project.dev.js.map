{"version":3,"sources":["assets/basic/script/basic/DataFunc.js","assets/basic/script/basic/Globals.js","assets/basic/script/basic/MatchvsEngine.js","assets/basic/script/basic/Matchvs.js","assets/basic/script/basic/UIFunc.js","assets/game/script/managers/bulletManager.js","assets/game/script/bullet.js","assets/game/script/managers/clickManager.js","assets/basic/script/basic/messenger/clientEvent.js","assets/basic/script/basic/messenger/eventListenerSelf.js","assets/game/script/managers/gameManager.js","assets/game/script/managers/itemManager.js","assets/game/script/item.js","packages/plugin-matchvs/matchvs/matchvsjssdk/matchvs.all.js","assets/basic/script/basic/rankNetwork/msgType.js","assets/basic/script/basic/rankNetwork/network.js","assets/basic/script/playerIcon.js","assets/game/script/managers/playerManager.js","assets/game/script/player.js","assets/basic/script/basic/rankNetwork/pomeloBuild.js","assets/game/script/radintionBullet.js","assets/basic/script/rankUserInfo.js","assets/basic/script/resultPlayerIcon.js","assets/basic/script/roomInfo.js","assets/basic/script/roomUserInfo.js","assets/basic/script/uiCreateRoom.js","assets/basic/script/uiExit.js","assets/game/script/uiGamePanel.js","assets/basic/script/uiLobbyPanel.js","assets/basic/script/uiLogin.js","assets/basic/script/uiMaskLayout.js","assets/basic/script/uiMatching1v1Ver.js","assets/basic/script/uiMatching1v1.js","assets/basic/script/uiMatching2v2Ver.js","assets/basic/script/uiMatching2v2.js","assets/basic/script/uiMatching.js","assets/basic/script/basic/uiPanel.js","assets/basic/script/uiRankPanel.js","assets/basic/script/uiResultPanel.js","assets/basic/script/uiResult.js","assets/basic/script/uiRoomList.js","assets/basic/script/uiRoom.js","assets/basic/script/uiTip.js","assets/basic/script/uiVsResult.js","assets/basic/script/uiWaitingForServer.js"],"names":["window","dataFunc","arrTables","csvTables","csvTableForArr","tableCast","tableComment","CELL_DELIMITERS","LINE_DELIMITERS","uiPanelAnimationClips","getTable","tableName","getTableArr","queryOne","key","value","table","tbItem","hasOwnProperty","queryByID","ID","queryAll","ret","loadConfigs","progressCb","callback","cc","loader","loadResDir","AnimationClip","err","clips","error","message","i","length","name","currentLoad","forEach","index","loadRes","content","addTable","tableContent","force","tableData","tableArr","opts","header","CSV","parse","row","keyname","push","cast","comment","getterCast","d","Array","Number","isNaN","STANDARD_DECODE_OPTS","skip","limit","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","args","prototype","slice","call","arguments","base","rest","len","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","idx","buildArrayConstructor","frequency","coll","needle","count","lastIndex","maxIndex","this","indexOf","mostFrequent","needles","max","detected","cur","unsafeParse","text","lines","split","splice","constructor","cells","line","shift","findIndex","list","item","quoteCount","start","end","parseInt","substring","rows","bind","Math","min","floor","Game","GameManager","BulletManager","ItemManager","PlayerManager","ClickManager","GameState","Enum","None","Pause","Play","Over","DirectState","Left","Right","GLB","RANDOM_MATCH","PROPERTY_MATCH","COOPERATION","COMPETITION","MAX_PLAYER_COUNT","PLAYER_COUNTS","GAME_START_EVENT","GAME_OVER_EVENT","READY","ROUND_START","SCORE_EVENT","SHOOT_GUN_ITEM","ADD_BULLET","DISTANCE","POSITION","SPAWN_SLATE","HURT","DIFFUSE_ITEM_GET","RADINTION_ITEM_GET","SLATE_HITTING","channel","platform","gameId","gameVersion","IP","PORT","GAME_NAME","appKey","secret","matchType","gameType","userInfo","playerUserIds","isRoomOwner","syncFrame","FRAME_RATE","NormalBulletSpeed","limitX","limitYTop","limitYBottom","range","MatchvsEngine","console","log","init","matchVSResponses","gameid","responses","registerUser","_forEachResponse","res","setTimeout","userID","token","avatar","registerUserResponse","login","appkey","deviceID","gatewayid","joinRandomRoom","roomInfo","status","userInfoList","userProfile","rootID","rootProperty","owner","roomJoinResponse","func","joinOver","sendEvent","event","mockEventId","Date","getTime","sendEventRsp","seq","module","exports","engine","response","MsMatchInfo","MsCreateRoomInfo","Matchvs","getInstance","e","jsMatchvs","require","MatchvsResponse","MatchVSEngine","MatchInfo","CreateRoomInfo","uiFunc","uiList","openUI","uiName","callBack","prefab","temp","instantiate","parent","Canvas","instance","node","targetUI","getComponent","isTop","setSiblingIndex","MAX_SAFE_INTEGER","closeUI","destroy","findUI","Class","extends","Component","properties","redBulletPrefab","Prefab","blueBulletPrefab","greenBulletPrefab","radintionBulletPrefab","onLoad","redBulletPool","NodePool","buleBulletPool","greenBulletPool","radintionBulletPool","redNumber","addBullet","data","bullet","get","bulletType","setPosition","bulletPos","speed","angle","setBulletData","bulletDir","random","x","y","p","recycleBullet","target","put","diffuseBullet","position","radintionBullet","destroyBullet","update","dt","cos","sin","clickPosBk","playerPos","on","Node","EventType","TOUCH_START","touchstart","TOUCH_MOVE","touchmove","touchId","getID","getLocation","self","setPlayerPosBk","bTouch","clickPos","playerPosBk","dispatchEvent","Event","EventCustom","clientEvent","eventType","playerMove","refreshSlateBtn","roundStart","roundOver","gameStart","gameOver","fire","playerAccountGet","initResponse","errorResponse","joinRoomResponse","joinRoomNotify","leaveRoomResponse","leaveRoomNotify","leaveRoomMedNotify","joinOverResponse","createRoomResponse","getRoomListResponse","getRoomDetailResponse","getRoomListExResponse","kickPlayerResponse","kickPlayerNotify","eventListener","create","eventName","handler","off","clear","dispatch","oneToMultiListener","handlerList","handlers","oldHandler","oldTarget","newEventListener","mvs","blockInput","BlockInputEvents","enabled","game","addPersistRootNode","director","getCollisionManager","view","enableAutoFullScreen","leaveRoom","network","chooseNetworkMode","getRankDataListener","findPlayerByAccountListener","playerDie","exitGame","wx","success","getUserInfo","fail","errMsg","nickName","avatarUrl","gameState","leaveRoomInfo","userId","id","isRivalLeave","gamePanel","readyCnt","matchVsInit","loginResponse","logoutResponse","sendEventNotify","frameUpdate","setFrameSyncResponse","networkStateNotify","result","netNotify","state","_kickPlayerNotify","kickPlayerRsp","rsp","roomInfos","joinOverRsp","roomUserInfoList","roomUserInfo","leaveRoomRsp","removePersistRootNode","loadScene","msg","uiTip","setData","logout","deviceId","gatewayId","info","lobbyShow","designResolution","height","width","cpProto","JSON","remoteUserIds","userIds","startGame","sendRoundStartMsg","setFrameSync","frameItems","srcUserID","setDirect","rival","bulletData","playerId","hurt","addItem","itemData","getPosition","_position","_position2","_obj","_position3","sendReadyMsg","action","sendEventEx","stringify","mStatus","recvMsg","uiRankPanel","rankArray","loginServer","isConnected","send","account","connect","userName","headIcon","userInfoReq","onDestroy","diffuseItem","radintionItem","itemsNumber","diffuseItemPool","radintionItemPool","scheduleItemSpawn","clearInterval","scheduleItemId","setInterval","sendFrameEvent","itemType","itemPos","recycleItem","destroyItem","hexcase","b64pad","chrsz","hex_md5","s","binl2hex","core_md5","str2binl","b64_md5","binl2b64","str_md5","binl2str","hex_hmac_md5","core_hmac_md5","b64_hmac_md5","str_hmac_md5","md5_vm_test","a","b","c","olda","oldb","oldc","oldd","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","q","t","bit_rol","bkey","ipad","opad","hash","concat","lsw","msw","num","cnt","str","bin","mask","charCodeAt","String","fromCharCode","binarray","hex_tab","charAt","tab","triplet","j","format","fmt","argIndex","n","escaped","arg","tmp","leadingZero","precision","nextArg","slurpNumber","digits","test","parseFloat","toFixed","replace","toUpperCase","MatchvsLog","toArray","argument","getNowFormatDate","date","___","__","month","getMonth","strDate","getDate","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","openLog","logI","logE","loc","Error","stack","lastIndexOf","closeLog","HEART_BEAT_INTERVAL","ENGE_STATE","NONE","INITING","HAVE_INIT","LOGINING","HAVE_LOGIN","IN_ROOM","CREATEROOM","JOIN_ROOMING","LEAVE_ROOMING","LOGOUTING","RECONNECTING","ENMU_MVS_PTF","MVS_COMMON","MVS_EGRET","MVS_WX","MVSCONFIG","MAXPLAYER_LIMIT","MVS_PTF_ADATPER","HttpConf","HOST_GATWAY_ADDR","HOST_HOTEL_ADDR","GETHOSTLIST_URL","REGISTER_USER_URL","CMSNS_URL","VS_OPEN_URL","VS_PAY_URL","VS_PRODUCT_URL","startsWith","prefix","endsWith","suffix","IncludeJS","fileName","new_element","document","createElement","setAttribute","body","appendChild","MSExtend","Child","Parent","stringToUtf8ByteArray","Uint8Array","buf","utf8ByteArrayToString","f","g","h","join","str2u8array","out","u8array2str","u8array","Uint16Array","apply","LocalStore_Save","localStorage","setItem","setStorageSync","LocalStore_Clear","clearStorageSync","LocalStore_Load","getItem","getStorageSync","isIE","ActiveXObject","getHotelUrl","mBookInfo","getWssproxy","getHoteladdr","commEngineStateCheck","engineState","roomLoock","type","r","o","u","_require","code","l","1","global","$jscomp","scope","getGlobal","initSymbol","Symbol","symbolCounter_","initSymbolIterator","iterator","makeIterator","next","done","arrayFromIterator","arrayFromIterable","inherits","defineProperties","getOwnPropertyDescriptor","defineProperty","array","iteratorFromArray","findInternal","v","from","of","entries","installHelper_","configurable","enumerable","writable","entries$install","keys","keys$install","values","values$install","copyWithin","copyWithin$install","fill","fill$install","find","find$install","findIndex$install","ASSUME_NO_NATIVE_MAP","Map$isConformant","Map","seal","size","set","data_","head_","createHead","maybeGetEntry","entry","previous","head","has","makeIterator_","getId","mapIndex_","idKey","Entry","Map$install","math","clz32","imul","sign","log10","LN10","log2","LN2","log1p","expm1","exp","cosh","sinh","tanh","abs","acosh","sqrt","asinh","atanh","hypot","trunc","Infinity","cbrt","pow","number","isFinite","isInteger","isSafeInteger","EPSILON","MIN_SAFE_INTEGER","is","ASSUME_NO_NATIVE_SET","Set$isConformant","Set","add","map_","Set$install","string","checkStringArgs","TypeError","RegExp","fromCodePoint","RangeError","repeat","repeat$install","codePointAt","codePointAt$install","includes","includes$install","startsWith$install","endsWith$install","COMPILED","goog","isDef","exportPath_","execScript","define","CLOSURE_UNCOMPILED_DEFINES","CLOSURE_DEFINES","DEBUG","LOCALE","TRUSTED_SITE","STRICT_MODE_COMPATIBLE","DISALLOW_TEST_ONLY_CODE","ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING","provide","isProvided_","constructNamespace_","implicitNamespaces_","getObjectByName","VALID_MODULE_RE_","isString","search","isInModuleLoader_","moduleLoaderState_","moduleName","getInternal_","loadedModules_","declareLegacyNamespace","setTestOnly","forwardDeclare","isDefAndNotNull","goog.module","globalize","addDependency","DEPENDENCIES_ENABLED","dependencies_","nameToPath","pathIsModule","_requires","ENABLE_DEBUG_LOADER","logToConsole_","IS_OLD_IE_","maybeProcessDeferredDep_","getPathFromDeps_","writeScripts_","basePath","nullFunction","abstractMethod","addSingletonGetter","instance_","instantiatedSingletons_","LOAD_MODULE_USING_EVAL","SEAL_MODULE_EXPORTS","visited","written","deferred","inHtmlDocument_","findBasePath_","CLOSURE_BASE_PATH","getElementsByTagName","src","substr","importScript_","CLOSURE_IMPORT_SCRIPT","writeScriptTag_","atob","all","importModule_","queuedModules_","wrapModule_","loadQueuedModules_","maybeProcessDeferredPath_","isDeferredModule_","allDepsAreAvailable_","globalEval","loadModuleFromUrl","retrieveAndExecModule_","loadModule","isFunction","loadModuleFromSource_","eval","writeScriptSrcNode_","write","appendScriptSrcNode_","defer","async","readyState","lastNonModuleScriptIndex_","onScriptLoad_","CLOSURE_NO_DEPS","normalizePath_","loadFileSync_","CLOSURE_LOAD_FILE_SYNC","XMLHttpRequest","open","responseText","typeOf","_typeof","propertyIsEnumerable","isNull","isArray","isArrayLike","isDateLike","isObject","isBoolean","isNumber","getUid","UID_PROPERTY_","uidCounter_","hasUid","removeUid","removeAttribute","getHashCode","removeHashCode","cloneObject","clone","bindNative_","bindJs_","unshift","Function","partial","mixin","now","evalWorksForGlobals_","_evalTest_","createTextNode","removeChild","getCssName","cssNameMapping_","cssNameMappingStyle_","setCssNameMapping","CLOSURE_CSS_NAME_MAPPING","getMsg","getMsgWithFallback","exportSymbol","exportProperty","superClass_","callee","caller","defineClass","statics","createSealingConstructor_","applyProperties_","SEAL_CLASS_INSTANCES","UNSEALABLE_CONSTRUCTOR_PROPERTY_","OBJECT_PROTOTYPE_FIELDS_","tagUnsealableClass","dom","NodeType","ELEMENT","ATTRIBUTE","TEXT","CDATA_SECTION","ENTITY_REFERENCE","ENTITY","PROCESSING_INSTRUCTION","COMMENT","DOCUMENT","DOCUMENT_TYPE","DOCUMENT_FRAGMENT","NOTATION","debug","captureStackTrace","reportErrorToServer","DETECT_DOUBLE_ESCAPING","FORCE_NON_DOM_HTML_UNESCAPING","Unicode","NBSP","caseInsensitiveStartsWith","caseInsensitiveCompare","caseInsensitiveEndsWith","caseInsensitiveEquals","toLowerCase","subs","collapseWhitespace","isEmptyOrWhitespace","isEmptyString","isEmpty","isEmptyOrWhitespaceSafe","makeSafe","isEmptySafe","isBreakingWhitespace","isAlpha","isNumeric","isAlphaNumeric","isSpace","isUnicodeChar","stripNewlines","canonicalizeNewlines","normalizeWhitespace","normalizeSpaces","collapseBreakingSpaces","trim","trimLeft","trimRight","numberAwareCompare_","match","intAwareCompare","floatAwareCompare","numerateCompare","urlEncode","encodeURIComponent","urlDecode","decodeURIComponent","newLineToBr","htmlEscape","AMP_RE_","LT_RE_","GT_RE_","QUOT_RE_","SINGLE_QUOTE_RE_","NULL_RE_","E_RE_","ALL_RE_","unescapeEntities","contains","unescapeEntitiesUsingDom_","unescapePureXmlEntities_","unescapeEntitiesWithDocument","&amp;","&lt;","&gt;","&quot;","HTML_ENTITY_PATTERN_","innerHTML","firstChild","nodeValue","whitespaceEscape","preserveSpaces","stripQuotes","truncate","truncateMiddle","specialEscapeChars_","\u0000","\b","\f","\n","\r","\t","\u000b","\"","\\","<","jsEscapeCache_","'","quote","escapeChar","escapeString","caseInsensitiveContains","countOf","removeAt","remove","regExpEscape","removeAll","padNumber","buildString","getRandomString","compareVersions","k","m","exec","compareElements_","hashCode","uniqueStringCounter_","createUniqueString","toNumber","NaN","isLowerCamelCase","isUpperCamelCase","toCamelCase","toSelectorCase","toTitleCase","capitalize","splitLimit","editDistance","asserts","ENABLE_ASSERTS","AssertionError","messagePattern","DEFAULT_ERROR_HANDLER","errorHandler_","doAssertFailure_","setErrorHandler","assert","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","nodeType","assertInstanceof","getType_","assertObjectPrototypeIsIntact","displayName","jspb","arr_","valueCtor_","arrClean","loadFromArray_","Entry_","valueWrapper","stringKeys_","sort","toObject","wrapEntry_","fromObject","ArrayIteratorIterable_","idx_","getLength","del","getEntryList","serializeBinary","beginSubMessage","endSubMessage","deserializeBinary","nextField","isEndGroup","getFieldNumber","NATIVE_ARRAY_PROTOTYPES","ASSUME_NATIVE_FUNCTIONS","peek","last","forEachRight","filter","reduce","reduceRight","some","every","findRight","findIndexRight","insert","insertAt","insertArrayAt","insertBefore","removeIf","removeAllIf","extend","removeDuplicates","binarySearch","binarySearch_","defaultCompare","binarySelect","stableSort","sortByKey","sortObjectsByKey","isSorted","equals","defaultCompareEquality","compare3","inverseDefaultCompare","binaryInsert","binaryRemove","bucket","flatten","rotate","moveItem","zip","shuffle","copyByIndex","crypt","stringToByteArray","byteArrayToString","byteArrayToHex","hexToByteArray","xorByteArray","labs","userAgent","util","getNativeUserAgentString_","getNavigator_","navigator","userAgent_","setUserAgent","getUserAgent","matchUserAgent","matchUserAgentIgnoreCase","extractVersionTuples","isAndroid","isIpod","isIphone","isIpad","isIos","isMacintosh","isLinux","isWindows","isChromeOS","getVersion","isVersionOrHigher","getCount","getAnyKey","getAnyValue","containsValue","getValues","getKeys","getValueByKeys","containsKey","findKey","findValue","setIfUndefined","setWithReturnValueIfNotSet","unsafeClone","transpose","PROTOTYPE_FIELDS_","createSet","createImmutableView","isFrozen","freeze","isImmutableView","browser","matchOpera_","matchIE_","matchEdge_","matchFirefox_","matchSafari_","matchChrome_","matchCoast_","isSilk","matchIosWebview_","matchAndroidBrowser_","isChrome","isFirefox","isOpera","isEdge","isSafari","isCoast","isIosWebview","isAndroidBrowser","getIEVersion_","isPresto","isTrident","isWebKit","isGecko","getEngineTuple_","getVersionForKey_","ASSUME_IE","ASSUME_EDGE","ASSUME_GECKO","ASSUME_WEBKIT","ASSUME_MOBILE_WEBKIT","ASSUME_OPERA","ASSUME_ANY_VERSION","BROWSER_KNOWN_","getUserAgentString","getNavigator","OPERA","IE","EDGE","EDGE_OR_IE","GECKO","WEBKIT","isMobile_","MOBILE","SAFARI","determinePlatform_","PLATFORM","ASSUME_MAC","ASSUME_WINDOWS","ASSUME_LINUX","ASSUME_X11","ASSUME_ANDROID","ASSUME_IPHONE","ASSUME_IPAD","PLATFORM_KNOWN_","MAC","WINDOWS","isLegacyLinux_","LINUX","isX11_","appVersion","X11","ANDROID","IPHONE","IPAD","operaVersion_","opera","version","determineVersion_","getVersionRegexResult_","getDocumentMode_","documentMode","VERSION","compare","isVersionOrHigherCache_","isVersion","isDocumentModeOrHigher","DOCUMENT_MODE","isDocumentMode","compatMode","product","ASSUME_FIREFOX","ASSUME_CHROME","ASSUME_SAFARI","PRODUCT_KNOWN_","FIREFOX","isIphoneOrIpod_","CHROME","isSafariDesktop_","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","ASSUME_NATIVE_SUPPORT_","HAS_NATIVE_ENCODE_","btoa","HAS_NATIVE_DECODE_","encodeByteArray","init_","encodeString","decodeString","decodeStringInternal_","decodeStringToByteArray","decodeStringToUint8Array","ceil","subarray","ExtensionFieldInfo","fieldIndex","fieldName","ctor","toObjectFn","isRepeated","ExtensionFieldBinaryInfo","fieldInfo","binaryReaderFn","binaryWriterFn","binaryMessageSerializeFn","binaryMessageDeserializeFn","isPacked","isMessageType","Message","GENERATE_TO_OBJECT","GENERATE_FROM_OBJECT","GENERATE_TO_STRING","ASSUME_LOCAL_ARRAYS","MINIMIZE_MEMORY_ALLOCATIONS","SUPPORTS_UINT8ARRAY_","getJsPbMessageId","messageId_","getIndex_","arrayIndexOffset_","initialize","wrappers_","initPivotAndExtensionObject_","convertedFloatingPointFields_","pivot_","EMPTY_LIST_SENTINEL_","maybeInitEmptyExtensionObject_","extensionObject_","computeOneofCase","isArray_","MAX_VALUE","toObjectList","toObjectExtension","serializeBinaryExtensions","readBinaryExtension","skipField","getField","getRepeatedField","getOptionalFloatingPointField","getRepeatedFloatingPointField","bytesAsB64","bytesAsU8","bytesListAsB64","assertConsistentTypes_","bytesListAsU8","getFieldWithDefault","getFieldProto3","getMapField","setField","setProto3IntField","setFieldIgnoringDefault_","setProto3FloatField","setProto3BooleanField","setProto3StringField","setProto3StringIntField","setProto3BytesField","setProto3EnumField","addToRepeatedField","setOneofField","getWrapperField","getRepeatedWrapperField","wrapRepeatedField_","setWrapperField","setOneofWrapperField","setRepeatedWrapperField","addToRepeatedWrapperField","toMap","syncMapFields_","getExtension","setExtension","difference","compareFields","compareExtensions","cloneMessage","clone_","copyInto","registerMessageType","registry_","messageId","messageSetExtensions","messageSetExtensionsBinary","arith","UInt64","lo","hi","cmp","rightShift","leftShift","msb","lsb","zero","sub","mul32x32","mul","div","fromString","Int64","BinaryConstants","ConstBinaryMessage","BinaryMessage","FieldType","INVALID","DOUBLE","FLOAT","INT64","UINT64","INT32","FIXED64","FIXED32","BOOL","STRING","GROUP","MESSAGE","BYTES","UINT32","ENUM","SFIXED32","SFIXED64","SINT32","SINT64","FHASH64","VHASH64","WireType","VARINT","DELIMITED","START_GROUP","END_GROUP","FieldTypeToWireType","INVALID_FIELD_NUMBER","FLOAT32_EPS","FLOAT32_MIN","FLOAT32_MAX","FLOAT64_EPS","FLOAT64_MIN","FLOAT64_MAX","TWO_TO_20","TWO_TO_23","TWO_TO_31","TWO_TO_32","TWO_TO_52","TWO_TO_63","TWO_TO_64","ZERO_HASH","utils","split64Low","split64High","splitUint64","splitInt64","splitZigzag64","splitFloat32","round","splitFloat64","splitHash64","joinUint64","joinInt64","joinZigzag64","joinFloat32","joinFloat64","joinHash64","DIGITS","joinUnsignedDecimalString","joinSignedDecimalString","hash64ToDecimalString","hash64ArrayToDecimalStrings","decimalStringToHash64","splitDecimalString","hash64ToHexString","hexStringToHash64","hash64ToNumber","numberToHash64","countVarints","countVarintFields","countFixedFields_","countFixed32Fields","countFixed64Fields","countDelimitedFields","debugBytesToTextFormat","byteSourceToUint8Array","debugScalarToTextFormat","ArrayBuffer","BinaryEncoder","buffer_","writeSplitVarint64","writeSplitFixed64","writeUint32","writeUnsignedVarint32","writeSignedVarint32","writeUnsignedVarint64","writeSignedVarint64","writeZigzagVarint32","writeZigzagVarint64","writeZigzagVarint64String","writeUint8","writeUint16","writeUint64","writeInt8","writeInt16","writeInt32","writeInt64","writeInt64String","writeFloat","writeDouble","writeBool","writeEnum","writeBytes","writeVarintHash64","writeFixedHash64","writeString","BinaryWriter","blocks_","totalLength_","encoder_","bookmarks_","appendUint8Array_","beginDelimited_","writeFieldHeader_","endDelimited_","pop","writeSerializedMessage","maybeWriteSerializedMessage","reset","getResultBuffer","getResultBase64String","writeAny","writeFixed64","writeFixed32","writeSfixed32","writeSfixed64","writeSint32","writeSint64","writeUnsignedVarint32_","writeSignedVarint32_","writeUnsignedVarint64_","writeSignedVarint64_","writeZigzagVarint32_","writeZigzagVarint64_","writeZigzagVarint64String_","writeInt32String","writeUint32String","writeUint64String","writeSint64String","writeFixed64String","writeSfixed64String","writeMessage","writeGroup","writeRepeatedInt32","writeRepeatedInt32String","writeRepeatedInt64","writeRepeatedInt64String","writeRepeatedUint32","writeRepeatedUint32String","writeRepeatedUint64","writeRepeatedUint64String","writeRepeatedSint32","writeRepeatedSint64","writeRepeatedSint64String","writeRepeatedFixed32","writeRepeatedFixed64","writeRepeatedFixed64String","writeRepeatedSfixed32","writeRepeatedSfixed64","writeRepeatedSfixed64String","writeRepeatedFloat","writeRepeatedDouble","writeRepeatedBool","writeRepeatedEnum","writeRepeatedString","writeRepeatedBytes","writeRepeatedMessage","writeRepeatedGroup","writeRepeatedFixedHash64","writeRepeatedVarintHash64","writePackedInt32","writePackedInt32String","writePackedInt64","writePackedInt64String","writePackedUint32","writePackedUint32String","writePackedUint64","writePackedUint64String","writePackedSint32","writePackedSint64","writePackedSint64String","writePackedFixed32","writePackedFixed64","writePackedFixed64String","writePackedSfixed32","writePackedSfixed64","writePackedSfixed64String","writePackedFloat","writePackedDouble","writePackedBool","writePackedEnum","writePackedFixedHash64","writePackedVarintHash64","BinaryIterator","elements_","nextMethod_","decoder_","cursor_","nextValue_","atEnd_","instanceCache_","alloc","free","atEnd","BinaryDecoder","bytes_","tempHigh_","tempLow_","end_","start_","error_","setBlock","getBuffer","getEnd","setEnd","getCursor","setCursor","advance","pastEnd","getError","readSplitVarint64_","skipVarint","unskipVarint","readUnsignedVarint32","readSignedVarint32","readUnsignedVarint32String","readSignedVarint32String","readZigzagVarint32","readUnsignedVarint64","readUnsignedVarint64String","readSignedVarint64","readSignedVarint64String","readZigzagVarint64","readZigzagVarint64String","readUint8","readUint16","readUint32","readUint64","readUint64String","readInt8","readInt16","readInt32","readInt64","readInt64String","readFloat","readDouble","readBool","readEnum","readString","readStringWithLength","readBytes","readVarintHash64","readFixedHash64","BinaryReader","fieldCursor_","nextField_","nextWireType_","readCallbacks_","getFieldCursor","getWireType","unskipHeader","skipMatchingFields","skipVarintField","skipDelimitedField","skipFixed32Field","skipFixed64Field","skipGroup","registerReadCallback","runReadCallback","readAny","readFixed64","readFixed32","readSfixed32","readSfixed64","readSint32","readSint64","readMessage","readGroup","getFieldDecoder","readInt32String","readUint32String","readSint64String","readFixed64String","readSfixed32String","readSfixed64String","readPackedField_","readPackedInt32","readPackedInt32String","readPackedInt64","readPackedInt64String","readPackedUint32","readPackedUint32String","readPackedUint64","readPackedUint64String","readPackedSint32","readPackedSint64","readPackedSint64String","readPackedFixed32","readPackedFixed64","readPackedFixed64String","readPackedSfixed32","readPackedSfixed64","readPackedSfixed64String","readPackedFloat","readPackedDouble","readPackedBool","readPackedEnum","readPackedVarintHash64","readPackedFixedHash64","Export","2","proto","stream","ErrorCode","NOERROR","OK","ACCEPTED","NOCONTENT","BADREQUEST","UNAUTHORIZED","SIGNATUREFAILED","FORBIDDEN","NOTFOUND","INTERNALSERVERERROR","NOTIMPLEMENTED","BADGATEWAY","SERVICEUNAVAILABLE","google-protobuf","3","_module$exports","myProto","myProto1","myProto2","DataProto","_defineProperty","./errorcode_pb","./gateway_pb","./sdk_pb","4","errorcode_pb","LoginReq","opt_data","opt_includeInstance","includeInstance","deviceid","sdkver","vendor","$jspbMessageInstance","bytes","reader","deserializeBinaryFromReader","field","setGameid","setAppkey","setDeviceid","setSign","setSdkver","setVendor","writer","serializeBinaryToWriter","undefined","getGameid","getAppkey","getDeviceid","getSign","getSdkver","getVendor","LoginRsp","roomid","setStatus","setRoomid","getStatus","getRoomid","HeartbeatReq","HeartbeatRsp","gsexist","setGsexist","getGsexist","DisconnectReq","userid","setUserid","getUserid","DisconnectRsp","LogoutRsp","keyValue","setKey","setValue","getKey","getValue","PlayerInfo","userprofile","getUserprofile_asB64","setUserprofile","getUserprofile_asU8","getUserprofile","BookInfo","bookid","bookkey","hoteladdr","wssproxy","setBookid","setBookkey","setHoteladdr","setWssproxy","getBookid","getBookkey","RoomInfo","roomname","maxplayer","mode","canwatch","visibility","roomproperty","getRoomproperty_asB64","setRoomname","setMaxplayer","setMode","setCanwatch","setVisibility","setRoomproperty","setOwner","getRoomname","getMaxplayer","getMode","getCanwatch","getVisibility","getRoomproperty_asU8","getOwner","getRoomproperty","JoinRoomReq","repeatedFields_","jointype","playerinfo","getPlayerinfo","roominfo","getRoominfo","tagsList","getTagsList","cpproto","getCpproto_asB64","setJointype","setPlayerinfo","setRoominfo","addTags","setCpproto","getJointype","getCpproto_asU8","clearPlayerinfo","hasPlayerinfo","clearRoominfo","hasRoominfo","setTagsList","opt_value","opt_index","clearTagsList","getCpproto","JoinRoomRsp","usersList","getUsersList","bookinfo","getBookinfo","addUsers","setBookinfo","setUsersList","clearUsersList","clearBookinfo","hasBookinfo","NoticeJoin","user","getUser","setUser","clearUser","hasUser","NoticeLeave","JoinOverReq","JoinOverRsp","JoinOverNotify","srcuserid","setSrcuserid","getSrcuserid","JoinOpenReq","JoinOpenRsp","JoinOpenNotify","LeaveRoomReq","LeaveRoomRsp","TcpProtoHeader","cmd","setSize","setSeq","setCmd","setVersion","getSize","getSeq","getCmd","ConnDetailV2","fieldid","heartbeattime","setFieldid","setHeartbeattime","getFieldid","getHeartbeattime","UserV2","versionSdk","connectionId","serviceId","roomId","connStatus","setUserId","setGameId","setVersionSdk","setConnectionId","setServiceId","setRoomId","setDeviceId","setConnStatus","getUserId","getGameId","getVersionSdk","getConnectionId","getServiceId","getRoomId","getDeviceId","getConnStatus","NetworkStateReq","setState","getState","NetworkStateRsp","NetworkStateNotify","CreateRoom","CreateRoomRsp","GetRoomList","roomfilter","getRoomfilter","RoomFilter","setRoomfilter","clearRoomfilter","hasRoomfilter","full","setFull","getFull","GetRoomListRsp","roominfoList","getRoominfoList","addRoominfo","setRoominfoList","clearRoominfoList","GetRoomListExReq","order","pageno","pagesize","setSort","setOrder","setPageno","setPagesize","getSort","getOrder","getPageno","getPagesize","RoomInfoEx","gameplayer","watchplayer","createtime","setGameplayer","setWatchplayer","setCreatetime","getGameplayer","getWatchplayer","getCreatetime","GetRoomListExRsp","total","roominfoexList","getRoominfoexList","setTotal","addRoominfoex","getTotal","setRoominfoexList","clearRoominfoexList","GetRoomDetailReq","GetRoomDetailRsp","roomdetail","getRoomdetail","RoomDetail","setRoomdetail","clearRoomdetail","hasRoomdetail","createflag","playerinfosList","getPlayerinfosList","setCreateflag","addPlayerinfos","getCreateflag","setPlayerinfosList","clearPlayerinfosList","KickPlayer","KickPlayerRsp","KickPlayerNotify","SetRoomPropertyReq","SetRoomPropertyRsp","NoticeRoomProperty","CmdId","NOCMD","LOGINREQ","LOGINRSP","LOGOUTREQ","LOGOUTRSP","HEARTBEATREQ","NETWORKSTATEREQ","NETWORKSTATERSP","NOTICENETWORKSTATEREQ","CREATEROOMREQ","CREATEROOMRSP","GETROOMLISTREQ","GETROOMLISTRSP","ROOMLISTEXREQ","ROOMLISTEXRSP","SETROOMPROPERTYREQ","SETROOMPROPERTYRSP","NOTICEROOMPROPERTY","GETROOMDETAILREQ","GETROOMDETAILRSP","JOINROOMREQ","JOINROOMRSP","NOTICEUSERJOINREQ","LEAVEROOMREQ","LEAVEROOMRSP","NOTICEUSERLEAVEREQ","JOINOVERREQ","JOINOVERRSP","JOINOVERNOTIFY","JOINOPENREQ","JOINOPENRSP","JOINOPENNOTIFY","DISCONNECTREQ","DISCONNECTRSP","KICKPLAYERREQ","KICKPLAYERRSP","KICKPLAYERNOTIFY","JoinRoomType","NOJOIN","JOINSPECIALROOM","JOINROOMWITHPROPERTY","JOINRANDOMROOM","RoomState","ROOMSTATENIL","ROOMSTATEOPEN","ROOMSTATECLOSED","RoomListSort","ROOMSORTNIL","ROOMSORTCREATETIME","ROOMSORTPLAYERNUM","ROOMSORTSTATE","SortOrder","SORTASC","SORTDESC","./errorcode_pb.js","5","CheckIn","CheckInAck","checkinsList","playersList","maxplayers","setCheckinsList","setPlayersList","setMaxplayers","getCheckinsList","getPlayersList","getMaxplayers","addCheckins","clearCheckinsList","addPlayers","clearPlayersList","Heartbeat","HeartbeatAck","Broadcast","flag","dstuidsList","setFlag","setDstuidsList","getFlag","getDstuidsList","addDstuids","clearDstuidsList","BroadcastAck","CheckInNotify","Notify","srcuid","priority","setSrcuid","setPriority","getSrcuid","getPriority","Subscribe","confirmsList","cancelsList","addConfirms","addCancels","getConfirmsList","getCancelsList","setConfirmsList","clearConfirmsList","setCancelsList","clearCancelsList","SubscribeAck","groupsList","addGroups","getGroupsList","setGroupsList","clearGroupsList","Publish","PublishAck","dstnum","setDstnum","getDstnum","PublishNotify","SetUseTimeStamp","usetimestamp","setUsetimestamp","getUsetimestamp","SetUseTimeStampAck","timestamp","setTimestamp","getTimestamp","SetFrameSyncRate","framerate","frameidx","setFramerate","setFrameidx","getFramerate","getFrameidx","SetFrameSyncRateAck","SetFrameSyncRateNotify","FrameBroadcast","FrameBroadcastAck","FrameDataNotify","FrameSyncNotify","lastidx","nextidx","startts","endts","setLastidx","setNextidx","setStartts","setEndts","getLastidx","getNextidx","getStartts","getEndts","SDKHotelCmdID","INVALIDSDKCMD","CHECKINCMDID","CHECKINACKCMDID","HEARTBEATCMDID","HEARTBEATACKCMDID","BROADCASTCMDID","BROADCASTACKCMDID","NOTIFYCMDID","CHECKINNOTIFYCMDID","SUBSCRIBECMDID","SUBSCRIBEACKCMDID","PUBLISHCMDID","PUBLISHACKCMDID","PUBLISHNOTIFYCMDID","roomName","maxPlayer","canWatch","roomProperty","MsEnum","NoJoin","joinSpecialRoom","joinRoomWithProperty","reconnect","MsRoomJoin","joinType","roomID","gameID","tags","MsJoinOverRsp","MsJoinOverNotifyInfo","MsCreateRoomRsp","MsCheckIn","bookID","book_key","hotelInfo","MsRoomInfo","ownerID","ownerId","MsRoomUserInfo","MsLeaveRoomRsp","MsLeaveRoomNotify","MsSubscribeEventGroupRsp","groups","MsSendEventGroupNotify","srcUid","MsRegistRsp","MsLoginRsp","MsPublicMemberArgs","channle","secretKey","gatewayID","MsCheckInNotify","checkins","players","maxPlayers","MsSendEventNotify","srcUserId","MsGameServerNotifyInfo","MsSendEventRsp","sequence","MsRoomInfoEx","MsRoomListRsp","MsKickPlayerNotify","MsKickPlayerRsp","MsSetChannelFrameSyncRsp","MsSendFrameEventRsp","MsRoomFilter","MsRoomFilterEx","pageNo","pageSize","MsGetRoomDetailRsp","createFlag","userInfos","MsRoomAttribute","gamePlayer","watchPlaer","createTime","watchPlayer","MsGetRoomListExRsp","roomAttrs","MsFrameItem","MsFrameData","frameIndex","frameWaitCount","MsNetworkStateNotify","MsSetRoomPropertyRspInfo","MsRoomPropertyNotifyInfo","MsHeartBeatResponse","gsExist","MsGatewaySpeedResponse","Status","Seq","MsReopenRoomResponse","MsReopenRoomNotify","MatchvsNetWorkCallBack","onMsg","onErr","errCode","MatchvsNetWork","MatchvsHttp","host","socket","socketOpen","socketMsgQueue","mCallBack","mHost","that","close","buffer","connectSocket","url","onOpen","onConnect","onClose","onDisConnect","onMessage","dataView","DataView","onError","mCallback","isPost","params","request","content-type","post","bufQueue","WebSocket","uint8A","byteLength","getUint8","OPEN","MozWebSocket","hashcode","onmessage","FileReader","readAsArrayBuffer","onload","evt","DONE","onopen","onclose","reason","onerror","alert","http","setRequestHeader","onreadystatechange","statusText","warn","MATCHVS_USER_GATEWAY_SPEED_REQ","MATCHVS_USER_GATEWAY_SPEED_RSP","MATCHVS_USER_LOGIN_REQ","MATCHVS_USER_LOGIN_RSP","MATCHVS_USER_HEARTBEAT_REQ","MATCHVS_USER_HEARTBEAT_RSP","MATCHVS_NOTICE_USER_RELOGIN","MATCHVS_USER_LOGOUT_REQ","MATCHVS_USER_LOGOUT_RSP","MATCHVS_NETWORK_STATE_NOTIFY","MATCHVS_ROOM_CREATE_REQ","MATCHVS_ROOM_CREATE_RSP","MATCHVS_ROOM_JOIN_REQ","MATCHVS_ROOM_JOIN_RSP","MATCHVS_ROOM_JOIN_OVER_REQ","MATCHVS_ROOM_JOIN_OVER_RSP","MATCHVS_ROOM_JOIN_OVER_NOTIFY","MATCHVS_ROOM_LEAVE_REQ","MATCHVS_ROOM_LEAVE_RSP","MATCHVS_ROOM_NOTICE_USER_JOIN","MATCHVS_ROOM_NOTICE_USER_LEAVE","MATCHVS_ROOM_CHECK_IN_REQ","MATCHVS_ROOM_CHECK_IN_RSP","MATCHVS_HEARTBEAT_HOTEL_REQ","MATCHVS_HEARTBEAT_HOTEL_RSP","MATCHVS_BROADCAST_HOTEL_REQ","MATCHVS_BROADCAST_HOTEL_RSP","MATCHVS_HOTEL_NOTIFY","MATCHVS_ROOM_CHECKIN_NOTIFY","CMD_GET_ROOM_LIST_REQ","CMD_GET_ROOM_LIST_RSP","CMD_GET_ROOM_DETAIL_REQ","CMD_GET_ROOM_DETAIL_RSP","CMD_GET_ROOM_LIST_EX_REQ","CMD_GET_ROOM_LIST_EX_RSP","CMD_SET_ROOM_PROPERTY_REQ","CMD_SET_ROOM_PROPERTY_RSP","CMD_SET_ROOM_PROPERTY_NOTIFY","CMD_DISCONNECT_REQ","CMD_DISCONNECT_RSP","CMD_KICK_PLAYER_REQ","CMD_KICK_PLAYER_RSP","CMD_KICK_PLAYER_NOTIFY","CMD_SUBSCRIBE_CMDID","CMD_SUBSCRIBE_ACK_CMDID","CMD_PUBLISH_CMDID","CMD_PUBLISH_ACKCMDID","CMD_PUBLISH_NOTIFYCMDID","CMD_SET_USE_TIMESTAMP_CMDID","CMD_SET_USE_TIMESTAMPACK_CMDID","CMD_SET_FRAME_SYNCRATE_CMDID","CMD_SET_FRAME_SYNCRATEACK_CMDID","CMD_SET_FRAME_SYNCRATENOTIFY_CMDID","CMD_FRAME_BROADCAST_CMDID","CMD_FRAME_BROADCASTACK_CMDID","CMD_FRAME_DATANOTIFY_CMDID","CMD_FRAME_SYNCNOTIFY_CMDID","CMD_ROOM_JOIN_OPEN_REQ","CMD_ROOM_JOIN_OPEN_RSP","CMD_ROOM_JOIN_OPEN_NOT","FIXED_HEAD_SIZE","Packet","payload","MatchvsHeader","MatchvsProtoMap","MsProtoMapDesc","MatchvsProtocol","mUserID","msProtoMap","fillHeader","dataArray","setInt32","setInt16","setUint8","parseHeader","getInt32","getInt16","handleMsg","ext","protoMap","packet","userToken","app_key","app_secret","gateway_id","toMd5","md5","versionSDK","_user","_gameID","setUint32","setUint16","roomCreate","maxUser","pRoomInfo","pPlayInfo","pi","roomJoin","playInfo","joinRoomSpecial","joinRoomWithProperties","kvtags","tag","roomCheckIn","bookInfo","pkg","getRoomList","roomFilter","getRoomListEx","getRoomDetail","heartBeat","broadCast","destUids","destType","msgType","broadcast","subscribeEventGroup","confirms","cancels","subscribe","sendEventGroup","sendevnt","hotelHeartBeat","heartbeat","disConnect","paker","kickPlayer","kick","frameRate","reqEx","setRoomProperty","joinOpen","M_ENGINE","mChannel","mPlatform","mMsPubArgs","mEngineState","mAllPlayers","mRecntRoomID","mUserListForJoinRoomRsp","joinRoomNotifyInfo","mNetWork","mHotelNetWork","mHotelHeartBeatTimer","mProtocol","NetWorkCallBackImp","lastTime","timer","frameCache","time","mRsp","reconbuf","reconnectResponse","mRoomInfo","mNetWorkCallBackImp","roomUserList","roomuser","roomCheckInNotify","hotelHeartBeatRsp","sendEventResponse","gameServerNotify","subscribeEventGroupResponse","sendEventGroupResponse","sendEventGroupNotify","gatewaySpeedResponse","heartBeatResponse","roominfolist","roomList","disConnectResponse","sendFrameEventResponse","frameData","msFrameData","roomInfoList","roomAttr","roomListExInfo","roomDetail","playerlist","player","userinfo","roomDetailRsp","joinoverNotifyInfo","joinOverNotify","setRoomPropertyResponse","setRoomPropertyNotify","joinOpenResponse","joinOpenNotify","mGameID","getHostList","loginbuf","pGameID","pGameVersion","pAppKey","pSecretKey","mToken","mGameVersion","mAppKey","createRoom","createRoomInfo","uninit","hotelNetWork","matchinfo","joinRoom","loginRsp","notifyInfo","notify","tRsp","dstNum","rep","Instance","userids","desttype","_engine","cacheKey","cacheUserInfo","nickname","uri","port","vsuser","websocket","wssProxy","cmsns","vsopen","vspay","hashSet","httpReq","hashGet","Base64","_keyStr","encode","input","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8_encode","decode","_utf8_decode","utftext","c1","c2","c3","protocol","dcodeIO","ProtoBuf","newBuilder","populateAccessors","package","syntax","messages","rule","enums","services","options","rpc","request_stream","response_stream","isNamespace","build","initNetwork","pomeloBuildObj","pomeloBuild","pomelo","isBinding","netListener","_registerNetEvent","curMsgName","routerManager","receiveRouterFromServer","route","getCurMsgName","ip","cb","netConfig","isKicked","wsStr","disconnect","guid","s4","routeStr","dataObj","uuid","addRouterToManager","msgOrigin","router","setNetLoadingStatus","checkNetLoadingStatus","keysLength","currentTime","routerTime","deltaTime","netLoadingCheckInterval","clearCallback","isConnecting","isOpen","isClosed","isClosing","msgName","msgContent","playerSprite","default","Sprite","active","userInfoSet","load","texture","spriteFrame","SpriteFrame","Rect","playerIconAnim","selfNode","rivalNode","boomClip","AudioClip","shield","boomPrefab","heart","bUnmatched","onCollisionEnter","other","group","groupList","groupIndex","sendHurtMsg","sendDiffuseItemMsg","unmatchedState","sendRadintionItemMsg","audioEngine","play","boom","v2","dead","animation","_this","Animation","scheduleOnce","pause","opacity","itemId","modules","aliases","requirePomelo","path","orig","resolved","resolve","client","component","relative","paths","resolvePath","normalize","curr","segs","register","definition","alias","to","arr","selfPomelo","localrequirePomelo","exists","Emitter","_callbacks","once","_off","removeListener","removeAllListeners","callbacks","emit","listeners","hasListeners","ByteArray","Protocol","PKG_HEAD_BYTES","MSG_FLAG_BYTES","MSG_ROUTE_CODE_BYTES","MSG_ID_MAX_BYTES","MSG_ROUTE_LEN_BYTES","MSG_ROUTE_CODE_MAX","MSG_COMPRESS_ROUTE_MASK","MSG_TYPE_MASK","Package","TYPE_HANDSHAKE","TYPE_HANDSHAKE_ACK","TYPE_HEARTBEAT","TYPE_DATA","TYPE_KICK","TYPE_REQUEST","TYPE_NOTIFY","TYPE_RESPONSE","TYPE_PUSH","strencode","byteArray","offset","charCode","codes","_buffer","copyArray","strdecode","chunk","compressRoute","idBytes","msgHasId","caculateMsgIdBytes","msgLen","msgHasRoute","encodeMsgFlag","encodeMsgId","encodeMsgRoute","encodeMsgBody","bytesLen","byte","routeLen","bodyLen","dest","doffset","soffset","copy","Buffer","Protobuf","encoder","encoderProtos","decoder","decoderProtos","protobuf","constants","TYPES","uInt32","sInt32","int32","double","float","Util","isSimpleType","Codec","codec","float32Array","Float32Array","float64Array","Float64Array","uInt8Array","encodeUInt32","encodeSInt32","decodeUInt32","decodeSInt32","encodeFloat","decodeFloat","encodeDouble","decodeDouble","encodeStr","encode2UTF8","decodeStr","codeLength","MsgEncoder","constant","protos","checkMsg","encodeMsg","option","__messages","encodeTag","encodeProp","encodeArray","tmpBuffer","MsgDecoder","setProtos","decodeMsg","getHead","__tags","decodeProp","decodeArray","isFinish","peekHead","getBytes","peekBytes","pos","JS_WS_CLIENT_TYPE","JS_WS_CLIENT_VERSION","EventEmitter","RES_OK","RES_FAIL","RES_OLD_CLIENT","F","root","reqId","routeMap","heartbeatInterval","heartbeatTimeout","nextHeartbeatTimeout","gapThreshold","heartbeatId","heartbeatTimeoutId","handshakeCallback","handshakeBuffer","sys","initCallback","initWebSocket","processPackage","binaryType","clearTimeout","sendMessage","CONNECTING","CLOSED","CLOSING","dict","heartbeatTimeoutCb","gap","handshake","handshakeInit","onData","deCompose","processMessage","onKick","processMessageBatch","msgs","server","abbrs","initData","trackingNode","twinkleState","stop","rotation","trackingNodePos","rankCntLb","Label","userNameLb","userIcon","userScoreLb","rank","score","icon","nameLb","roomIdLb","roomNameLb","msRoomAttribute","ownerTag","otherTag","selfTag","defaultNode","commonNode","uiPanel","_super","playerCntLb","nodeDict","playerCnt","refreshBtnState","quit","addPlayerCount","subPlayerCount","Button","interactable","EditBox","room","createRoomInit","sure","_cc$Class","bgmAudio","bCreateBullet","bExit","onFinished","exit","bgmId","showLcon","playerLcon","rivalLcon","createBullet","sendAddBulletMsg","scheduleBullet","sendDirectMsg","AudioSource","exitGam","randomRoom","inviteFriend","onEnable","matching","shareAppMessage","imageUrl","uiOperateCallBack","isUseMask","lastMaskIndex","ui","panel","refresh","playerIcons","tagsInfo","playerIcon","notifyGameStart","playerModel","playerTemp","addChild","linkWidget","children","widgetName","nodeName","childrenCount","rankPrefab","rank1Node","rank2Node","rank3Node","rank1Info","rank2Info","rank3Info","rankdata","rankInfo","loseClip","victoryClip","player1","player2","player3","loseCamp","Camp","Friend","roomPrefab","editBox","rooms","roomRqId","roomScript","joinRoomInit","playerPrefab","refreshStartBtn","spNode","btn","color","Color","WHITE","BLACK","isLose"],"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A8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;;QAAA9V,MAAA;QAAAs8E,QAAA;QAAAh5E;UAAAk5E,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;UAAA0mE,MAAA;UAAAx2D,MAAA;UAAAhmB,MAAA;UAAA8V,IAAA;;;MAAA2mE;QAAAz8E,MAAA;QAAAs8E,QAAA;QAAA9zD;UAAAxoB,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;;QAAA9V,MAAA;QAAAs8E,QAAA;QAAA9zD;UAAAxoB,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;;QAAA9V,MAAA;QAAAs8E,QAAA;QAAA9zD;UAAAxoB,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;UAAA9V,MAAA;UAAA8V,IAAA;;;MAAA4mE;QAAA18E,MAAA;QAAA28E;QAAAC;UAAA5R;YAAAA,SAAA;YAAA6R,gBAAA;YAAA7wE,UAAA;YAAA8wE,iBAAA;YAAAH;;;;MAAAI,aAAA;OAAAC,QAAA;IACAnxE,OAAAC,UAAAkwE;;;;;;;ICDAp+E,OAAAkX;MACImoE,aAAA,SAAAA;QACI/4E,KAAAg5E,iBAAAC,YAAA5pE;QACArP,KAAAk5E,SAAAl5E,KAAAg5E,eAAAE;QAEAl5E,KAAAm5E,YAAA;QAEA,KAAAn5E,KAAAm5E,WAAA;UACIn5E,KAAAumE,YAAAvmE,KAAAumE,UAAA9kE,KAAAzB;UACAA,KAAAm5E,YAAA;;QAIJn5E,KAAAo5E,cAAAhqE,cAAAC,OAAA;QACArP,KAAA83C;QACA93C,KAAAq5E;;MAGJvhC,OAAA,SAAAA;QACI93C,KAAAs5E,aAAA;QAGAt5E,KAAAu5E;;MAKJF,mBAAA,SAAAA;QACIr5E,KAAAk5E,OAAA,MAAA,qBAAA;UACIl5E,KAAAk5E,OAAA;UAEAl5E,KAAAo5E,YAAA1pE,SAAA;UACHjO,KAAAzB;QAEDA,KAAAk5E,OAAA,MAAA,kBAAA;UACItrE,YAAA8B,SAAA,sBAAA;UACHjO,KAAAzB;QAEDA,KAAAk5E,OAAA,MAAA,SAAA;UACIl5E,KAAAk5E,OAAA;UAEAl5E,KAAAo5E,YAAA1pE,SAAA;UACHjO,KAAAzB;QAEDA,KAAAk5E,OAAA,MAAA,UAAA;UACIl5E,KAAAo5E,YAAA1pE,SAAA;UAGA1P,KAAAw5E,wBAAA;UACH/3E,KAAAzB;;MAIL0M,IAAA,SAAAA,GAAA+sE;QACIz5E,KAAAo5E,YAAA1sE,GAAAiU,MAAA3gB,KAAAo5E,aAAA/6E;QACA66E,OAAA,MAAAO,OAAAz5E,KAAAumE;;MAGJmT,eAAA,SAAAA;QACI,OAAA15E,KAAAs5E;;MAGJtjE,SAAA,SAAAA,QAAA2jE,IAAA1D,MAAA2D;QACI,IAAAC;UACIrU,MAAAmU;UACA1D,MAAAA;UACAzwE,KAAA;;QAGJxF,KAAA85E,WAAA;QACAD,UAAAE,QAAA;QAGA/zE,WAAA;UACIhG,KAAAk5E,OAAA,QAAAW,WAAA;YACID,MAAAA;YACHn4E,KAAAzB;UACJyB,KAAAzB,OAAA;;MAGLg6E,YAAA,SAAAA;QACIh6E,KAAA6V,iBACI7V,KAAAk5E,OAAA;;MAMRe,MAAA,SAAAA;QACI,SAAAC;UACI,OAAAx4E,KAAAE,MAAA,SAAA,IAAAF,KAAA+J,WAAAxM,SAAA,IAAAsC,UAAA;;QAKJ,OAAA24E,OAAAA,OAAA,MAAAA,OAAA,MAAAA,OAAA,MAAAA,OAAA,MAAAA,OAAAA,OAAAA;;MAIJpkE,MAAA,SAAAA,KAAAqkE,UAAAC;QACI,uBAAAA,YACIA;QAIJA,QAAAC,OAAAr6E,KAAAi6E;QACA10E,QAAAC,IAAA,gBAAA20E,WAAA,WAAAnmE,KAAAuB,UAAA6kE;QAGAp6E,KAAAs6E,mBAAAH;QAEAn6E,KAAA6V,iBACI7V,KAAAk5E,OAAA,WAAAiB,UAAAC,SAAAp6E,KAAAumE;;MAIRA,WAAA,SAAAA,UAAAgU;QACI,IAAAC,SAAAD,UAAA;QAEAv6E,KAAAw5E,wBAAAgB;QAEAj1E,QAAAC,IAAA,uBAAAwO,KAAAuB,UAAAglE;QAEA,QAAAA,UAAA,QAAA,WACIn/E,GAAAM,MAAA,6CAAA8+E;QAKJ,KAAAA,QAAA;UACIp/E,GAAAM,MAAA;UACA;;QAIJ,IAAAsD,OAAAolB,KAAAm2D,UAAA,SAAA1+E,UAAA,GAAA;UACIT,GAAAM,MAAA;UACA;;QAGJsE,KAAAs5E,aAAAiB,UAAA;QAEAv6E,KAAAo5E,YAAA1pE,SAAA6qE,UAAA,UAAAA,UAAA;;MAGJE,qBAAA,SAAAA,oBAAA/f;QACIA,QAGI9sD,YAAA8B,SAAA,aAAA;;MAURgrE,uBAAA,SAAAA;QACI,IAAAt2D,OAAAplB,OAAAolB,KAAApkB,KAAAu5E;QACA,IAAAoB,aAAAv2D,KAAAvoB;QACA,IAAA8+E,cAAA,GAAA;UACI36E,KAAAo5E,YAAA1pE,SAAA,aAAA;UACA;;QAGJ,IAAAkrE,cAAArzE,KAAAypB;QACA,KAAA,IAAAx2B,OAAAwF,KAAAu5E,eACI,IAAAv5E,KAAAu5E,cAAA3+E,eAAAJ,MAAA;UACI,IAAAqgF,aAAA76E,KAAAu5E,cAAA/+E;UACA,IAAAsgF,YAAAF,cAAAC;UACA,IAAAC,YAAA96E,KAAA+6E,yBAGI;;;MAWhBT,oBAAA,SAAAA,mBAAAE;QACI,IAAAp2D,OAAAplB,OAAAolB,KAAApkB,KAAAu5E;QAGA,KAAA,MAAAn1D,KAAAnkB,QAAA,mBAAA;UAEI,qBAAAu6E,WACIx6E,KAAAu5E;UAGJn1D,OAAAplB,OAAAolB,KAAApkB,KAAAu5E;UACA,IAAAt9E,QAAAmoB,KAAAnkB,QAAAu6E;UACA,KAAA,MAAAv+E,OAAA;YACI,IAAA2+E,cAAArzE,KAAAypB;YACAhxB,KAAAu5E,cAAAiB,UAAAI;;;;MASZpB,yBAAA,SAAAA,wBAAAgB;QACI,IAAA,2BAAAA,QAAA;UACIx6E,KAAAu5E;UACAv5E,KAAA06E;UACA;;QAEJ,IAAAt2D,OAAAplB,OAAAolB,KAAApkB,KAAAu5E;QACA,IAAAt9E,QAAAmoB,KAAAnkB,QAAAu6E;QACA,IAAAv+E,SAAA,GAAA;UACIsJ,QAAAC,IAAAg1E,QAAA,QAAAjzE,KAAAypB,QAAAhxB,KAAAu5E,cAAAiB,SAAA;iBACAx6E,KAAAu5E,cAAAiB;UAGAx6E,KAAA06E;;;MAMRM,eAAA,SAAAA;QACIh7E,KAAAk5E,UAAAl5E,KAAAk5E,OAAA8B;;;IAIRpqE,QAAAqqE,eAAA;MACI,OAAAj7E,KAAAk5E,OAAA+B;;IAGJrqE,QAAAiF,cAAA;MACI,OAAA7V,KAAAk5E,OAAAgC;;IAGJtqE,QAAAuqE,WAAA;MACI,OAAAn7E,KAAAk5E,OAAAiC;;IAGJvqE,QAAAwqE,YAAA;MACI,OAAAp7E,KAAAk5E,OAAAkC;;IAGJxqE,QAAAC,oBAAA;MACI7Q,KAAA+4E;MACA,IAAA/4E,KAAAk5E,QACI,KAAA,IAAA1+E,OAAAwF,KAAAo5E,aACIp5E,KAAAk5E,OAAA,MAAA1+E,KAAAwF,KAAAumE;;IAKZ31D,QAAAlE,KAAA,SAAA2uE,SAAA9rE;MACIvP,KAAAo5E,YAAA1sE,GAAA2uE,SAAA9rE;;IAGJqB,QAAAlB,WAAA,SAAA2rE,SAAAC;MACIt7E,KAAAo5E,YAAA1pE,SAAA2rE,SAAAC;;;;;;;;ICvQJlgF,GAAA0O;MACIC,SAAA3O,GAAA4O;MACAC;QACIsxE;UACIC,SAAA;UACA15D,MAAA1mB,GAAAqgF;;;MAGRnoE,SAAA,SAAAA,QAAA1O;QACI5E,KAAA4E,WAAAA;QACA5E,KAAA2U,WAAA/P,SAAAgN,KAAAhN,SAAAgN,KAAAhN,SAAA+M;QACA3R,KAAAu7E,aAAAlyE,KAAAqyE,SAAA;QACA75E,KAAAC,YAAAqU,YAAAnW,KAAA2U;;MAGJlP,MAAA,SAAAA;QACIzF,KAAA4E,WAAA;QACA5E,KAAAu7E,aAAAlyE,KAAAqyE,SAAA;QACA9tE,YAAAlB,GAAAkB,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;;MAGJ27E,aAAA,SAAAA,YAAAlmE;QACIA,QAAAM,WAAA/V,KAAA2U,YACIc,QAAAS,YAAA,QAAAT,QAAAS,YACI9a,GAAAC,OAAAugF;UAAA1V,KAAAzwD,QAAAS;UAAA4L,MAAA;WAAA,SAAAtmB,KAAAqgF;UACI,IAAAC,cAAA,IAAA1gF,GAAA2gF,YAAAF,SAAAzgF,GAAA4gF,KAAA,GAAA,GAAAH,QAAA/nE,OAAA+nE,QAAAhoE;UACA7T,KAAAu7E,aAAAO,cAAAA;UACHr6E,KAAAzB;;MAKboW,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;;MAGJ83C,OAAA,SAAAA;QACI93C,KAAAi8E,eAAA5yE,KAAAqyE,SAAA;;MAGJnxE,QAAA,SAAAA;QACIvK,KAAAyF;;;;;;;;;ICzCRrK,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAC;QACIiyE,UAAA9gF,GAAAuR;QACAwvE,WAAA/gF,GAAAuR;;MAGJpC,QAAA,SAAAA;QACI1I,KAAAI,gBAAAjC;QACAA,KAAAoN,OAAApN,KAAAk8E,SAAA3yE,aAAA;QACAvJ,KAAAoN,KAAA3H,KAAA7C,IAAAiC,cAAA;QACA7E,KAAAyU,QAAAzU,KAAAm8E,UAAA5yE,aAAA;QACAvJ,KAAAyU,MAAAhP,KAAA7C,IAAAiC,cAAA;;;;;;;;;ICbR,IAAAoL,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAC;QACImyE;UACIZ,SAAA;UACAtV,KAAA9qE,GAAAihF;;QAEJC;UACId,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ4vE;UACIf,SAAA;UACA15D,MAAA1mB,GAAA+O;;;MAIR1E,MAAA,SAAAA,KAAAkP;QACI3U,KAAA2U,WAAAA;QACA3U,KAAAyM,YAAArR,GAAAwQ;QACA5L,KAAAwN,cAAAxN,KAAAqJ,KAAA0L;QACA/U,KAAAw8E,QAAA;QACAx8E,KAAAy8E,aAAA;QACAz8E,KAAAs8E,OAAAZ,SAAA;;MAEJgB,kBAAA,SAAAA,iBAAAC;QACI,IAAAC,QAAAxhF,GAAAiV,KAAAwsE,UAAAF,MAAAtzE,KAAAyzE;QACA,gBAAAF,QACI58E,KAAA+8E,gBACH,kBAAAH,SAAA,WAAA58E,KAAAqJ,KAAAvN,OAEGkE,KAAA+8E,gBACH,iBAAAH,SAAA,YAAA58E,KAAAqJ,KAAAvN,QAEGkE,KAAA+8E;QAEJ,IAAA,kBAAAH,OAAA;UACI58E,KAAAg9E,mBAAAL,MAAA/qE;UACA+qE,MAAApzE,aAAA,QAAA2N;UACAlX,KAAAi9E,eAAA;;QAEJ,IAAA,oBAAAL,OAAA;UACI58E,KAAAk9E,qBAAAP,MAAA/qE;UACA+qE,MAAApzE,aAAA,QAAA2N;UACAlX,KAAAi9E,eAAA;;;MAIRroE,MAAA,SAAAA;QAEI,IAAA5U,KAAAy8E,YACI;QAEJ,IAAA56E,KAAAC,YAAAkP,WACI;QAEJ5V,GAAA+hF,YAAAC,KAAAp9E,KAAAo8E,UAAA,OAAA;QACA,IAAAp8E,KAAAw8E,QAAA,GAAA;UACIx8E,KAAAw8E;UACA,IAAA,MAAAx8E,KAAAw8E,OACIx8E,KAAAi9E,eAAA,gBACH,IAAAj9E,KAAAw8E,SAAA,GAAA;YAEG36E,KAAAC,YAAAkP,YAAA;YACA,IAAAqsE,OAAAjiF,GAAA6N,YAAAjJ,KAAAu8E;YACAc,KAAAn0E,SAAAlJ,KAAAqJ;YACAg0E,KAAApxE,WAAA7Q,GAAAkiF,GAAA,GAAA;YACAt9E,KAAAu9E;;;;MAKZA,MAAA,SAAAA;QAEI,IAAA36E,IAAAkC,aAAA;UACI,IAAAsO;YACIiC,QAAAzS,IAAAQ;;UAEJvB,KAAAC,YAAAwT,YAAAlC;;;MAIR6pE,gBAAA,SAAAA,eAAAO;QAAyB,IAAAC,QAAAz9E;QACvBA,KAAAy8E,aAAA;QACAz8E,KAAAs8E,OAAAZ,SAAA;QACA17E,KAAAqJ,KAAAE,aAAAnO,GAAAsiF,WAAAN,KAAAI;QACAx9E,KAAA29E,aAAA;UACIF,MAAAhB,aAAA;UACAgB,MAAAnB,OAAAZ,SAAA;UACA+B,MAAAp0E,KAAAE,aAAAnO,GAAAsiF,WAAAE,MAAAJ;UACAC,MAAAp0E,KAAAw0E,UAAA;WACH;;MAGHxwE,gBAAA,SAAAA;QACIrN,KAAAwN,cAAAxN,KAAAqJ,KAAA0L;;MAEJP,WAAA,SAAAA,UAAAvI;QAEIjM,KAAAqJ,KAAA8B,YAAAc;;MAEJ8wE,aAAA,SAAAA;QACIl7E,KAAAC,YAAA2P,cAAAtP,UAAAI,QAAAK,IAAAkC,eACImL,IAAApI,OAAAiP,eAAA9C,KAAAuB;UACIF,QAAAzS,IAAAiB;UACA8Q,UAAA3U,KAAA2U;;;MAIZqoE,oBAAA,SAAAA,mBAAAc;QACIj8E,KAAAC,YAAA2P,cAAAtP,UAAAI,QAAAK,IAAAkC,eACImL,IAAApI,OAAAiP,eAAA9C,KAAAuB;UACIF,QAAAzS,IAAAkB;UACA6Q,UAAA3U,KAAA2U;;;MAIZuoE,sBAAA,SAAAA,qBAAAY;QACIj8E,KAAAC,YAAA2P,cAAAtP,UAAAI,QAAAK,IAAAkC,eACImL,IAAApI,OAAAiP,eAAA9C,KAAAuB;UACIF,QAAAzS,IAAAmB;UACA4Q,UAAA3U,KAAA2U;;;;;;;;;;;;;;;;;;MCpHhB,IAAAiR,MAAA5mB,OAAAd,UAAAtD;MAEA,IAAAq+E,cAAA79E,GAAA0O;QACIS,QAAA,SAAAA;UAKIvK,KAAA+9E;UAMA/9E,KAAAg+E;;QAGJC,eAAA,SAAAA,cAAAC,MAAAh1E,QAAAi1E;UACI,IAAAC,WAAAp+E,KAAAq+E,QAAAH;UAGA,IAAA,SAAAE,UAAA;YACID,OAAAA,QAAAD;YACAh1E,SAAAA,UAAA;YACA,IAAA1N,MAAA,IAAAshB,MAAA,8BAAAqhE,OAAA,aAAAj1E,SAAA;YACA1N,IAAA0iF,OAAAC;YACA3iF,IAAA0N,SAAAA;YACA1N,IAAAyiF,gBAAA;YACA,MAAAziF;;UAGJ,IAAAmM,SAAA3H,KAAA+9E,QAAAK;UAKA,KAAAz2E,OAAAC,SAAA;YACID,OAAAC;YACAD,OAAA22E,SAAA32E,OAAA42E,YAAA;YACA52E,OAAAvJ,KAAA4B,MAAA2H,OAAAC,SAAA5H,KAAAw+E,SAAAJ,WAAAz2E;;UAGJ,OAAAA,OAAAC;;QAiBJy2E,SAAA,SAAAA,QAAAH;UACI,QAAAA,KAAA7jE,OAAA,OAAA6jE,OAAAA,KAAA//E,MAAA;UACA,IAAAlC,QAAAiiF,OAAA;UAEA,IAAAO,UAAAP,MAAAA,OAAA,OAAAA,OAAA,SAAAA,OAAA,aAAAA,OAAA;UAQA,KAAA,IAAAtiF,IAAA,GAAAA,IAAA6iF,MAAA5iF,QAAAD,KAAA;YACI,IAAA8iF,cAAAD,MAAA7iF;YACA,IAAAgqB,IAAAxnB,KAAA4B,KAAA+9E,SAAAW,cAAA,OAAAA;;UAGJ,IAAA94D,IAAAxnB,KAAA4B,KAAAg+E,SAAA/hF,QACI,OAAA+D,KAAAg+E,QAAA/hF;;QAaR0iF,WAAA,SAAAA,UAAAC,MAAAV;UACI,IAAAW;UAEA,IAAA,QAAAX,KAAA7jE,OAAA,IAAA,OAAA6jE;UAEAU,OAAAA,KAAAl+E,MAAA;UACAw9E,OAAAA,KAAAx9E,MAAA;UAEA,KAAA,IAAA9E,IAAA,GAAAA,IAAAsiF,KAAAriF,UAAAD,GACI,SAAAsiF,KAAAtiF,KACIgjF,KAAAjnC,QACH,QAAAumC,KAAAtiF,MAAA,OAAAsiF,KAAAtiF,MACGijF,KAAA9hF,KAAAmhF,KAAAtiF;UAIR,OAAAgjF,KAAAplE,OAAAqlE,MAAAx+D,KAAA;;QAWJy+D,UAAA,SAAAA,SAAAZ,MAAAa;UACI/+E,KAAA+9E,QAAAG,QAAAa;;QAWJC,OAAA,SAAAA,MAAAp7D,MAAAq7D;UACI,KAAAr5D,IAAAxnB,KAAA4B,KAAA+9E,SAAAn6D,OACI,MAAA,IAAA9G,MAAA,sBAAA8G,OAAA;UAEJ5jB,KAAAg+E,QAAAiB,MAAAr7D;;QAWJ46D,UAAA,SAAAA,SAAAt1E;UACI,IAAA0C,IAAA5L,KAAA2+E,UAAAz1E,QAAA;UAMA,SAAA8T,YAAAkiE,KAAAngF;YACI,IAAAnD,IAAAsjF,IAAArjF;YACA,OAAAD,KACI,IAAAsjF,IAAAtjF,OAAAmD,KAAA,OAAAnD;YAEJ,QAAA;;UAOJ,IAAAujF,aAAAn/E;UACA,SAAAo/E,mBAAAlB;YACI,IAAAE,WAAAgB,mBAAAf,QAAAH;YACA,OAAAiB,WAAAlB,cAAAG,UAAAl1E,QAAAg1E;;UAOJkB,mBAAAf,UAAA,SAAAH;YACI,IAAA5lE,IAAA4lE,KAAA7jE,OAAA;YACA,IAAA,QAAA/B,GAAA,OAAA4lE,KAAA//E,MAAA;YACA,IAAA,QAAAma,GAAA,OAAA6mE,WAAAR,UAAA/yE,GAAAsyE;YAKA,IAAAW,OAAA31E,OAAAxI,MAAA;YACA,IAAA9E,IAAAohB,YAAA6hE,MAAA,UAAA;YACAjjF,MAAAA,IAAA;YACAsiF,OAAAW,KAAA1gF,MAAA,GAAAvC,IAAA,GAAAykB,KAAA,OAAA,WAAA69D;YACA,OAAAA;;UAOJkB,mBAAAC,SAAA,SAAAnB;YACI,OAAAt4D,IAAAxnB,KAAA+gF,WAAApB,SAAAqB,mBAAAf,QAAAH;;UAGJ,OAAAkB;;;MAIRnG,YAAA5pE,SAAA;QACI,IAAA2pE,iBAAA,IAAAC;QACAD,eAAAzuE;QAEAyuE,eAAA8F,SAAA,8BAAA,SAAAl3E,SAAAq2E,eAAAt2E;UAEI,IAAA1H,aAAAA;UAEA0H,OAAAC,UAAA,SAAAs3E,KAAAngF;YACI,IAAAkB,SAAA,OAAAi/E,IAAAj/E,QAAAlB;YACA,KAAA,IAAAnD,IAAA,GAAAA,IAAAsjF,IAAArjF,UAAAD,GACI,IAAAsjF,IAAAtjF,OAAAmD,KAAA,OAAAnD;YAEJ,QAAA;;;QAIRo9E,eAAA8F,SAAA,8BAAA,SAAAl3E,SAAAq2E,eAAAt2E;UAMI,IAAA1L,QAAAgiF,cAAA;UAMAt2E,OAAAC,UAAA03E;UAQA,SAAAA,QAAAvgF;YACI,IAAAA,KAAA,OAAAgyB,MAAAhyB;;UAWJ,SAAAgyB,MAAAhyB;YACI,KAAA,IAAAvE,OAAA8kF,QAAAphF,WACIa,IAAAvE,OAAA8kF,QAAAphF,UAAA1D;YAEJ,OAAAuE;;UAYJugF,QAAAphF,UAAAwO,KAAA,SAAArF,OAAAzI;YACIoB,KAAAu/E,aAAAv/E,KAAAu/E;aACAv/E,KAAAu/E,WAAAl4E,SAAArH,KAAAu/E,WAAAl4E,cAAAtK,KAAA6B;YAEA,OAAAoB;;UAaJs/E,QAAAphF,UAAAshF,OAAA,SAAAn4E,OAAAzI;YACI,IAAAwO,OAAApN;YACAA,KAAAu/E,aAAAv/E,KAAAu/E;YAEA,SAAA7yE;cACIU,KAAAoC,IAAAnI,OAAAqF;cACA9N,GAAA+hB,MAAA3gB,MAAA3B;;YAGJO,GAAA6gF,OAAA/yE;YACA1M,KAAA0M,GAAArF,OAAAqF;YACA,OAAA1M;;UAaJs/E,QAAAphF,UAAAsR,MAAA8vE,QAAAphF,UAAAwhF,iBAAAJ,QAAAphF,UAAAyhF,qBAAA,SAAAt4E,OAAAzI;YAGYoB,KAAAu/E,aAAAv/E,KAAAu/E;YAGA,IAAA,MAAAlhF,UAAAxC,QAAA;cACImE,KAAAu/E;cACA,OAAAv/E;;YAIJ,IAAA4/E,YAAA5/E,KAAAu/E,WAAAl4E;YACA,KAAAu4E,WAAA,OAAA5/E;YAGA,IAAA,MAAA3B,UAAAxC,QAAA;qBACImE,KAAAu/E,WAAAl4E;cACA,OAAArH;;YAIJ,IAAApE,IAAAK,MAAA2jF,WAAAhhF,GAAA6gF,QAAA7gF;aACAhD,KAAAgkF,UAAAj/E,OAAA/E,GAAA;YACA,OAAAoE;;UAWZs/E,QAAAphF,UAAA2hF,OAAA,SAAAx4E;YACIrH,KAAAu/E,aAAAv/E,KAAAu/E;YACA,IAAAthF,UAAAE,MAAAC,KAAAC,WAAA,IAAAuhF,YAAA5/E,KAAAu/E,WAAAl4E;YAEA,IAAAu4E,WAAA;cACIA,YAAAA,UAAAzhF,MAAA;cACA,KAAA,IAAAvC,IAAA,GAAA4C,MAAAohF,UAAA/jF,QAAAD,IAAA4C,OAAA5C,GACIgkF,UAAAhkF,GAAA+kB,MAAA3gB,MAAA/B;;YAIR,OAAA+B;;UAWJs/E,QAAAphF,UAAA4hF,YAAA,SAAAz4E;YACIrH,KAAAu/E,aAAAv/E,KAAAu/E;YACA,OAAAv/E,KAAAu/E,WAAAl4E;;UAWJi4E,QAAAphF,UAAA6hF,eAAA,SAAA14E;YACI,SAAArH,KAAA8/E,UAAAz4E,OAAAxL;;;QAKRm9E,eAAA8F,SAAA,2CAAA,SAAAl3E,SAAAq2E,eAAAt2E;WACI,SAAAC,SAAAo4E,WAAA19D;YACI,IAAA29D,WAAAr4E;YAEA,IAAAs4E,iBAAA;YACA,IAAAC,iBAAA;YACA,IAAAC,uBAAA;YACA,IAAAC,mBAAA;YACA,IAAAC,sBAAA;YAEA,IAAAC,qBAAA;YAEA,IAAAC,0BAAA;YACA,IAAAC,gBAAA;YAEA,IAAAC,UAAAT,SAAAS;YACA,IAAA/1C,UAAAs1C,SAAAt1C;YAEA+1C,QAAAC,iBAAA;YACAD,QAAAE,qBAAA;YACAF,QAAAG,iBAAA;YACAH,QAAAI,YAAA;YACAJ,QAAAK,YAAA;YAEAp2C,QAAAq2C,eAAA;YACAr2C,QAAAs2C,cAAA;YACAt2C,QAAAu2C,gBAAA;YACAv2C,QAAAw2C,YAAA;YASAlB,SAAAmB,YAAA,SAAAvnE;cACI,IAAAwnE,YAAA,IAAArB,UAAA,IAAAnmE,IAAAhe;cACA,IAAAylF,SAAA;cACA,KAAA,IAAA1lF,IAAA,GAAAA,IAAAie,IAAAhe,QAAAD,KAAA;gBACI,IAAA2lF,WAAA1nE,IAAAG,WAAApe;gBACA,IAAA4lF,QAAA;gBAEIA,QADJD,YAAA,QACIA,aACHA,YAAA,SACG,MAAAA,YAAA,GAAA,MAAA,KAAAA,eAEA,MAAAA,YAAA,IAAA,OAAA,OAAAA,aAAA,GAAA,MAAA,KAAAA;gBAEJ,KAAA,IAAA/mE,IAAA,GAAAA,IAAAgnE,MAAA3lF,QAAA2e,KAAA;kBACI6mE,UAAAC,UAAAE,MAAAhnE;oBACA8mE;;;cAGR,IAAAG,UAAA,IAAAzB,UAAAsB;cACAI,UAAAD,SAAA,GAAAJ,WAAA,GAAAC;cACA,OAAAG;;YAQJxB,SAAA0B,YAAA,SAAA3b;cACI,IAAA5f,QAAA,IAAA45B,UAAAha;cACA,IAAAxiD;cACA,IAAA89D,SAAA;cACA,IAAAC,WAAA;cACA,IAAAlgF,MAAA+kD,MAAAvqD;cACA,OAAAylF,SAAAjgF,KAAA;gBACI,IAAA+kD,MAAAk7B,UAAA,KAAA;kBACIC,WAAAn7B,MAAAk7B;kBACAA,UAAA;uBACH,IAAAl7B,MAAAk7B,UAAA,KAAA;kBACGC,aAAA,KAAAn7B,MAAAk7B,YAAA,MAAA,KAAAl7B,MAAAk7B,SAAA;kBACAA,UAAA;uBACH;kBACGC,aAAA,KAAAn7B,MAAAk7B,YAAA,QAAA,KAAAl7B,MAAAk7B,SAAA,OAAA,MAAA,KAAAl7B,MAAAk7B,SAAA;kBACAA,UAAA;;gBAEJ99D,MAAAzmB,KAAAwkF;;cAEJ,IAAAx7E,MAAA;cACA,IAAA67E,QAAA;cACA,IAAAhmF;cACA,KAAAA,IAAA,GAAAA,IAAA4nB,MAAA3nB,SAAA+lF,OAAAhmF,KACImK,OAAAkU,OAAAC,aAAAyG,MAAA,MAAA6C,MAAArlB,MAAAvC,IAAAgmF,QAAAhmF,IAAA,KAAAgmF;cAEJ77E,OAAAkU,OAAAC,aAAAyG,MAAA,MAAA6C,MAAArlB,MAAAvC,IAAAgmF;cACA,OAAA77E;;YAyBJ26E,QAAA7J,SAAA,SAAA/0D,MAAArC;cACI,IAAA5jB,SAAA4jB,OAAAA,KAAA5jB,SAAA;cACA,IAAAmqE,SAAA,IAAAga,UAAAE,iBAAArkF;cACA,IAAAI,QAAA;cACA+pE,OAAA/pE,WAAA,MAAA6lB;cACAkkD,OAAA/pE,WAAAJ,UAAA,KAAA;cACAmqE,OAAA/pE,WAAAJ,UAAA,IAAA;cACAmqE,OAAA/pE,WAAA,MAAAJ;cACA4jB,QACIiiE,UAAA1b,QAAA/pE,OAAAwjB,MAAA,GAAA5jB;cAEJ,OAAAmqE;;YAUJ0a,QAAAlJ,SAAA,SAAAxR;cACI,IAAA5f,QAAA,IAAA45B,UAAAha;cACA,IAAAlkD,OAAAskC,MAAA;cACA,IAAAnqD,QAAA;cACA,IAAAJ,UAAAuqD,MAAAnqD,YAAA,KAAAmqD,MAAAnqD,YAAA,IAAAmqD,MAAAnqD,cAAA;cACA,IAAAwjB,OAAA5jB,SAAA,IAAAmkF,UAAAnkF,UAAA;cACA6lF,UAAAjiE,MAAA,GAAA2mC,OAAA85B,gBAAArkF;cACA;gBAAAimB,MAAAA;gBAAArC,MAAAA;;;YAaJkrB,QAAAksC,SAAA,SAAAjlE,IAAAkQ,MAAA+/D,eAAApI,OAAArmE;cAEI,IAAA0uE,UAAAC,SAAAjgE,QAAAkgE,mBAAApwE,MAAA;cACA,IAAAqwE,SAAA9B,iBAAA2B;cAEA,IAAAI,YAAApgE,OACI,IAAA+/D,eAAA;gBACI,IAAA,oBAAApI,OACI,MAAA,IAAA38D,MAAA;gBAEJmlE,UAAA7B;qBACH;gBACG6B,UAAA3B;gBACA,IAAA7G,OAAA;kBACIA,QAAAwG,SAAAmB,UAAA3H;kBACA,IAAAA,MAAA59E,SAAA,KACI,MAAA,IAAAihB,MAAA;kBAEJmlE,UAAAxI,MAAA59E;;;cAKZuX,QACI6uE,UAAA7uE,IAAAvX;cAGJ,IAAAmqE,SAAA,IAAAga,UAAAiC;cACA,IAAAX,SAAA;cAGAA,SAAAa,cAAArgE,MAAA+/D,eAAA7b,QAAAsb;cAGAS,SAAAjgE,UACIw/D,SAAAc,YAAAxwE,IAAAkwE,SAAA9b,QAAAsb;cAIJY,YAAApgE,UACIw/D,SAAAe,eAAAR,eAAApI,OAAAzT,QAAAsb;cAIJluE,QACIkuE,SAAAgB,cAAAlvE,KAAA4yD,QAAAsb;cAGJ,OAAAtb;;YASJr7B,QAAA6sC,SAAA,SAAAxR;cACI,IAAA5f,QAAA,IAAA45B,UAAAha;cACA,IAAAuc,WAAAn8B,MAAAvqD,UAAAuqD,MAAAghB;cACA,IAAAka,SAAA;cACA,IAAA1vE,KAAA;cACA,IAAA6nE,QAAA;cAGA,IAAA/e,OAAAtU,MAAAk7B;cACA,IAAAO,gBAAAnnB,OAAA8lB;cACA,IAAA1+D,OAAA44C,QAAA,IAAA+lB;cAGA,IAAAsB,SAAAjgE,OAAA;gBACI,IAAA0gE,OAAAp8B,MAAAk7B;gBACA1vE,KAAA,MAAA4wE;gBACA,OAAA,MAAAA,MAAA;kBACI5wE,OAAA;kBACA4wE,OAAAp8B,MAAAk7B;kBACA1vE,MAAA,MAAA4wE;;;cAKR,IAAAN,YAAApgE,OACI,IAAA+/D,eACIpI,QAAArzB,MAAAk7B,aAAA,IAAAl7B,MAAAk7B,gBACH;gBACG,IAAAmB,WAAAr8B,MAAAk7B;gBACA,IAAAmB,UAAA;kBACIhJ,QAAA,IAAAuG,UAAAyC;kBACAf,UAAAjI,OAAA,GAAArzB,OAAAk7B,QAAAmB;kBACAhJ,QAAAwG,SAAA0B,UAAAlI;uBAEAA,QAAA;gBAEJ6H,UAAAmB;;cAKR,IAAAC,UAAAH,WAAAjB;cACA,IAAA7hE,OAAA,IAAAugE,UAAA0C;cAEAhB,UAAAjiE,MAAA,GAAA2mC,OAAAk7B,QAAAoB;cAEA;gBACI9wE,IAAAA;gBAAAkQ,MAAAA;gBAAA+/D,eAAAA;gBACApI,OAAAA;gBAAAh6D,MAAAA;;;YAIR,IAAAiiE,YAAA,SAAAA,UAAAiB,MAAAC,SAAA11D,KAAA21D,SAAAhnF;cACI,IAAA,sBAAAqxB,IAAA41D,MAEI51D,IAAA41D,KAAAH,MAAAC,SAAAC,SAAAA,UAAAhnF,cAGA,KAAA,IAAAI,QAAA,GAAAA,QAAAJ,QAAAI,SACI0mF,KAAAC,aAAA11D,IAAA21D;;YAKZ,IAAAd,WAAA,SAAAA,SAAAjgE;cACI,OAAAA,SAAA6oB,QAAAq2C,gBAAAl/D,SAAA6oB,QAAAu2C;;YAGJ,IAAAgB,cAAA,SAAAA,YAAApgE;cACI,OAAAA,SAAA6oB,QAAAq2C,gBAAAl/D,SAAA6oB,QAAAs2C,eAAAn/D,SAAA6oB,QAAAw2C;;YAIJ,IAAAa,qBAAA,SAAAA,mBAAApwE;cACI,IAAApT,MAAA;cACA,GAAA;gBACIA,OAAA;gBACAoT,OAAA;uBACHA,KAAA;cACD,OAAApT;;YAGJ,IAAA2jF,gBAAA,SAAAA,cAAArgE,MAAA+/D,eAAA7b,QAAAsb;cACI,IAAAx/D,SAAA6oB,QAAAq2C,gBAAAl/D,SAAA6oB,QAAAs2C,eAAAn/D,SAAA6oB,QAAAu2C,iBAAAp/D,SAAA6oB,QAAAw2C,WAEI,MAAA,IAAArkE,MAAA,0BAAAgF;cAGJkkD,OAAAsb,UAAAx/D,QAAA,KAAA+/D,gBAAA,IAAA;cAEA,OAAAP,SAAAnB;;YAGJ,IAAAiC,cAAA,SAAAA,YAAAxwE,IAAAkwE,SAAA9b,QAAAsb;cACI,IAAArlF,QAAAqlF,SAAAQ,UAAA;cACA9b,OAAA/pE,WAAA,MAAA2V;cACA,OAAA3V,SAAAqlF,QAAA;gBACI1vE,OAAA;gBACAo0D,OAAA/pE,WAAA,MAAA2V,KAAA;;cAEJ,OAAA0vE,SAAAQ;;YAGJ,IAAAO,iBAAA,SAAAA,eAAAR,eAAApI,OAAAzT,QAAAsb;cACI,IAAAO,eAAA;gBACI,IAAApI,QAAA8G,oBACI,MAAA,IAAAzjE,MAAA;gBAGJkpD,OAAAsb,YAAA7H,SAAA,IAAA;gBACAzT,OAAAsb,YAAA,MAAA7H;qBAEA,IAAAA,OAAA;gBACIzT,OAAAsb,YAAA,MAAA7H,MAAA59E;gBACA6lF,UAAA1b,QAAAsb,QAAA7H,OAAA,GAAAA,MAAA59E;gBACAylF,UAAA7H,MAAA59E;qBAEAmqE,OAAAsb,YAAA;cAIR,OAAAA;;YAGJ,IAAAgB,gBAAA,SAAAA,cAAAlvE,KAAA4yD,QAAAsb;cACII,UAAA1b,QAAAsb,QAAAluE,KAAA,GAAAA,IAAAvX;cACA,OAAAylF,SAAAluE,IAAAvX;;YAGJ8L,OAAAC,UAAAq4E;YArVJ,CAsVC,cAAA,uBAAAt4E,SAAA,cAAA4nB,QAAA5nB,WAAAA,OAAAC,UAAA5H,KAAAigF,eAAA,cAAA,uBAAAt4E,SAAA,cAAA4nB,QAAA5nB,WAAAo7E,SAAAhjE,YAAA/f;;QAILg5E,eAAA8F,SAAA,qDAAA,SAAAl3E,SAAAq2E,eAAAt2E;WAYI,SAAAC,SAAA0a;YACI,IAAA0gE,WAAAp7E;YAEAo7E,SAAAv9E,OAAA,SAAAhJ;cAEIumF,SAAAC,QAAAx9E,KAAAhJ,KAAAymF;cAGAF,SAAAG,QAAA19E,KAAAhJ,KAAA2mF;;YAGJJ,SAAAnM,SAAA,SAAAr8E,KAAA4Y;cACI,OAAA4vE,SAAAC,QAAApM,OAAAr8E,KAAA4Y;;YAGJ4vE,SAAAxL,SAAA,SAAAh9E,KAAA4Y;cACI,OAAA4vE,SAAAG,QAAA3L,OAAAh9E,KAAA4Y;;YAIJzL,OAAAC,UAAAo7E;YApBJ,CAqBC,cAAA,uBAAAr7E,SAAA,cAAA4nB,QAAA5nB,WAAAA,OAAAC,UAAA5H,KAAAqjF,eAAArjF;WAKD,SAAA4H,SAAA0a;YACI,IAAAghE,YAAA17E,QAAA07E;YAEAA,UAAAC;cACIC,QAAA;cACAC,QAAA;cACAC,OAAA;cACAC,QAAA;cACAn7D,QAAA;cACA7sB,SAAA;cACAioF,OAAA;;YAVR,CAaC,uBAAAP,WAAAA,WAAA17E,OAAAC,SAAA5H;WAKD,SAAA4H,SAAA0a;YAEI,IAAAuhE,OAAAj8E,QAAA24B;YAEAsjD,KAAAC,eAAA,SAAAhiE;cACI,OAAA,aAAAA,QAAA,aAAAA,QAAA,YAAAA,QAAA,aAAAA,QAAA,aAAAA,QAAA,YAAAA,QAAA,aAAAA;;YALR,CAcC,uBAAAuhE,WAAAA,WAAA17E,OAAAC,SAAA5H;WAKD,SAAA4H,SAAA0a;YAEI,IAAAyhE,QAAAn8E,QAAAo8E;YAEA,IAAAhe,SAAA,IAAA3wB,YAAA;YACA,IAAA4uC,eAAA,IAAAC,aAAAle;YACA,IAAAme,eAAA,IAAAC,aAAApe;YACA,IAAAqe,aAAA,IAAAtkE,WAAAimD;YAEA+d,MAAAO,eAAA,SAAA1pE;cACI,IAAAA,IAAAtZ,SAAAsZ;cACA,IAAAtd,MAAAsd,MAAAA,IAAA,GACI,OAAA;cAGJ,IAAArI;cACA,GAAA;gBACI,IAAAwI,MAAAH,IAAA;gBACA,IAAAoI,OAAAthB,KAAAE,MAAAgZ,IAAA;gBAEA,MAAAoI,SACIjI,OAAA;gBAEJxI,OAAAxV,KAAAge;gBACAH,IAAAoI;uBACH,MAAApI;cAED,OAAArI;;YAGJwxE,MAAAQ,eAAA,SAAA3pE;cACI,IAAAA,IAAAtZ,SAAAsZ;cACA,IAAAtd,MAAAsd,IACI,OAAA;cAEJA,IAAAA,IAAA,IAAA,IAAAlZ,KAAAulB,IAAArM,KAAA,IAAA,IAAAA;cAEA,OAAAmpE,MAAAO,aAAA1pE;;YAGJmpE,MAAAS,eAAA,SAAAp+B;cACI,IAAAxrC,IAAA;cAEA,KAAA,IAAAhf,IAAA,GAAAA,IAAAwqD,MAAAvqD,QAAAD,KAAA;gBACI,IAAA69B,IAAAn4B,SAAA8kD,MAAAxqD;gBACAgf,MAAA,MAAA6e,KAAA/3B,KAAAgmB,IAAA,GAAA,IAAA9rB;gBACA,IAAA69B,IAAA,KACI,OAAA7e;;cAIR,OAAAA;;YAIJmpE,MAAAU,eAAA,SAAAr+B;cACI,IAAAxrC,IAAA5a,KAAAwkF,aAAAp+B;cACA,IAAAsU,OAAA9/C,IAAA,MAAA,KAAA,IAAA;cAEAA,KAAAA,IAAA,IAAAA,KAAA,IAAA8/C;cAEA,OAAA9/C;;YAGJmpE,MAAAW,cAAA,SAAAd;cACIK,aAAA,KAAAL;cACA,OAAAS;;YAGJN,MAAAY,cAAA,SAAAv+B,OAAAk7B;cACI,KAAAl7B,SAAAA,MAAAvqD,SAAAylF,SAAA,GACI,OAAA;cAGJ,KAAA,IAAA1lF,IAAA,GAAAA,IAAA,GAAAA,KACIyoF,WAAAzoF,KAAAwqD,MAAAk7B,SAAA1lF;cAGJ,OAAAqoF,aAAA;;YAGJF,MAAAa,eAAA,SAAAjB;cACIQ,aAAA,KAAAR;cACA,OAAAU,WAAAz6C,SAAA,GAAA;;YAGJm6C,MAAAc,eAAA,SAAAz+B,OAAAk7B;cACI,KAAAl7B,SAAAA,MAAAvqD,SAAA,IAAAylF,QACI,OAAA;cAGJ,KAAA,IAAA1lF,IAAA,GAAAA,IAAA,GAAAA,KACIyoF,WAAAzoF,KAAAwqD,MAAAk7B,SAAA1lF;cAGJ,OAAAuoF,aAAA;;YAGJJ,MAAAe,YAAA,SAAA1+B,OAAAk7B,QAAAznE;cACI,KAAA,IAAAje,IAAA,GAAAA,IAAAie,IAAAhe,QAAAD,KAAA;gBACI,IAAAumB,OAAAtI,IAAAG,WAAApe;gBACA,IAAA4lF,QAAAuD,YAAA5iE;gBAEA,KAAA,IAAA3H,IAAA,GAAAA,IAAAgnE,MAAA3lF,QAAA2e,KAAA;kBACI4rC,MAAAk7B,UAAAE,MAAAhnE;kBACA8mE;;;cAIR,OAAAA;;YAMJyC,MAAAiB,YAAA,SAAA5+B,OAAAk7B,QAAAzlF;cACI,IAAA2nB;cACA,IAAAniB,MAAAigF,SAAAzlF;cAEA,OAAAylF,SAAAjgF,KAAA;gBACI,IAAA8gB,OAAA;gBAEA,IAAAikC,MAAAk7B,UAAA,KAAA;kBACIn/D,OAAAikC,MAAAk7B;kBAEAA,UAAA;uBACH,IAAAl7B,MAAAk7B,UAAA,KAAA;kBACGn/D,SAAA,KAAAikC,MAAAk7B,YAAA,MAAA,KAAAl7B,MAAAk7B,SAAA;kBACAA,UAAA;uBACH;kBACGn/D,SAAA,KAAAikC,MAAAk7B,YAAA,QAAA,KAAAl7B,MAAAk7B,SAAA,OAAA,MAAA,KAAAl7B,MAAAk7B,SAAA;kBACAA,UAAA;;gBAGJ99D,MAAAzmB,KAAAolB;;cAIJ,IAAAtI,MAAA;cACA,KAAA,IAAAje,IAAA,GAAAA,IAAA4nB,MAAA3nB,UAAA;gBACIge,OAAAI,OAAAC,aAAAyG,MAAA,MAAA6C,MAAArlB,MAAAvC,GAAAA,IAAA;gBACAA,KAAA;;cAGJ,OAAAie;;YAMJkqE,MAAA3c,aAAA,SAAAvtD;cACI,IAAA,oBAAAA,KACI,QAAA;cAGJ,IAAAhe,SAAA;cAEA,KAAA,IAAAD,IAAA,GAAAA,IAAAie,IAAAhe,QAAAD,KAAA;gBACI,IAAAumB,OAAAtI,IAAAG,WAAApe;gBACAC,UAAAopF,WAAA9iE;;cAGJ,OAAAtmB;;YAMJ,SAAAkpF,YAAAxD;cACI,OAAAA,YAAA,QACIA,aACHA,YAAA,SACG,MAAAA,YAAA,GAAA,MAAA,KAAAA,eAEA,MAAAA,YAAA,IAAA,OAAA,OAAAA,aAAA,GAAA,MAAA,KAAAA;;YAIR,SAAA0D,WAAA9iE;cACI,OAAAA,QAAA,MACI,IACHA,QAAA,OACG,IAEA;;YAxLZ,CA2LC,uBAAAkhE,WAAAA,WAAA17E,OAAAC,SAAA5H;WAKD,SAAA4H,SAAA0a;YAEI,IAAA+gE,WAAAz7E;YACA,IAAAs9E,aAAAt9E,QAAAq7E;YAEA,IAAAe,QAAAX,SAAAW;YACA,IAAAmB,WAAA9B,SAAAC;YACA,IAAA/iD,OAAA8iD,SAAA9iD;YAEA2kD,WAAAz/E,OAAA,SAAA2/E;cACIplF,KAAAolF,SAAAA;;YAGJF,WAAArO,SAAA,SAAA4C,OAAArmE;cAEI,IAAAgyE,SAAAplF,KAAAolF,OAAA3L;cAGA,KAAA4L,SAAAjyE,KAAAgyE,SACI,OAAA;cAIJ,IAAAvpF,SAAAmoF,MAAA5c,WAAApzD,KAAAuB,UAAAnC;cAGA,IAAA4yD,SAAA,IAAA3wB,YAAAx5C;cACA,IAAAwoF,aAAA,IAAAtkE,WAAAimD;cACA,IAAAsb,SAAA;cAEA,MAAA8D,QAAA;gBACI9D,SAAAgE,UAAAjB,YAAA/C,QAAA8D,QAAAhyE;gBACA,IAAAkuE,SAAA,GACI,OAAA+C,WAAAz6C,SAAA,GAAA03C;;cAIR,OAAA;;YAMJ,SAAA+D,SAAAjyE,KAAAgyE;cACI,KAAAA,QACI,OAAA;cAGJ,KAAA,IAAAtpF,QAAAspF,QAAA;gBACI,IAAArhC,QAAAqhC,OAAAtpF;gBAGA,QAAAioD,MAAAwhC;iBACI,KAAA;kBACI,IAAA,uBAAAnyE,IAAAtX,OACI,OAAA;;iBAER,KAAA;kBACI,IAAA,uBAAAsX,IAAAtX,OAAA;oBACI,IAAAH,UAAAypF,OAAAI,WAAAzhC,MAAAjiC,SAAAojE,WAAAE,OAAA,aAAArhC,MAAAjiC;qBACAnmB,WACI0pF,SAAAjyE,IAAAtX,OAAAH;;kBAGR;;iBACJ,KAAA;kBAEI,IAAAA,UAAAypF,OAAAI,WAAAzhC,MAAAjiC,SAAAojE,WAAAE,OAAA,aAAArhC,MAAAjiC;kBACA,MAAA1O,IAAAtX,WAAAH,SACI,KAAA,IAAAC,IAAA,GAAAA,IAAAwX,IAAAtX,MAAAD,QAAAD,KACI,KAAAypF,SAAAjyE,IAAAtX,MAAAF,IAAAD,UACI,OAAA;;;cAQxB,OAAA;;YAGJ,SAAA2pF,UAAAtf,QAAAsb,QAAA8D,QAAAhyE;cACI,KAAA,IAAAtX,QAAAsX,KACI,MAAAgyE,OAAAtpF,OAAA;gBACI,IAAAioD,QAAAqhC,OAAAtpF;gBAEA,QAAAioD,MAAAwhC;iBACI,KAAA;iBACA,KAAA;kBACIjE,SAAAxqC,WAAAkvB,QAAAsb,QAAAmE,UAAA1hC,MAAAjiC,MAAAiiC,MAAAgrB;kBACAuS,SAAAoE,WAAAtyE,IAAAtX,OAAAioD,MAAAjiC,MAAAw/D,QAAAtb,QAAAof;kBACA;;iBACJ,KAAA;kBACIhyE,IAAAtX,MAAAD,SAAA,MACIylF,SAAAqE,YAAAvyE,IAAAtX,OAAAioD,OAAAu9B,QAAAtb,QAAAof;;;cAOpB,OAAA9D;;YAGJ,SAAAoE,WAAAjrF,OAAAqnB,MAAAw/D,QAAAtb,QAAAof;cACI,QAAAtjE;eACI,KAAA;gBACIw/D,SAAAxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAM,aAAA7pF;gBACA;;eACJ,KAAA;eACA,KAAA;gBACI6mF,SAAAxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAO,aAAA9pF;gBACA;;eACJ,KAAA;gBACIq8C,WAAAkvB,QAAAsb,QAAA0C,MAAAU,YAAAjqF;gBACA6mF,UAAA;gBACA;;eACJ,KAAA;gBACIxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAY,aAAAnqF;gBACA6mF,UAAA;gBACA;;eACJ,KAAA;gBACI,IAAAzlF,SAAAmoF,MAAA5c,WAAA3sE;gBAGA6mF,SAAAxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAM,aAAAzoF;gBAEAmoF,MAAAc,UAAA9e,QAAAsb,QAAA7mF;gBACA6mF,UAAAzlF;gBACA;;eACJ;gBACI,IAAAF,UAAAypF,OAAAI,WAAA1jE,SAAAojE,WAAAE,OAAA,aAAAtjE;gBACA,MAAAnmB,SAAA;kBAEI,IAAAiqF,YAAA,IAAAvwC,YAAA2uC,MAAA5c,WAAApzD,KAAAuB,UAAA9a;kBACA,IAAAoB,SAAA;kBAEAA,SAAAypF,UAAAM,WAAA/pF,QAAAF,SAAAlB;kBAEA6mF,SAAAxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAM,aAAAzoF;kBAEA,KAAA,IAAAD,IAAA,GAAAA,IAAAC,QAAAD,KAAA;oBACIoqE,OAAAsb,UAAAsE,UAAAhqF;oBACA0lF;;;;cAMhB,OAAAA;;YAMJ,SAAAqE,YAAAniE,OAAAugC,OAAAu9B,QAAAtb,QAAAof;cACI,IAAAxpF,IAAA;cAEA,IAAA2kC,KAAAujD,aAAA//B,MAAAjiC,OAAA;gBACIw/D,SAAAxqC,WAAAkvB,QAAAsb,QAAAmE,UAAA1hC,MAAAjiC,MAAAiiC,MAAAgrB;gBACAuS,SAAAxqC,WAAAkvB,QAAAsb,QAAA0C,MAAAM,aAAA9gE,MAAA3nB;gBACA,KAAAD,IAAA,GAAAA,IAAA4nB,MAAA3nB,QAAAD,KACI0lF,SAAAoE,WAAAliE,MAAA5nB,IAAAmoD,MAAAjiC,MAAAw/D,QAAAtb;qBAGJ,KAAApqE,IAAA,GAAAA,IAAA4nB,MAAA3nB,QAAAD,KAAA;gBACI0lF,SAAAxqC,WAAAkvB,QAAAsb,QAAAmE,UAAA1hC,MAAAjiC,MAAAiiC,MAAAgrB;gBACAuS,SAAAoE,WAAAliE,MAAA5nB,IAAAmoD,MAAAjiC,MAAAw/D,QAAAtb,QAAAof;;cAIR,OAAA9D;;YAGJ,SAAAxqC,WAAAkvB,QAAAsb,QAAAl7B;cACI,KAAA,IAAAxqD,IAAA,GAAAA,IAAAwqD,MAAAvqD,QAAAD,KAAA0lF,UACItb,OAAAsb,UAAAl7B,MAAAxqD;cAGJ,OAAA0lF;;YAGJ,SAAAmE,UAAA3jE,MAAAitD;cACI,IAAAt0E,QAAA0qF,SAAA5B,MAAAzhE,SAAA;cACA,OAAAkiE,MAAAM,aAAAvV,OAAA,IAAAt0E;;YAzLR,CA2LC,uBAAA4oF,WAAAA,WAAA17E,OAAAC,SAAA5H;WAKD,SAAA4H,SAAA0a;YACI,IAAA+gE,WAAAz7E;YACA,IAAAi+E,aAAAj+E,QAAAu7E;YAEA,IAAAa,QAAAX,SAAAW;YACA,IAAAzjD,OAAA8iD,SAAA9iD;YAEA,IAAAylC;YACA,IAAAsb,SAAA;YAEAuE,WAAApgF,OAAA,SAAA2/E;cACIplF,KAAAolF,SAAAA;;YAGJS,WAAAC,YAAA,SAAAV;eACIA,WACIplF,KAAAolF,SAAAA;;YAIRS,WAAArO,SAAA,SAAAiC,OAAAz5D;cACI,IAAAolE,SAAAplF,KAAAolF,OAAA3L;cAEAzT,SAAAhmD;cACAshE,SAAA;cAEA,MAAA8D,QACI,OAAAW,cAAAX,QAAApf,OAAAnqE;cAGJ,OAAA;;YAGJ,SAAAkqF,UAAA3yE,KAAAgyE,QAAAvpF;cACI,OAAAylF,SAAAzlF,QAAA;gBACI,IAAA8pB,OAAAqgE;gBACA,IAAAlkE,OAAA6D,KAAA7D;gBACA,IAAAitD,MAAAppD,KAAAopD;gBACA,IAAAjzE,OAAAspF,OAAAa,OAAAlX;gBAEA,QAAAqW,OAAAtpF,MAAAypF;iBACI,KAAA;iBACA,KAAA;kBACInyE,IAAAtX,QAAAoqF,WAAAd,OAAAtpF,MAAAgmB,MAAAsjE;kBACA;;iBACJ,KAAA;kBACIhyE,IAAAtX,UACIsX,IAAAtX;kBAEJqqF,YAAA/yE,IAAAtX,OAAAspF,OAAAtpF,MAAAgmB,MAAAsjE;;;cAKZ,OAAAhyE;;YAMJ,SAAAgzE,SAAAhzE,KAAAgyE;cACI,QAAAA,OAAAa,OAAAI,WAAAtX;;YAMJ,SAAAiX;cACI,IAAAjX,MAAAiV,MAAAQ,aAAA8B;cAEA;gBACIxkE,MAAA,IAAAitD;gBACAA,KAAAA,OAAA;;;YAOR,SAAAsX;cACI,IAAAtX,MAAAiV,MAAAQ,aAAA+B;cAEA;gBACIzkE,MAAA,IAAAitD;gBACAA,KAAAA,OAAA;;;YAIR,SAAAmX,WAAApkE,MAAAsjE;cACI,QAAAtjE;eACI,KAAA;gBACI,OAAAkiE,MAAAQ,aAAA8B;;eACJ,KAAA;eACA,KAAA;gBACI,OAAAtC,MAAAS,aAAA6B;;eACJ,KAAA;gBACI,IAAA1C,QAAAI,MAAAW,YAAA3e,QAAAsb;gBACAA,UAAA;gBACA,OAAAsC;;eACJ,KAAA;gBACI,IAAAD,SAAAK,MAAAa,aAAA7e,QAAAsb;gBACAA,UAAA;gBACA,OAAAqC;;eACJ,KAAA;gBACI,IAAA9nF,SAAAmoF,MAAAQ,aAAA8B;gBAEA,IAAAzsE,MAAAmqE,MAAAgB,UAAAhf,QAAAsb,QAAAzlF;gBACAylF,UAAAzlF;gBAEA,OAAAge;;eACJ;gBACI,IAAAle,UAAAypF,OAAAI,WAAA1jE,SAAA+jE,WAAAT,OAAA,aAAAtjE;gBACA,MAAAsjE,YAAAzpF,SAAA;kBACI,IAAAE,SAAAmoF,MAAAQ,aAAA8B;kBACA,IAAAlzE;kBACA2yE,UAAA3yE,KAAAzX,SAAA2lF,SAAAzlF;kBACA,OAAAuX;;;;YAMhB,SAAA+yE,YAAA3iE,OAAA1B,MAAAsjE;cACI,IAAA7kD,KAAAujD,aAAAhiE,OAAA;gBACI,IAAAjmB,SAAAmoF,MAAAQ,aAAA8B;gBAEA,KAAA,IAAA1qF,IAAA,GAAAA,IAAAC,QAAAD,KACI4nB,MAAAzmB,KAAAmpF,WAAApkE;qBAGJ0B,MAAAzmB,KAAAmpF,WAAApkE,MAAAsjE;;YAIR,SAAAkB,SAAA5rB;cACI,IAAAtU;cACA,IAAAogC,MAAAlF;cACA5mB,OAAAA,QAAA;cAEA,IAAAriD;cAEA,GAAA;gBACIA,IAAA2tD,OAAAwgB;gBACApgC,MAAArpD,KAAAsb;gBACAmuE;uBACHnuE,KAAA;cAEDqiD,SACI4mB,SAAAkF;cAEJ,OAAApgC;;YAGJ,SAAAmgC;cACI,OAAAD,SAAA;;YA1JR,CA6JC,uBAAAjD,WAAAA,WAAA17E,OAAAC,SAAA5H;;QAKLg5E,eAAA8F,SAAA,6DAAA,SAAAl3E,SAAAq2E,eAAAt2E;WACI,SAAAyF;YACI,IAAAq5E,oBAAA;YACA,IAAAC,uBAAA;YAEA,IAAAzG,WAAA7yE,KAAA6yE;YACA,IAAAS,UAAAT,SAAAS;YACA,IAAA/1C,UAAAs1C,SAAAt1C;YACA,IAAAg8C,eAAAv5E,KAAAu5E;YACA,IAAAtD,WAAAj2E,KAAAi2E;YAEA,IAAAuD,SAAA;YACA,IAAAC,WAAA;YACA,IAAAC,iBAAA;YAEA,sBAAA9nF,OAAAqQ,WACIrQ,OAAAqQ,SAAA,SAAA2S;cACI,SAAA+kE;cAGAA,EAAA7oF,YAAA8jB;cACA,OAAA,IAAA+kE;;YAIR,IAAAC,OAAAttF;YACA,IAAAw/E,SAAAl6E,OAAAqQ,OAAAs3E,aAAAzoF;YACA8oF,KAAA9N,SAAAA;YACA,IAAAzT,SAAA;YACA,IAAAwhB,QAAA;YACA,IAAArH;YACA,IAAA/vE;YAEA,IAAAq3E;YAEA,IAAAC,oBAAA;YACA,IAAAC,mBAAA;YACA,IAAAC,uBAAA;YACA,IAAAC,eAAA;YACA,IAAAC,cAAA;YACA,IAAAC,qBAAA;YAEA,IAAAC,oBAAA;YAEA,IAAAC;cACIC;gBACI7lE,MAAA2kE;gBACAt/C,SAAAu/C;;cAEJ94B;;YAGJ,IAAAg6B,eAAA;YAEA1O,OAAAzzE,OAAA,SAAAohE,QAAA+S;cACIgO,eAAAhO;cACA,IAAApU,OAAAqB,OAAArB;cACA,IAAAyQ,OAAApP,OAAAoP;cAEA,IAAA8D,QAAA;cAEAlT,OAAAkT,UACIA,QAAAlT,OAAAkT;cAGJ,IAAA7T,MAAA6T,QAAAvU;cACAyQ,SACI/P,OAAA,MAAA+P;cAGJyR,gBAAA95B,OAAAiZ,OAAAjZ;cACA65B,oBAAA5gB,OAAA4gB;cACAI,cAAA3hB,KAAA0T;;YAGJ,IAAAiO,gBAAA,SAAAA,cAAA3hB,KAAA0T;cACIr0E,QAAAC,IAAA,gBAAA0gE;cACA,IAAA6B,SAAA,SAAAA,OAAA1gE;gBACI,IAAAtI,MAAA2hF,QAAA7J,OAAA6J,QAAAC,gBAAAV,SAAAmB,UAAAptE,KAAAuB,UAAAmyE;gBACA5xE,KAAA/W;;cAEJ,IAAA0oE,YAAA,SAAAA,UAAApgE;gBACIygF,eAAApH,QAAAlJ,OAAAnwE,MAAA0D,OAAA6uE;gBAEAwN,qBACIC,uBAAA9/E,KAAAypB,QAAAo2D;;cAGR,IAAAlf,UAAA,SAAAA,QAAA7gE;gBACI6xE,OAAA2G,KAAA,YAAAx4E;gBACA9B,QAAA7J,MAAA,kBAAAsY,KAAAuB,UAAAlO;;cAEJ,IAAA2gE,UAAA,SAAAA,QAAA3gE;gBACI6xE,OAAA2G,KAAA,SAAAx4E;gBACA9B,QAAA7J,MAAA,kBAAAsY,KAAAuB,UAAAlO;;cAYJo+D,SAAA,IAAAyB,UAAAhB;cACAT,OAAAsiB,aAAA;cACAtiB,OAAAsC,SAAAA;cACAtC,OAAAgC,YAAAA;cACAhC,OAAAyC,UAAAA;cACAzC,OAAAuC,UAAAA;;YAGJkR,OAAAc,aAAA;cACI,IAAAvU,QAAA;gBACIA,OAAAuU,cAAAvU,OAAAuU;gBACAvU,OAAAM,SAAAN,OAAAM;gBACAxgE,QAAAC,IAAA;gBACAigE,SAAA;;cAGJ,IAAA8hB,aAAA;gBACIS,aAAAT;gBACAA,cAAA;;cAEJ,IAAAC,oBAAA;gBACIQ,aAAAR;gBACAA,qBAAA;;;YAIRtO,OAAApS,UAAA,SAAA2S,OAAArmE,KAAAwmE;cACI,IAAA,MAAAv7E,UAAAxC,UAAA,sBAAAuX,KAAA;gBACIwmE,KAAAxmE;gBACAA;qBAEAA,MAAAA;cAEJqmE,QAAAA,SAAArmE,IAAAqmE;cACA,KAAAA,OACI;cAGJwN;cAYAA,QAAA,OAAA,KACIA;cAGJgB,YAAAhB,OAAAxN,OAAArmE;cAEAwsE,UAAAqH,SAAArN;cACAsN,SAAAD,SAAAxN;;YAGJP,OAAA7D,SAAA,SAAAoE,OAAArmE;cACIA,MAAAA;cACA60E,YAAA,GAAAxO,OAAArmE;;YAGJ8lE,OAAA8B,gBAAA;cACI,KAAAvV,QAAA;cACAA,OAAAsC,SAAA;cACAtC,OAAAgC,YAAA;cACAhC,OAAAyC,UAAA;cACAzC,OAAAuC,UAAA;;YAGJkR,OAAA+B,eAAA;cACI,OAAAxV,UAAAA,OAAA72C,eAAAs4C,UAAAghB;;YAGJhP,OAAAgC,SAAA;cACI,OAAAzV,UAAAA,OAAA72C,eAAAs4C,UAAAI;;YAGJ4R,OAAAiC,WAAA;cACI,OAAA1V,UAAAA,OAAA72C,eAAAs4C,UAAAihB;;YAGJjP,OAAAkC,YAAA;cACI,OAAA3V,UAAAA,OAAA72C,eAAAs4C,UAAAkhB;;YAGJ,IAAAH,cAAA,SAAAA,YAAAhB,OAAAxN,OAAArmE;cACI,IAAA0O,OAAAmlE,QAAAt8C,QAAAq2C,eAAAr2C,QAAAs2C;cAGA,IAAAmE,UAAAlM,OAAAnuE,KAAAq6E,cAAAlM,OAAAnuE,KAAAq6E,OAAA9G;cAEIlrE,MADJgyE,OAAA3L,SACI4J,SAAAxM,OAAA4C,OAAArmE,OAEA6sE,SAAAmB,UAAAptE,KAAAuB,UAAAnC;cAIJ,IAAAyuE,gBAAA;cACA,IAAA3I,OAAAmP,QAAAnP,OAAAmP,KAAA5O,QAAA;gBACIA,QAAAP,OAAAmP,KAAA5O;gBACAoI,gBAAA;;cAGJzuE,MAAAu3B,QAAAksC,OAAAoQ,OAAAnlE,MAAA+/D,eAAApI,OAAArmE;cACA,IAAAq6D,SAAAiT,QAAA7J,OAAA6J,QAAAI,WAAA1tE;cACA0C,KAAA23D;;YAGJ,IAAA33D,OAAA,SAAAA,KAAA23D;cACIhI,UACIA,OAAA3vD,KAAA23D,OAAAzH;;YAKR,IAAAz2D;YAEA,IAAA6gE,YAAA,SAAAA,UAAArlE;cACI,KAAAo8E,mBAEI;cAGJjO,OAAA2G,KAAA;cAEA,IAAA9gF,MAAA2hF,QAAA7J,OAAA6J,QAAAG;cACA,IAAA2G,oBAAA;gBACIQ,aAAAR;gBACAA,qBAAA;;cAGJ,IAAAD,aAEI;cAGJA,cAAAvhF,WAAA;gBACIuhF,cAAA;gBACAzxE,KAAA/W;gBAEAsoF,uBAAA9/E,KAAAypB,QAAAo2D;gBACAI,qBAAAxhF,WAAAsiF,oBAAAlB;iBACHD;;YAGL,IAAAmB,qBAAA,SAAAA;cACI,IAAAC,MAAAlB,uBAAA9/E,KAAAypB;cACA,IAAAu3D,MAAAjB,cACIE,qBAAAxhF,WAAAsiF,oBAAAC,WACH;gBACGhjF,QAAA7J,MAAA;gBACAw9E,OAAA2G,KAAA;gBACA3G,OAAAc;;;YAIR,IAAAwO,YAAA,SAAAA,UAAAz9E;cACIA,OAAAiJ,KAAApX,MAAAqjF,SAAA0B,UAAA52E;cACA,IAAAA,KAAAoX,SAAA2kE,gBAAA;gBACI5N,OAAA2G,KAAA,SAAA;gBACA;;cAGJ,IAAA90E,KAAAoX,SAAAykE,QAAA;gBACI1N,OAAA2G,KAAA,SAAA;gBACA;;cAGJ4I,cAAA19E;cAEA,IAAAhM,MAAA2hF,QAAA7J,OAAA6J,QAAAE;cACA9qE,KAAA/W;cACA,IAAA6oF,cAAA;gBACIA,aAAAniB;gBACAmiB,eAAA;;;YAIR,IAAAc,SAAA,SAAAA,OAAA39E;cAEI,IAAAqI,MAAAu3B,QAAA6sC,OAAAzsE;cAEA,IAAAqI,IAAAxB,KAAA,GAAA;gBACIwB,IAAAqmE,QAAAyN,SAAA9zE,IAAAxB;uBACAs1E,SAAA9zE,IAAAxB;gBACA,KAAAwB,IAAAqmE,OACI;;cAIRrmE,IAAAqM,OAAAkpE,UAAAv1E;cAEAw1E,eAAA1P,QAAA9lE;;YAGJ,IAAAy1E,SAAA,SAAAA,OAAA99E;cACI,IAAA2I,OAAAM,KAAApX,MAAAqjF,SAAA0B,UAAA52E;cAEA,IAAAk9D,SAAA;cACAv0D,KAAA9Y,eAAA,cACIqtE,SAAAv0D,KAAA;cAGJwlE,OAAA2G,KAAA,UAAA5X;;YAGJp4D,SAAA6wE,QAAAC,kBAAA6H;YACA34E,SAAA6wE,QAAAG,kBAAAzQ;YACAvgE,SAAA6wE,QAAAI,aAAA4H;YACA74E,SAAA6wE,QAAAK,aAAA8H;YAEA,IAAAf,iBAAA,SAAAA,eAAA10E;cACIvD,SAAAuD,IAAA0O,MAAA1O,IAAAqM;;YAGJ,IAAAmpE,iBAAA,SAAAA,eAAA1P,QAAA9lE;cACI,KAAAA,IAAAxB,IAAA;gBAEIsnE,OAAA2G,KAAAzsE,IAAAqmE,OAAArmE;gBACA;;cAIJ,IAAAwmE,KAAAgG,UAAAxsE,IAAAxB;qBAEAguE,UAAAxsE,IAAAxB;cACA,IAAA,sBAAAgoE,IACI;cAGJA,GAAAxmE;cACA;;YAGJ,IAAA01E,sBAAA,SAAAA,oBAAA5P,QAAA6P;cACI,KAAA,IAAAntF,IAAA,GAAAwmB,IAAA2mE,KAAAltF,QAAAD,IAAAwmB,GAAAxmB,KACIgtF,eAAA1P,QAAA6P,KAAAntF;;YAIR,IAAA+sF,YAAA,SAAAA,UAAAv1E;cACI,IAAAgyE,UAAAlM,OAAAnuE,KAAAq6E,cAAAlM,OAAAnuE,KAAAq6E,OAAA4D;cACA,IAAAC,QAAA/P,OAAAnuE,KAAAk+E;cACA,IAAAxP,QAAArmE,IAAAqmE;cAGA,IAAArmE,IAAAyuE,eAAA;gBACI,KAAAoH,MAAAxP,QACI;gBAGJA,QAAArmE,IAAAqmE,QAAAwP,MAAAxP;;cAEJ,OAAA2L,OAAA3L,SACI4J,SAAA7L,OAAAiC,OAAArmE,IAAAqM,QAEAzL,KAAApX,MAAAqjF,SAAA0B,UAAAvuE,IAAAqM;;YAMR,IAAAgpE,gBAAA,SAAAA,cAAA19E;cACI,IAAAA,KAAA48E,OAAA58E,KAAA48E,IAAAvX,WAAA;gBACI+W,oBAAA,MAAAp8E,KAAA48E,IAAAvX;gBACAgX,mBAAA,IAAAD;qBACH;gBACGA,oBAAA;gBACAC,mBAAA;;cAGJ8B,SAAAn+E;cAEA,sBAAA08E,qBACIA,kBAAA18E,KAAA6iD;;YAKR,IAAAs7B,WAAA,SAAAA,SAAAn+E;cACI,KAAAA,SAAAA,KAAA48E,KACI;cAEJzO,OAAAnuE,OAAAmuE,OAAAnuE;cACA,IAAAs9E,OAAAt9E,KAAA48E,IAAAU;cACA,IAAAjD,SAAAr6E,KAAA48E,IAAAvC;cAGA,IAAAiD,MAAA;gBACInP,OAAAnuE,KAAAs9E,OAAAA;gBACAnP,OAAAnuE,KAAAk+E;gBAEA,KAAA,IAAAxP,SAAA4O,MACInP,OAAAnuE,KAAAk+E,MAAAZ,KAAA5O,UAAAA;;cAKR,IAAA2L,QAAA;gBACIlM,OAAAnuE,KAAAq6E;kBACI4D,QAAA5D,OAAA4D;kBACA1K,QAAA8G,OAAA9G;;iBAEJ+E,YACIA,SAAA59E;kBAAAy9E,eAAAkC,OAAA9G;kBAAA8E,eAAAgC,OAAA4D;;;;YAKZrhF,OAAAC,UAAAsxE;YAlaJ,CAmaCl5E;;QAILg5E,eAAA8F,SAAA,iBAAA,SAAAl3E,SAAAq2E,eAAAt2E;UACI,IAAA23E,UAAArB,cAAA;UACAj+E,KAAA2mF,eAAA3nF,OAAAqQ,OAAAiwE;UAEA,IAAAxH,WAAAmG,cAAA;UACAj+E,KAAAigF,WAAAnI;UAEA,IAAAuL,WAAApF,cAAA;UACAj+E,KAAAqjF,WAAAA;UAEA,IAAAnK,SAAA+E,cAAA;UACAj+E,KAAAk5E,SAAAA;;QAGJF,eAAAgG,MAAA,iBAAA;QACAhG,eAAAgG,MAAA,8BAAA;QACAhG,eAAAgG,MAAA,8BAAA;QAEAhG,eAAAgG,MAAA,2CAAA;QACAhG,eAAAgG,MAAA,2CAAA;QACAhG,eAAAgG,MAAA,2CAAA;QAEAhG,eAAAgG,MAAA,qDAAA;QACAhG,eAAAgG,MAAA,qDAAA;QACAhG,eAAAgG,MAAA,qDAAA;QAEAhG,eAAAgG,MAAA,6DAAA;QACAhG,eAAAgG,MAAA,6DAAA;QACAhG,eAAAgG,MAAA,6DAAA;QAEAhG,eAAAiF,cAAA;QAEA,OAAAjF;;MAGJt/E,OAAAu/E,cAAAA;;;;;;;;;;ICxxDA79E,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAvE,MAAA,SAAAA,KAAA4D;QACIrJ,KAAAmpF,eAAA9/E;QACArJ,KAAAqL,QAAA;QACArL,KAAA29E,aAAA39E,KAAAopF,cAAA;;MAGJj9E,eAAA,SAAAA;QACItK,KAAAE,cAAA8J,cAAA7L,KAAAqJ;;MAEJ+/E,cAAA,SAAAA;QAAc,IAAA3L,QAAAz9E;QACVA,KAAAqJ,KAAAE,aAAAnO,GAAAsiF,WAAAN,KAAA;QACAp9E,KAAA29E,aAAA;UACIF,MAAAp0E,KAAAE,aAAAnO,GAAAsiF,WAAA2L,KAAA;UACA5L,MAAAp0E,KAAAw0E,UAAA;UACAJ,MAAAtxE;WACH;;MAGLC,QAAA,SAAAA,OAAAC;QACIrM,KAAAqJ,KAAAigF,YAAA;QACA,IAAAC,kBAAAvpF,KAAAmpF,aAAAp0E;QACA/U,KAAAqJ,KAAAqC,KAAA1L,KAAAqJ,KAAAqC,IAAA69E,gBAAA79E,IAAA1L,KAAAqL,SAAArL,KAAAqL;QACArL,KAAAqJ,KAAAsC,KAAA3L,KAAAqJ,KAAAsC,IAAA49E,gBAAA59E,IAAA3L,KAAAqL,SAAArL,KAAAqL;SACArL,KAAAqJ,KAAAqC,KAAA9I,IAAAsC,UAAAlF,KAAAqJ,KAAAqC,IAAA9I,IAAAsC,UAAAlF,KAAAqJ,KAAAsC,KAAA/I,IAAAwC,gBAAApF,KAAAqJ,KAAAsC,IAAA/I,IAAAuC,cAEInF,KAAAmM;;;;;;;;;IC5BZ/Q,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAC;QACIu/E,WAAApuF,GAAAquF;QACAC,YAAAtuF,GAAAquF;QACAE,UAAAvuF,GAAAqgF;QACAmO,aAAAxuF,GAAAquF;;MAGJn2E,SAAA,SAAAA,QAAAvI;QACI/K,KAAAwpF,cACIxpF,KAAAwpF,UAAAhhE,SAAAzd,KAAA8+E;QAEJ7pF,KAAA0pF,WAAAlhE,SAAAzd,KAAAkL;QACAlL,KAAAmL,YAAA,QAAAnL,KAAAmL,YACI9a,GAAAC,OAAAugF;UAAA1V,KAAAn7D,KAAAmL;UAAA4L,MAAA;WAAA,SAAAtmB,KAAAqgF;UAEI,IAAAC,cAAA,IAAA1gF,GAAA2gF,YAAAF,SAAAzgF,GAAA4gF,KAAA,GAAA,GAAAH,QAAA/nE,OAAA+nE,QAAAhoE;UACA7T,KAAA2pF,SAAA7N,cAAAA;UACHr6E,KAAAzB;QAELA,KAAA4pF,YAAAphE,SAAAzd,KAAA++E;;;;;;;;;ICtBR1uF,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAC;QACI8/E;UACIvO,SAAA;UACA15D,MAAA1mB,GAAAqgF;;QAGJuO;UACIxO,SAAA;UACA15D,MAAA1mB,GAAAquF;;;MAIRn2E,SAAA,SAAAA,QAAA1B;QACI5R,KAAA2U,WAAA/C;QACAhE,YAAAlB,GAAAkB,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;QACA6B,KAAAC,YAAAqU,YAAAnW,KAAA2U;;MAGJgnE,aAAA,SAAAA,YAAAlmE;QACI,IAAAA,QAAAM,WAAA/V,KAAA2U,UAAA;UACI3U,KAAAgqF,OAAAxhE,SAAA/S,QAAAQ;UACAR,QAAAS,YAAA,QAAAT,QAAAS,YACI9a,GAAAC,OAAAugF;YAAA1V,KAAAzwD,QAAAS;YAAA4L,MAAA;aAAA,SAAAtmB,KAAAqgF;YACI,IAAAC,cAAA,IAAA1gF,GAAA2gF,YAAAF,SAAAzgF,GAAA4gF,KAAA,GAAA,GAAAH,QAAA/nE,OAAA+nE,QAAAhoE;YACA7T,KAAA+pF,KAAAjO,cAAAA;YACHr6E,KAAAzB;;;MAKboW,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;;;;;;;;;IClCR,IAAAiQ,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA3O,GAAA4O;MAEAC;QACIggF;UACIzO,SAAA;UACA15D,MAAA1mB,GAAAquF;;QAEJS;UACI1O,SAAA;UACA15D,MAAA1mB,GAAAquF;;;MAIRroF,OAAA,SAAAA;QACIpB,KAAAqJ,KAAAqD,GAAA,SAAA1M,KAAAk1E,UAAAl1E;;MAGJsT,SAAA,SAAAA,QAAA62E;QACInqF,KAAAmqF,kBAAAA;QACAnqF,KAAAiqF,SAAAzhE,SAAA2hE,gBAAAtpB;QACA7gE,KAAAkqF,WAAA1hE,SAAA2hE,gBAAAjqB;;MAGJgV,UAAA,SAAAA;QACIjlE,IAAApI,OAAAqtE,SAAAl1E,KAAAmqF,gBAAAtpB,QAAA;;;;;;;;;;;IC1BR,IAAA5wD,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA3O,GAAA4O;MACAC;QACIgM;UACIulE,SAAA;UACA15D,MAAA1mB,GAAAquF;;QAEJW;UACI5O,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ09E;UACI7O,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ29E;UACI9O,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ49E;UACI/O,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ69E;UACIhP,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJ6jE;UACIgL,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJg9E;UACInO,SAAA;UACA15D,MAAA1mB,GAAAqgF;;;MAIRh2E,MAAA,SAAAA;QACIzF,KAAAuqF,YAAA7O,SAAA;QACA17E,KAAAqqF,SAAA3O,SAAA;QACA17E,KAAAoqF,SAAA1O,SAAA;QACA17E,KAAAsqF,QAAA5O,SAAA;QACA17E,KAAAiW,SAAAuS,SAAA;QACAxoB,KAAAwqF,WAAA9O,SAAA;QACA17E,KAAAwwE,KAAAkL,SAAA;QACA17E,KAAAwwE,KAAA9jE,GAAA,SAAA1M,KAAAuwE,YAAAvwE;QACAA,KAAA2R,SAAA;QACA/D,YAAAlB,GAAAkB,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;;MAGJsT,SAAA,SAAAA,QAAA3B,QAAA8vD;QACIzhE,KAAA2R,SAAAA;QACA,IAAA3R,KAAA2R,WAAA8vD,SAAA;UACIzhE,KAAAoqF,SAAA1O,SAAA;UACA17E,KAAAqqF,SAAA3O,SAAA;UACA17E,KAAAsqF,QAAA5O,SAAA;eACH,IAAA17E,KAAA2R,WAAA/O,IAAAgC,SAAAgN,IAAA;UACG5R,KAAAoqF,SAAA1O,SAAA;UACA17E,KAAAqqF,SAAA3O,SAAA;UACA17E,KAAAsqF,QAAA5O,SAAA;eACH;UACG17E,KAAAoqF,SAAA1O,SAAA;UACA17E,KAAAqqF,SAAA3O,SAAA;UACA17E,KAAAsqF,QAAA5O,SAAA;;QAEJ17E,KAAAuqF,YAAA7O,SAAA;QACA17E,KAAAwqF,WAAA9O,SAAA;QACA17E,KAAAiW,SAAAuS,SAAAxoB,KAAA2R;QAEA/O,IAAAkC,eAAA9E,KAAA2R,WAAA/O,IAAAgC,SAAAgN,KAGI5R,KAAAwwE,KAAAkL,SAAA,OAFA17E,KAAAwwE,KAAAkL,SAAA;QAIJ75E,KAAAC,YAAAqU,YAAAnW,KAAA2R;;MAGJgqE,aAAA,SAAAA,YAAAlmE;QACIlQ,QAAAC,IAAA,aAAAiQ;QACA,IAAAA,QAAAM,WAAA/V,KAAA2R,QAAA;UACIpM,QAAAC,IAAA;UACAD,QAAAC,IAAAiQ;UACAzV,KAAAiW,SAAAuS,SAAA/S,QAAAQ;UACAR,QAAAS,YAAA,QAAAT,QAAAS,YACI9a,GAAAC,OAAAugF;YAAA1V,KAAAzwD,QAAAS;YAAA4L,MAAA;aAAA,SAAAtmB,KAAAqgF;YACI,IAAAC,cAAA,IAAA1gF,GAAA2gF,YAAAF,SAAAzgF,GAAA4gF,KAAA,GAAA,GAAAH,QAAA/nE,OAAA+nE,QAAAhoE;YACA7T,KAAA2pF,SAAA7N,cAAAA;YACHr6E,KAAAzB;;;MAKboW,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAQ,kBAAArO,KAAA27E,aAAA37E;;MAGJuwE,YAAA,SAAAA;QACItgE,IAAApI,OAAA0oE,WAAAvwE,KAAA2R,QAAA;;;;;;;;;;;IClGR,IAAA84E,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA2qF,cAAA3qF,KAAA4qF,SAAA,aAAArhF,aAAAnO,GAAAquF;QACAzpF,KAAA6qF,YAAAjoF,IAAAM,cAAA;QACAlD,KAAA2qF,YAAAniE,SAAAxoB,KAAA6qF;QACA7qF,KAAA8qF;QACA9qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;QACAA,KAAA4qF,SAAA,WAAAl+E,GAAA,SAAA1M,KAAAgrF,gBAAAhrF;QACAA,KAAA4qF,SAAA,WAAAl+E,GAAA,SAAA1M,KAAAirF,gBAAAjrF;QACAA,KAAA4qF,SAAA,UAAAl+E,GAAA,SAAA1M,KAAA60E,YAAA70E;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAiB,oBAAA9O,KAAA8O,oBAAA9O;;MAGJgrF,gBAAA,SAAAA;QACI,KAAA,IAAApvF,IAAA,GAAAA,IAAAgH,IAAAM,cAAArH,QAAAD,KACI,IAAAoE,KAAA6qF,cAAAjoF,IAAAM,cAAAtH,MACIgH,IAAAM,cAAArH,SAAAD,IAAA,GAAA;UACIoE,KAAA6qF,YAAAjoF,IAAAM,cAAAtH,IAAA;UACA;;QAKZoE,KAAA2qF,YAAAniE,SAAAxoB,KAAA6qF;QACA7qF,KAAA8qF;;MAGJG,gBAAA,SAAAA;QACI,KAAA,IAAArvF,IAAA,GAAAA,IAAAgH,IAAAM,cAAArH,QAAAD,KACI,IAAAoE,KAAA6qF,cAAAjoF,IAAAM,cAAAtH,MACIA,IAAA,GAAA;UACIoE,KAAA6qF,YAAAjoF,IAAAM,cAAAtH,IAAA;UACA;;QAIZoE,KAAA2qF,YAAAniE,SAAAxoB,KAAA6qF;QACA7qF,KAAA8qF;;MAGJA,iBAAA,SAAAA;QACI9qF,KAAA6qF,cAAAjoF,IAAAM,cAAA,KACIlD,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAA8vF,QAAAC,eAAA,QAEAnrF,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAA8vF,QAAAC,eAAA;QAGJnrF,KAAA6qF,cAAAjoF,IAAAM,cAAAN,IAAAM,cAAArH,SAAA,KACImE,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAA8vF,QAAAC,eAAA,QAEAnrF,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAA8vF,QAAAC,eAAA;;MAIRJ,MAAA,SAAAA;QACIriF,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJirE,YAAA,SAAAA;QAEIhzE,KAAAC,YAAAoO;QAEA,IAAAb,SAAA,IAAAY,IAAAxH;QACA4G,OAAA6wD,WAAAlgE,KAAA4qF,SAAA,YAAArhF,aAAAnO,GAAAgwF,SAAA5iE;QACA5lB,IAAAK,mBAAAjD,KAAA6qF;QACAx7E,OAAA8wD,YAAAv9D,IAAAK;QACAoM,OAAA46C,OAAA;QACA56C,OAAA+wD,WAAA;QACA/wD,OAAA86C,aAAA;QACA96C,OAAAgxD,eAAAz9D,IAAAK;QACA,IAAAsP,SAAAtC,IAAApI,OAAAgtE,WAAAxlE;UAAA8wD,WAAAv9D,IAAAK;;QACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;;MAIRzD,oBAAA,SAAAA,mBAAA/D;QACI,IAAApE,SAAAoE,KAAA6H,IAAAjM;QACA,IAAA,QAAAA,QACIpB,QAAAC,IAAA,sFAAAmB,cACH;UACGpB,QAAAC,IAAA,0CAAAwO,KAAAuB,UAAAxK,KAAA6H;UACArN,QAAAC,IAAA,yBAAAuF,KAAA6H,IAAAiuD;UACAj+D,IAAAqtD,SAAAllD,KAAA6H,IAAAiuD;UAEAzlE,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,aAAA,SAAA7J;YACI,IAAAssF,OAAAtsF,IAAAwK,aAAA;YACA8hF,KAAAC,eAAAvgF,KAAA6H;YACAlK,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;YACAkE,KAAAqJ,KAAAO;YACHnI,KAAAzB,SAED0I,OAAAE,OAAA,UAAA,SAAA7J;YACI,IAAAssF,OAAAtsF,IAAAwK,aAAA;YACA8hF,KAAAC,eAAAvgF,KAAA6H;YACAlK,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;YACAkE,KAAAqJ,KAAAO;YACHnI,KAAAzB;;;MAKboW,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAiB,oBAAA9O,KAAA8O,oBAAA9O;;;;;;;;;;;;IChHR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAAurF,MAAAvrF;QACAA,KAAA4qF,SAAA,SAAAl+E,GAAA,SAAA1M,KAAA+lE,OAAA/lE;;MAGJ+lE,OAAA,SAAAA;QACIr9D,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ2hF,MAAA,SAAAA;QACI,KAAA1pF,KAAAC,YAAAmP,UACI;QAEJhB,IAAApI,OAAA8I,UAAA;QACA,IAAAmB,YAAApJ,OAAAmB,OAAA;QACA,IAAAiI,WAAA;UACIpJ,OAAAiB,QAAA;UACAmI,UAAAlI;;QAEJlB,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;QACA/H,KAAAC,YAAA6R;;;;;;;;;;;;;;;;;;;;;;IC7BR,IAAA1D,MAAA5H,QAAA;IACA,IAAAoiF,UAAApiF,QAAA;IACAjN,GAAA0O,OAAA0hF;MACIzhF,SAAA0gF;MAEAxgF;QACIwhF;UACIjQ,SAAA;UACAtV,KAAA9qE,GAAAihF;;;MAGR9xE,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAAqJ,KAAAqD,GAAAkB,YAAAC,UAAAC,YAAA9N,KAAA8N,YAAA9N;QACAA,KAAA0rF,gBAAA;QACA1rF,KAAA2rF,QAAA;QACA/9E,YAAAlB,GAAAkB,YAAAC,UAAAG,YAAAhO,KAAAgO,YAAAhO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAM,UAAAnO,KAAAmO,UAAAnO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAe,oBAAA5O,KAAA2Q,WAAA3Q;QACAA,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAAsiF,WAAAhxE,GAAA,YAAA1M,KAAA4rF,YAAA5rF;QACAA,KAAA4qF,SAAA,QAAAl+E,GAAAtR,GAAAuR,KAAAC,UAAAC,aAAA7M,KAAA6rF,MAAA7rF;QACAA,KAAA8rF,QAAA1wF,GAAA+hF,YAAAC,KAAAp9E,KAAAyrF,UAAA,MAAA;;MAEJG,YAAA,SAAAA;QACI5rF,KAAA2rF,QAAA;QACA3rF,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAAsiF,WAAAluE,IAAA,YAAAxP,KAAA4rF,YAAA5rF;;MAEJ+rF,UAAA,SAAAA;QACI/rF,KAAAgsF,aAAAhsF,KAAA4qF,SAAA,UAAArhF,aAAA;QACAvJ,KAAAgsF,WAAA14E;UAAA1B,IAAAhP,IAAAiC,cAAA;;QACA7E,KAAAisF,YAAAjsF,KAAA4qF,SAAA,SAAArhF,aAAA;QACAvJ,KAAAisF,UAAA34E;UAAA1B,IAAAhP,IAAAiC,cAAA;;;MAEJqnF,cAAA,SAAAA;QACI,KAAA,IAAAtwF,IAAA,GAAAA,IAAA,IAAAA,KACIoE,KAAAmsF;QAEJx1E,cAAA3W,KAAAosF;QACApsF,KAAAosF,iBAAAv1E,YAAA;UACI7W,KAAAmsF;UACH1qF,KAAAzB,OAAA;;MAEL2Q,WAAA,SAAAA,UAAA5F;QACIlJ,KAAAC,YAAA2P,cAAAtP,UAAAK,QACIkG,OAAAE,OAAA,SAAA,SAAA7J;UACI,IAAAsU,QAAAtU,IAAAwK,aAAA;UACA8J,SACIA,MAAAC,QAAA;UAEP7R,KAAAzB;;MAGT8N,YAAA,SAAAA;QACI,IAAArB,YAAA5K,KAAAK,aAAAuK;QACAzM,KAAAqsF,cAAA5/E;;MAEJ4/E,eAAA,SAAAA,cAAApgF;QACIpK,KAAAC,YAAA2P,cAAAtP,UAAAI,QACI0N,IAAApI,OAAAiP,eAAA9C,KAAAuB;UACIF,QAAAzS,IAAAe;UACAsI,UAAAA;;;MAKZkgF,kBAAA,SAAAA;QACI,KAAAvpF,IAAAkC,aACI;QAEJ,IAAA4P,aAAA7S,KAAAE,cAAAwJ;QACA1J,KAAAC,YAAA2P,cAAAtP,UAAAI,QACI0N,IAAApI,OAAAiP,eAAA9C,KAAAuB;UACIF,QAAAzS,IAAAa;UACAiR,YAAAA;;;MAIZm3E,MAAA,SAAAA;QACI,KAAA7rF,KAAA2rF,OACI;QAEJjjF,OAAAE,OAAA;;MAGJuF,UAAA,SAAAA;QACInO,KAAA4qF,SAAA,YAAArhF,aAAAnO,GAAAsiF,WAAAN;QACAp9E,KAAA4qF,SAAA,YAAArhF,aAAAnO,GAAAkxF,aAAAlP;QACAzmE,cAAA3W,KAAAosF;QACAhxF,GAAA+hF,YAAAkM,KAAArpF,KAAA8rF;;MAIJ99E,YAAA,SAAAA;QACIhO,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAAsiF,WAAAN;QACAp9E,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAAkxF,aAAAlP;QACAp9E,KAAAksF;QACAlsF,KAAA+rF;QACAlqF,KAAAC,YAAAkP,YAAA;;OA/FRs0C,gBAAAkmC,WAAA,aAAA,SAAA76E;MAkGQ9O,KAAAC,YAAA2P,cAAAtP,UAAAK,QACIkG,OAAAE,OAAA,SAAA,SAAA7J;QACI,IAAAsU,QAAAtU,IAAAwK,aAAA;QACA8J,SACIA,MAAAC,QAAA;QAEP7R,KAAAzB;MAEL6B,KAAAC,YAAAmP,WAAA;MACAjR,KAAA29E,aAAA;QACI97E,KAAAC,YAAAyqF,UAAA;SACH;QACJjnC,gBAAAkmC,WAAA,aAAA,SAAAp1E;MAEGhb,GAAA+hF,YAAAkM,KAAArpF,KAAA8rF;MACAl+E,YAAA4B,IAAA5B,YAAAC,UAAAG,YAAAhO,KAAAgO,YAAAhO;MACA4N,YAAA4B,IAAA5B,YAAAC,UAAAM,UAAAnO,KAAAmO,UAAAnO;MACA4N,YAAA4B,IAAA5B,YAAAC,UAAAe,oBAAA5O,KAAA2Q,WAAA3Q;QACHwrF;;;;;;;;;;ICtHL,IAAAf,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEAxgF;MAEA7I,OAAA,SAAAA;QACIpB,KAAA4qF,SAAA,cAAAl+E,GAAA,SAAA1M,KAAAwsF,YAAAxsF;QACAA,KAAA4qF,SAAA,cAAAl+E,GAAA,SAAA1M,KAAA60E,YAAA70E;QACAA,KAAA4qF,SAAA,YAAAl+E,GAAA,SAAA1M,KAAAk1E,UAAAl1E;QACAA,KAAA4qF,SAAA,gBAAAl+E,GAAA,SAAA1M,KAAAysF,cAAAzsF;QACAA,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA6rF,MAAA7rF;QACA6B,KAAAC,YAAAyP,WACIvR,KAAA4qF,SAAA,QAAArhF,aAAAnO,GAAAquF,OAAAjhE,SAAA3mB,KAAAC,YAAAyP,WAEAvR,KAAA4qF,SAAA,QAAArhF,aAAAnO,GAAAquF,OAAAjhE,SAAA5lB,IAAAgC,SAAAgN;QAEJ/P,KAAAC,YAAA0P,aACIpW,GAAAC,OAAAugF;UAAA1V,KAAArkE,KAAAC,YAAA0P;UAAAsQ,MAAA;WAAA,SAAAtmB,KAAAqgF;UACI,IAAAC,cAAA,IAAA1gF,GAAA2gF,YAAAF,SAAAzgF,GAAA4gF,KAAA,GAAA,GAAAH,QAAA/nE,OAAA+nE,QAAAhoE;UACA7T,KAAA4qF,SAAA,YAAArhF,aAAAnO,GAAAqgF,QAAAK,cAAAA;UACHr6E,KAAAzB;QAeLA,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA6pF,MAAA7pF;;MAGJ6pF,MAAA,SAAAA;QACIhoF,KAAAC,YAAAoO;QAEArO,KAAAC,YAAA8O,QAAAiF,gBAiBIhU,KAAAC,YAAA8O,QAAAkF,KAAA;UACIC,SAAAnT,IAAAgC,SAAAgN,KAAA;UACAvB,MAAAzN,IAAA2B;aAlBJ1C,KAAAC,YAAA8O,QAAAoF,QAAApT,IAAAyB,IAAAzB,IAAA0B,MAAA;UACQzC,KAAAC,YAAA8O,QAAAkF,KAAA;YACIC,SAAAnT,IAAAgC,SAAAgN,KAAA;YACA3N,SAAA;YACAgS,UAAApU,KAAAC,YAAAyP,WAAA1P,KAAAC,YAAAyP,WAAA3O,IAAAgC,SAAAgN,KAAA;YACAsE,UAAArU,KAAAC,YAAA0P,YAAA3P,KAAAC,YAAA0P,YAAA;;UAEJxL,WAAA;YACInE,KAAAC,YAAA8O,QAAAkF,KAAA;cACIC,SAAAnT,IAAAgC,SAAAgN,KAAA;cACAvB,MAAAzN,IAAA2B;;aAEP;;;MAWjBsnF,MAAA,SAAAA;QACI57E,IAAApI,OAAA0L,OAAA;QACA7K,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ8iF,UAAA,SAAAA;QACI9pF,IAAAkC,cAAA;QACAlC,IAAAK,mBAAA;;MAGJupF,YAAA,SAAAA;QACI3qF,KAAAC,YAAAoO;QAEAtN,IAAA8B,YAAA9B,IAAAC;QACA0C,QAAAC,IAAA;QACA5C,IAAA+B,aAAA/B,IAAAG,cACIH,IAAAK,mBAAA,IACI7H,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,iBAAA,SAAA7J;UACI,IAAA4tF,WAAA5tF,IAAAwK,aAAA;UACAojF,SAAAlmF;aAGJiC,OAAAE,OAAA,cAAA,SAAA7J;UACI,IAAA4tF,WAAA5tF,IAAAwK,aAAA;UACAojF,SAAAlmF;aAIRrL,GAAAmV,SAAA4C,UAAA,UAEPvQ,IAAA+B,aAAA/B,IAAAI,gBACG,MAAAJ,IAAAK,mBACI7H,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,oBAAA,SAAA7J;UACI,IAAA4tF,WAAA5tF,IAAAwK,aAAA;UACAojF,SAAAlmF;aAGJiC,OAAAE,OAAA,iBAAA,SAAA7J;UACI,IAAA4tF,WAAA5tF,IAAAwK,aAAA;UACAojF,SAAAlmF;aAGX,MAAA7D,IAAAK,qBACG7H,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE;QACIpL,OAAAE,OAAA,oBAAA,SAAA7J;UACI,IAAA4tF,WAAA5tF,IAAAwK,aAAA;UACAojF,SAAAlmF;;;MAYpBouE,YAAA,SAAAA;QACIhzE,KAAAC,YAAAoO;QAEA9U,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,qBAEAF,OAAAE,OAAA;;MAIRssE,UAAA,SAAAA;QACIrzE,KAAAC,YAAAoO;QAEA9U,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,mBAEAF,OAAAE,OAAA;;MAIR6jF,cAAA,SAAAA;QACI/yF,OAAAwX,MACIA,GAAA07E;UAAAC,UAAA;;;;;;;;;;;;;ICtJZ,IAAApC,UAAApiF,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,SAAAl+E,GAAA,SAAA1M,KAAAmU,WAAAnU;;MAGJmU,WAAA,SAAAA;QACItS,KAAAC,YAAAkQ;;;;;;;;;;;ICXR,IAAAy4E,UAAApiF,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEArpF,OAAA,SAAAA;QACIwM,YAAAlB,GAAAkB,YAAAC,UAAAjF,QAAA5I,KAAA8sF,mBAAA9sF;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAlE,SAAA3J,KAAA8sF,mBAAA9sF;QACAA,KAAA+sF,YAAA;QACA/sF,KAAAqJ,KAAAqyE,SAAA;;MAGJoR,mBAAA,SAAAA;QAEI,IAAAE,iBAAA;QACA,KAAA,IAAApxF,IAAA8M,OAAAC,OAAA9M,SAAA,GAAAD,KAAA,GAAAA,KAAA;UACI,IAAAqxF,KAAAvkF,OAAAC,OAAA/M;UACA,IAAAsxF,QAAAD,GAAA1jF,aAAA;UACA,IAAA2jF,SAAAA,MAAAH,WAAA;YACIC,gBAAApxF;YACA;;;QAGR,MAAAoxF,iBAAA,IAWC;UACGhtF,KAAAqJ,KAAAqyE,SAAA;UACA;;QAZA17E,KAAAqJ,KAAAqyE,SAAA;QACA,KAAA,IAAAlhE,IAAAwyE,eAAAxyE,IAAA9R,OAAAC,OAAA9M,QAAA2e,KAAA;UACI,IAAAlR,WAAAZ,OAAAC,OAAA6R;UACA,IAAAlR,UAAA;YACItJ,KAAAqJ,KAAAI,gBAAApM,OAAAqM;YACAJ,SAAAG,gBAAApM,OAAAqM;iBAEAnE,QAAAC,IAAA;;;MAShB2nF,SAAA,SAAAA;QAEI,IAAAH,iBAAA;QACA,KAAA,IAAApxF,IAAA8M,OAAAC,OAAA9M,SAAA,GAAAD,KAAA,GAAAA,KAAA;UACI,IAAAqxF,KAAAvkF,OAAAC,OAAA/M;UACA,IAAAsxF,QAAAD,GAAA1jF,aAAA;UACA,IAAA2jF,MAAAH,WAAA;YACIC,gBAAApxF;YACA;;;QAGR,MAAAoxF,iBAAA,IAWC;UACGhtF,KAAAqJ,KAAAqyE,SAAA;UACA;;QAZA17E,KAAAqJ,KAAAqyE,SAAA;QACA,KAAA,IAAAlhE,IAAAwyE,eAAAxyE,IAAA9R,OAAAC,OAAA9M,QAAA2e,KAAA;UACI,IAAAlR,WAAAZ,OAAAC,OAAA6R;UACA,IAAAlR,UAAA;YACItJ,KAAAqJ,KAAAI,gBAAApM,OAAAqM;YACAJ,SAAAG,gBAAApM,OAAAqM;iBAEAnE,QAAAC,IAAA;;;MAShB4Q,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAjF,QAAA5I,KAAA8sF,mBAAA9sF;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAlE,SAAA3J,KAAA8sF,mBAAA9sF;;;;;;;;;;;ICrER,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;QACImjF,eAAAhyF,GAAAuR;;MAGJpC,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA2Q,WAAA3Q;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;MAGJyG,gBAAA,SAAAA;QACI,IAAA8L,SAAA;QACA,IAAA3P,IAAA8B,cAAA9B,IAAAC,cAAA;UACI0P,SAAAtC,IAAApI,OAAApB,eAAA7D,IAAAK,kBAAA;UACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;eAEP,IAAA3P,IAAA8B,cAAA9B,IAAAE,gBAAA;UACG,IAAAmyE,YAAA,IAAAhlE,IAAAzH;UACAysE,UAAA9U,YAAAv9D,IAAAK;UACAgyE,UAAAhrB,OAAA;UACAgrB,UAAA7U,WAAA;UACA6U,UAAAlU,OAAAn+D,IAAAyqF;UACA96E,SAAAtC,IAAApI,OAAAgnE,uBAAAoG,WAAA;UACA,MAAA1iE,UACIhN,QAAAC,IAAA,6DAAA+M;;;MAKZ4B,WAAA,SAAAA;QACI5O,QAAAC,IAAA;QACApK,GAAAmV,SAAA4C,UAAA;;MAGJ3E,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QACIpB,QAAAC,IAAA,sFAAAuF,KAAApE,cACH;UACGpB,QAAAC,IAAA;UACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;;QAEJj+D,IAAAqtD,SAAAllD,KAAArE,SAAAm6D;QACA,IAAA3sD,YAAAtR,IAAAgC,SAAAgN;QACArM,QAAAC,IAAA,+BAAA0O;QAEA,IAAAo5E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAzP,KAAAgI,iBAAAlX,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAgI,iBAAAyH;YACA5X,IAAAgC,SAAAgN,OAAA7G,KAAAgI,iBAAAyH,GAAA7I,UACIuC,QAAAnX,KAAAgO,KAAAgI,iBAAAyH,GAAA7I;;;QAKZ,KAAA,IAAA/V,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAA1Q,IAAAgC;YACA;;;QAGRhC,IAAAiC,gBAAAqP;QACA,IAAAA,QAAArY,UAAA+G,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;;;MAIRzF,gBAAA,SAAAA,eAAA1D;QACIxF,QAAAC,IAAA,kCAAAwO,KAAAuB,UAAAxK,KAAAiI;QACA,IAAAs6E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAxa,KAAAotF,YAAAvxF,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAiI;YACA;;;;MAKZrC,WAAA,SAAAA;QACIV,IAAApI,OAAA8I;QACAjI,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ+E,iBAAA,SAAAA,gBAAA5D;QACI,IAAAnI,IAAAqtD,WAAAllD,KAAA2G,cAAAmvD,QACI,KAAA,IAAAjlE,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,cAAAA,WAAA1oF,YAAA0oF,WAAA34E,aAAA5J,KAAA2G,cAAAC,QAAA;YACI27E,WAAA7nF;YACA;;;;MAMhBiJ,mBAAA,SAAAA,kBAAA3D;QACI,IAAA,QAAAA,KAAAkI,aAAAtM,QAAA;UACIpB,QAAAC,IAAA;UACA,KAAA,IAAA5J,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;YACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;YACA,IAAA+jF,YAAA;cACIA,WAAA7nF;cACA;;;UAGRiD,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;eAEArE,QAAAC,IAAA;;MAIRqJ,kBAAA,SAAAA,iBAAA9D;QACI,IAAA,QAAAA,KAAA+H,YAAAnM,QAAA;UACIpB,QAAAC,IAAA;UACAxF,KAAAutF;eAEAhoF,QAAAC,IAAA,8FAAAuF,KAAA+H,YAAAnM;;MAIR4mF,iBAAA,SAAAA;QACI3qF,IAAAkC,cAAA;QACA,IAAAsO;UACIiC,QAAAzS,IAAAO;UACA+Q,SAAAtR,IAAAiC;;QAEJhD,KAAAC,YAAAwT,YAAAlC;;MAGJgD,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;;;;;;;;;;;IC3JR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;QACImjF,eAAAhyF,GAAAuR;;MAGJpC,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA2Q,WAAA3Q;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;MAGJyG,gBAAA,SAAAA;QACI,IAAA8L,SAAA;QACA,IAAA3P,IAAA8B,cAAA9B,IAAAC,cAAA;UACI0P,SAAAtC,IAAApI,OAAApB,eAAA7D,IAAAK,kBAAA;UACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;eAEP,IAAA3P,IAAA8B,cAAA9B,IAAAE,gBAAA;UACG,IAAAmyE,YAAA,IAAAhlE,IAAAzH;UACAysE,UAAA9U,YAAAv9D,IAAAK;UACAgyE,UAAAhrB,OAAA;UACAgrB,UAAA7U,WAAA;UACA6U,UAAAlU,OAAAn+D,IAAAyqF;UACA96E,SAAAtC,IAAApI,OAAAgnE,uBAAAoG,WAAA;UACA,MAAA1iE,UACIhN,QAAAC,IAAA,6DAAA+M;;;MAKZ4B,WAAA,SAAAA;QACI5O,QAAAC,IAAA;QACApK,GAAAmV,SAAA4C,UAAA;;MAGJ3E,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QACIpB,QAAAC,IAAA,sFAAAuF,KAAApE,cACH;UACGpB,QAAAC,IAAA;UACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;;QAEJj+D,IAAAqtD,SAAAllD,KAAArE,SAAAm6D;QACA,IAAA3sD,YAAAtR,IAAAgC,SAAAgN;QACArM,QAAAC,IAAA,+BAAA0O;QAEA,IAAAo5E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAzP,KAAAgI,iBAAAlX,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAgI,iBAAAyH;YACA5X,IAAAgC,SAAAgN,OAAA7G,KAAAgI,iBAAAyH,GAAA7I,UACIuC,QAAAnX,KAAAgO,KAAAgI,iBAAAyH,GAAA7I;;;QAKZ,KAAA,IAAA/V,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAA1Q,IAAAgC;YACA;;;QAGRhC,IAAAiC,gBAAAqP;QACA,IAAAA,QAAArY,UAAA+G,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;;;MAIRzF,gBAAA,SAAAA,eAAA1D;QACIxF,QAAAC,IAAA,kCAAAwO,KAAAuB,UAAAxK,KAAAiI;QACA,IAAAs6E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAxa,KAAAotF,YAAAvxF,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAiI;YACA;;;;MAKZrC,WAAA,SAAAA;QACIV,IAAApI,OAAA8I;;MAGJhC,iBAAA,SAAAA,gBAAA5D;QACI,IAAAnI,IAAAqtD,WAAAllD,KAAA2G,cAAAmvD,QACI,KAAA,IAAAjlE,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,cAAAA,WAAA1oF,YAAA0oF,WAAA34E,aAAA5J,KAAA2G,cAAAC,QAAA;YACI27E,WAAA7nF;YACA;;;;MAMhBiJ,mBAAA,SAAAA,kBAAA3D;QACI,IAAA,QAAAA,KAAAkI,aAAAtM,QAAA;UACIpB,QAAAC,IAAA;UACA,KAAA,IAAA5J,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;YACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;YACA,IAAA+jF,YAAA;cACIA,WAAA7nF;cACA;;;UAGRiD,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;eAEArE,QAAAC,IAAA;;MAIRqJ,kBAAA,SAAAA,iBAAA9D;QACI,IAAA,QAAAA,KAAA+H,YAAAnM,QAAA;UACIpB,QAAAC,IAAA;UACAxF,KAAAutF;eAEAhoF,QAAAC,IAAA,8FAAAuF,KAAA+H,YAAAnM;;MAIR4mF,iBAAA,SAAAA;QACI3qF,IAAAkC,cAAA;QACA,IAAAsO;UACIiC,QAAAzS,IAAAO;UACA+Q,SAAAtR,IAAAiC;;QAEJhD,KAAAC,YAAAwT,YAAAlC;;MAGJgD,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;;;;;;;;;;;ICzJR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;QACImjF,eAAAhyF,GAAAuR;;MAGJpC,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA2Q,WAAA3Q;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;MAGJyG,gBAAA,SAAAA;QACI,IAAA8L,SAAA;QACA,IAAA3P,IAAA8B,cAAA9B,IAAAC,cAAA;UACI0P,SAAAtC,IAAApI,OAAApB,eAAA7D,IAAAK,kBAAA;UACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;eAEP,IAAA3P,IAAA8B,cAAA9B,IAAAE,gBAAA;UACG,IAAAmyE,YAAA,IAAAhlE,IAAAzH;UACAysE,UAAA9U,YAAAv9D,IAAAK;UACAgyE,UAAAhrB,OAAA;UACAgrB,UAAA7U,WAAA;UACA6U,UAAAlU,OAAAn+D,IAAAyqF;UACA96E,SAAAtC,IAAApI,OAAAgnE,uBAAAoG,WAAA;UACA,MAAA1iE,UACIhN,QAAAC,IAAA,6DAAA+M;;;MAKZ4B,WAAA,SAAAA;QACI5O,QAAAC,IAAA;QACApK,GAAAmV,SAAA4C,UAAA;;MAGJ3E,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QAAA;UACIpB,QAAAC,IAAA,sFAAAuF,KAAApE;UACA;;QAEApB,QAAAC,IAAA;QACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;QAEJj+D,IAAAqtD,SAAAllD,KAAArE,SAAAm6D;QACA,IAAA3sD,YAAAtR,IAAAgC,SAAAgN;QACArM,QAAAC,IAAA,+BAAA0O;QAEA,IAAAo5E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAzP,KAAAgI,iBAAAlX,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAgI,iBAAAyH;YACA5X,IAAAgC,SAAAgN,OAAA7G,KAAAgI,iBAAAyH,GAAA7I,UACIuC,QAAAnX,KAAAgO,KAAAgI,iBAAAyH,GAAA7I;;;QAKZ,KAAA,IAAA/V,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAA1Q,IAAAgC;YACA;;;QAGRhC,IAAAiC,gBAAAqP;QACA,IAAAA,QAAArY,UAAA+G,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;;;MAIRzF,gBAAA,SAAAA,eAAA1D;QACIxF,QAAAC,IAAA,kCAAAwO,KAAAuB,UAAAxK,KAAAiI;QACA,IAAAs6E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAxa,KAAAotF,YAAAvxF,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAiI;YACA;;;;MAKZrC,WAAA,SAAAA;QACIV,IAAApI,OAAA8I;QACAjI,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ+E,iBAAA,SAAAA,gBAAA5D;QACI,IAAAnI,IAAAqtD,WAAAllD,KAAA2G,cAAAmvD,QACI,KAAA,IAAAjlE,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,cAAAA,WAAA1oF,YAAA0oF,WAAA34E,aAAA5J,KAAA2G,cAAAC,QAAA;YACI27E,WAAA7nF;YACA;;;;MAMhBiJ,mBAAA,SAAAA,kBAAA3D;QACI,IAAA,QAAAA,KAAAkI,aAAAtM,QAAA;UACIpB,QAAAC,IAAA;UACA,KAAA,IAAA5J,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;YACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;YACA,IAAA+jF,YAAA;cACIA,WAAA7nF;cACA;;;UAGRiD,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;eAEArE,QAAAC,IAAA;;MAIRqJ,kBAAA,SAAAA,iBAAA9D;QACI,IAAA,QAAAA,KAAA+H,YAAAnM,QAAA;UACIpB,QAAAC,IAAA;UACAxF,KAAAutF;eAEAhoF,QAAAC,IAAA,8FAAAuF,KAAA+H,YAAAnM;;MAIR4mF,iBAAA,SAAAA;QACI3qF,IAAAkC,cAAA;QACA,IAAAsO;UACIiC,QAAAzS,IAAAO;UACA+Q,SAAAtR,IAAAiC;;QAEJhD,KAAAC,YAAAwT,YAAAlC;;MAGJgD,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;;;;;;;;;;;IC5JR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;QACImjF,eAAAhyF,GAAAuR;;MAGJpC,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA2Q,WAAA3Q;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;MAGJyG,gBAAA,SAAAA;QACI,IAAA8L,SAAA;QACA,IAAA3P,IAAA8B,cAAA9B,IAAAC,cAAA;UACI0P,SAAAtC,IAAApI,OAAApB,eAAA7D,IAAAK,kBAAA;UACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;eAEP,IAAA3P,IAAA8B,cAAA9B,IAAAE,gBAAA;UACG,IAAAmyE,YAAA,IAAAhlE,IAAAzH;UACAysE,UAAA9U,YAAAv9D,IAAAK;UACAgyE,UAAAhrB,OAAA;UACAgrB,UAAA7U,WAAA;UACA6U,UAAAlU,OAAAn+D,IAAAyqF;UACA96E,SAAAtC,IAAApI,OAAAgnE,uBAAAoG,WAAA;UACA,MAAA1iE,UACIhN,QAAAC,IAAA,6DAAA+M;;;MAKZ4B,WAAA,SAAAA;QACI5O,QAAAC,IAAA;QACApK,GAAAmV,SAAA4C,UAAA;;MAGJ3E,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QACIpB,QAAAC,IAAA,sFAAAuF,KAAApE,cACH;UACGpB,QAAAC,IAAA;UACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;;QAEJj+D,IAAAqtD,SAAAllD,KAAArE,SAAAm6D;QACA,IAAA3sD,YAAAtR,IAAAgC,SAAAgN;QACArM,QAAAC,IAAA,+BAAA0O;QAEA,IAAAo5E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAzP,KAAAgI,iBAAAlX,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAgI,iBAAAyH;YACA5X,IAAAgC,SAAAgN,OAAA7G,KAAAgI,iBAAAyH,GAAA7I,UACIuC,QAAAnX,KAAAgO,KAAAgI,iBAAAyH,GAAA7I;;;QAKZ,KAAA,IAAA/V,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAA1Q,IAAAgC;YACA;;;QAGRhC,IAAAiC,gBAAAqP;QACA,IAAAA,QAAArY,UAAA+G,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;;;MAIRzF,gBAAA,SAAAA,eAAA1D;QACIxF,QAAAC,IAAA,kCAAAwO,KAAAuB,UAAAxK,KAAAiI;QACA,IAAAs6E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAxa,KAAAotF,YAAAvxF,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAiI;YACA;;;;MAKZrC,WAAA,SAAAA;QACIV,IAAApI,OAAA8I;;MAGJhC,iBAAA,SAAAA,gBAAA5D;QACI,IAAAnI,IAAAqtD,WAAAllD,KAAA2G,cAAAmvD,QACI,KAAA,IAAAjlE,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,cAAAA,WAAA1oF,YAAA0oF,WAAA34E,aAAA5J,KAAA2G,cAAAC,QAAA;YACI27E,WAAA7nF;YACA;;;;MAMhBiJ,mBAAA,SAAAA,kBAAA3D;QACI,IAAA,QAAAA,KAAAkI,aAAAtM,QAAA;UACIpB,QAAAC,IAAA;UACA,KAAA,IAAA5J,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;YACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;YACA,IAAA+jF,YAAA;cACIA,WAAA7nF;cACA;;;UAGRiD,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;eAEArE,QAAAC,IAAA;;MAKRqJ,kBAAA,SAAAA,iBAAA9D;QACI,IAAA,QAAAA,KAAA+H,YAAAnM,QAAA;UACIpB,QAAAC,IAAA;UACAxF,KAAAutF;eAEAhoF,QAAAC,IAAA,8FAAAuF,KAAA+H,YAAAnM;;MAIR4mF,iBAAA,SAAAA;QACI3qF,IAAAkC,cAAA;QACA,IAAAsO;UACIiC,QAAAzS,IAAAO;UACA+Q,SAAAtR,IAAAiC;;QAEJhD,KAAAC,YAAAwT,YAAAlC;;MAGJgD,WAAA,SAAAA;QACIxI,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;;;;;;;;;;;IC1JR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA9nF,IAAAkC,cAAA;QACA9E,KAAAotF;QACAptF,KAAAwtF,cAAAxtF,KAAA4qF,SAAA;QACA5qF,KAAAwtF,YAAA9R,SAAA;QACA,KAAA,IAAA9/E,IAAA,GAAAA,IAAAgH,IAAAK,kBAAArH,KAAA;UACI,IAAA6xF,aAAAryF,GAAA6N,YAAAjJ,KAAAwtF;UACAC,WAAA/R,SAAA;UACA17E,KAAA4qF,SAAA,gBAAA8C,SAAAD;UACAA,WAAAxhF,WAAA7Q,GAAAkiF,GAAA,GAAA;UACAt9E,KAAAotF,YAAArwF,KAAA0wF;;QAGJztF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA2Q,WAAA3Q;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;MAGJyG,gBAAA,SAAAA;QACI,IAAA8L,SAAA;QACA,IAAA3P,IAAA8B,cAAA9B,IAAAC,cAAA;UACI0P,SAAAtC,IAAApI,OAAApB,eAAA7D,IAAAK,kBAAA;UACA,MAAAsP,UACIhN,QAAAC,IAAA,6DAAA+M;eAEP,IAAA3P,IAAA8B,cAAA9B,IAAAE,gBAAA;UACG,IAAAmyE,YAAA,IAAAhlE,IAAAzH;UACAysE,UAAA9U,YAAAv9D,IAAAK;UACAgyE,UAAAhrB,OAAA;UACAgrB,UAAA7U,WAAA;UACA6U,UAAAlU,OAAAn+D,IAAAyqF;UACA96E,SAAAtC,IAAApI,OAAAgnE,uBAAAoG,WAAA;UACA,MAAA1iE,UACIhN,QAAAC,IAAA,6DAAA+M;;;MAKZ4B,WAAA,SAAAA;QACI5O,QAAAC,IAAA;QACApK,GAAAmV,SAAA4C,UAAA;;MAGJ3E,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QACIpB,QAAAC,IAAA,sFAAAuF,KAAApE,cACH;UACGpB,QAAAC,IAAA;UACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;;QAEJj+D,IAAAqtD,SAAAllD,KAAArE,SAAAm6D;QACA,IAAA3sD,YAAAtR,IAAAgC,SAAAgN;QACArM,QAAAC,IAAA,+BAAA0O;QAEA,IAAAo5E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAzP,KAAAgI,iBAAAlX,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAgI,iBAAAyH;YACA5X,IAAAgC,SAAAgN,OAAA7G,KAAAgI,iBAAAyH,GAAA7I,UACIuC,QAAAnX,KAAAgO,KAAAgI,iBAAAyH,GAAA7I;;;QAKZ,KAAA,IAAA/V,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAA1Q,IAAAgC;YACA;;;QAGRhC,IAAAiC,gBAAAqP;QACA,IAAAA,QAAArY,UAAA+G,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;;;MAIRzF,gBAAA,SAAAA,eAAA1D;QACIxF,QAAAC,IAAA,kCAAAwO,KAAAuB,UAAAxK,KAAAiI;QACA,IAAAs6E,aAAA;QACA,KAAA,IAAA9yE,IAAA,GAAAA,IAAAxa,KAAAotF,YAAAvxF,QAAA2e,KAAA;UACI8yE,aAAAttF,KAAAotF,YAAA5yE,GAAAjR,aAAA;UACA,IAAA+jF,eAAAA,WAAA1oF,UAAA;YACI0oF,WAAAh6E,QAAAvI,KAAAiI;YACA;;;;MAKZrC,WAAA,SAAAA;QACIV,IAAApI,OAAA8I;;MAGJhC,iBAAA,SAAAA,gBAAA5D;QACI,IAAAnI,IAAAqtD,WAAAllD,KAAA2G,cAAAmvD,QACI,KAAA,IAAAjlE,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;UACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;UACA,IAAA+jF,cAAAA,WAAA1oF,YAAA0oF,WAAA34E,aAAA5J,KAAA2G,cAAAC,QAAA;YACI27E,WAAA7nF;YACA;;;;MAMhBiJ,mBAAA,SAAAA,kBAAA3D;QACI,IAAA,QAAAA,KAAAkI,aAAAtM,QAAA;UACIpB,QAAAC,IAAA;UACA,KAAA,IAAA5J,IAAA,GAAAA,IAAAoE,KAAAotF,YAAAvxF,QAAAD,KAAA;YACI,IAAA0xF,aAAAttF,KAAAotF,YAAAxxF,GAAA2N,aAAA;YACA,IAAA+jF,YAAA;cACIA,WAAA7nF;cACA;;;UAGRiD,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;eAEArE,QAAAC,IAAA;;MAKRqJ,kBAAA,SAAAA,iBAAA9D;QACI,IAAA,QAAAA,KAAA+H,YAAAnM,QAAA;UACIpB,QAAAC,IAAA;UACAxF,KAAAutF;eAEAhoF,QAAAC,IAAA,8FAAAuF,KAAA+H,YAAAnM;;MAIR4mF,iBAAA,SAAAA;QACI3qF,IAAAkC,cAAA;QACA,IAAAsO;UACIiC,QAAAzS,IAAAO;UACA+Q,SAAAtR,IAAAiC;;QAEJhD,KAAAC,YAAAwT,YAAAlC;;MAGJgD,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAgB,kBAAA7O,KAAA6O,kBAAA7O;;;;;;;;;;;;ICpKR5E,GAAA0O;MACIC,SAAA3O,GAAA4O;MACAC;QACIT,OAAA;;MAGJe,QAAA,SAAAA;QAEIvK,KAAA4qF;QACA,IAAA+C,aAAA,SAAAvgF,MAAAw9E;UACI,IAAAgD,WAAAxgF,KAAAwgF;UACA,KAAA,IAAAhyF,IAAA,GAAAA,IAAAgyF,SAAA/xF,QAAAD,KAAA;YACI,IAAAiyF,aAAAD,SAAAhyF,GAAAE;YACA,IAAA+xF,cAAAA,WAAA5tF,QAAA,WAAA,GAAA;cACI,IAAA6tF,WAAAD,WAAAtsF,UAAA;cACAqpF,SAAAkD,aACI1yF,GAAAM,MAAA,0CAAAkyF,SAAAhyF,GAAAE;cAEJ8uF,SAAAkD,YAAAF,SAAAhyF;;YAEJgyF,SAAAhyF,GAAAmyF,gBAAA,KACIJ,WAAAC,SAAAhyF,IAAAgvF;;UAGXnpF,KAAAzB;QACD2tF,WAAA3tF,KAAAqJ,MAAArJ,KAAA4qF;;MAGJx0E,WAAA,SAAAA;QACIxI,YAAA6B,MAAAzP;;;;;;;;;IC7BR,IAAAyqF,UAAApiF,QAAA;IAEAjN,GAAA0O;MAEIC,SAAA0gF;MACAxgF;QACI+jF;UACIxS,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJshF;UACIzS,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJuhF;UACI1S,SAAA;UACA15D,MAAA1mB,GAAAuR;;QAEJwhF;UACI3S,SAAA;UACA15D,MAAA1mB,GAAAuR;;;MAIRpC,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAAguF,WAAAtS,SAAA;QACA17E,KAAAiuF,UAAAvS,SAAA;QACA17E,KAAAkuF,UAAAxS,SAAA;QACA17E,KAAAmuF,UAAAzS,SAAA;QACA17E,KAAAouF,YAAApuF,KAAAiuF,UAAA1kF,aAAA;QACAvJ,KAAAquF,YAAAruF,KAAAkuF,UAAA3kF,aAAA;QACAvJ,KAAAsuF,YAAAtuF,KAAAmuF,UAAA5kF,aAAA;QACAvJ,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;;MAGJ+qF,MAAA,SAAAA;QACIriF,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ0J,SAAA,SAAAA,QAAAi7E;QACIhpF,QAAAC,IAAA;QACA,KAAA,IAAA5J,IAAA,GAAAA,IAAA2yF,SAAA1yF,QAAAD,KACI,IAAA,MAAAA,GAAA;UACIoE,KAAAiuF,UAAAvS,SAAA;UACA17E,KAAAouF,UAAA96E,QAAAi7E,SAAA3yF;eACH,IAAA,MAAAA,GAAA;UACGoE,KAAAkuF,UAAAxS,SAAA;UACA17E,KAAAquF,UAAA/6E,QAAAi7E,SAAA3yF;eACH,IAAA,MAAAA,GAAA;UACGoE,KAAAmuF,UAAAzS,SAAA;UACA17E,KAAAsuF,UAAAh7E,QAAAi7E,SAAA3yF;eACH;UACG,IAAAoN,OAAA5N,GAAA6N,YAAAjJ,KAAAguF;UACAhlF,KAAA0yE,SAAA;UACA1yE,KAAAE,SAAAlJ,KAAAguF,WAAA9kF;UACA,IAAAslF,WAAAxlF,KAAAO,aAAA;UACAilF,SAAAl7E,QAAAi7E,SAAA3yF;;;;;;;;;;;;IC1DhB,IAAA6uF,UAAApiF,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEAxgF;MAOA7I,OAAA,SAAAA;;;;;;;;;;ICXJ,IAAAqpF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEAxgF;QACIwkF;UACIjT,SAAA;UACAtV,KAAA9qE,GAAAihF;;QAEJqS;UACIlT,SAAA;UACAtV,KAAA9qE,GAAAihF;;;MAIR9xE,QAAA,SAAAA;QACIvK,KAAA0qF;QAEA1qF,KAAA2uF,UAAA3uF,KAAA4qF,SAAA,WAAArhF,aAAA;QACAvJ,KAAA2uF,QAAAtlF,KAAAqyE,SAAA;QACA17E,KAAA4uF,UAAA5uF,KAAA4qF,SAAA,WAAArhF,aAAA;QACAvJ,KAAA4uF,QAAAvlF,KAAAqyE,SAAA;QACA17E,KAAA6uF,UAAA7uF,KAAA4qF,SAAA,WAAArhF,aAAA;QACAvJ,KAAA6uF,QAAAxlF,KAAAqyE,SAAA;QACA17E,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;;MAGJsT,SAAA,SAAAA,QAAAvI;QACI,IAAAA,KAAAlP,SAAA,GAAA;UACImE,KAAA2uF,QAAAr7E,QAAAvI,KAAA;UACA/K,KAAA2uF,QAAAtlF,KAAAqyE,SAAA;UACA,IAAA3wE,KAAAlP,SAAA,GAAA;YACImE,KAAA4uF,QAAAt7E,QAAAvI,KAAA;YACA/K,KAAA4uF,QAAAvlF,KAAAqyE,SAAA;;UAEJ,IAAA3wE,KAAAlP,SAAA,GAAA;YACImE,KAAA6uF,QAAAv7E,QAAAvI,KAAA;YACA/K,KAAA6uF,QAAAxlF,KAAAqyE,SAAA;;;QAGR3wE,KAAA+jF,aAAAC,KAAAC,SACI5zF,GAAA+hF,YAAAC,KAAAp9E,KAAA0uF,aAAA,OAAA,KAEAtzF,GAAA+hF,YAAAC,KAAAp9E,KAAAyuF,UAAA,OAAA;;MAKR1D,MAAA,SAAAA;QACI96E,IAAApI,OAAA8I,UAAA;QACA,IAAAmB,YAAApJ,OAAAmB,OAAA;QACA,IAAAiI,WAAA;UACIpJ,OAAAiB,QAAA;UACAmI,UAAAlI;;QAEJlB,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;QAGA/H,KAAAC,YAAA6R;;;;;;;;;;;;IC5DR,IAAA82E,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEAxgF;MAEA7I,OAAA,SAAAA;QACIpB,KAAAivF,aAAAjvF,KAAA4qF,SAAA;QACA5qF,KAAAkvF,UAAAlvF,KAAA4qF,SAAA,WAAArhF,aAAAnO,GAAAgwF;QACAprF,KAAAivF,WAAAvT,SAAA;QACA17E,KAAA4qF,SAAA,UAAAl+E,GAAA,SAAA1M,KAAA2qB,QAAA3qB;QACAA,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;QAGAA,KAAAmvF;QAEAvhF,YAAAlB,GAAAkB,YAAAC,UAAAkB,qBAAA/O,KAAA+O,qBAAA/O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAoB,uBAAAjP,KAAAiP,uBAAAjP;QAEAA,KAAAmvE;QACAnvE,KAAAovF,WAAAv4E,YAAA;UACI,OAAA7W,KAAAkvF,QAAA1mE,UACIxoB,KAAAmvE;UAEP1tE,KAAAzB,OAAA;;MAGLmvE,aAAA,SAAAA;QACI,IAAAxxC;UACIwiC,WAAA;UACAlW,MAAA;UACAmW,UAAA;UACAC,cAAA;UACApO,MAAA;UACAx/C,OAAA;UACA6pB,MAAA;UACAq2B,OAAA;UACA6Q,QAAA;UACAC,UAAA;;QAEJxzD,IAAApI,OAAAwnE,cAAA1xC;;MAGJ5uB,qBAAA,SAAAA,oBAAAhE;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAmvF,MAAAtzF,QAAA2e,KACIxa,KAAAmvF,MAAA30E,GAAA5Q;QAEJ5J,KAAAmvF;QACApkF,KAAA8H,UAAAypB,KAAA,SAAAlkB,GAAAC;UACI,OAAAD,EAAAyoD,SAAAxoD,EAAAwoD;;QAEJ,KAAA,IAAAjlE,IAAA,GAAAA,IAAAmP,KAAA8H,UAAAhX,QAAAD,KAAA;UACI,IAAAyvF,OAAAjwF,GAAA6N,YAAAjJ,KAAAivF;UACA5D,KAAA3P,SAAA;UACA2P,KAAAniF,SAAAlJ,KAAAivF,WAAA/lF;UACA,IAAAmmF,aAAAhE,KAAA9hF,aAAA;UACA8lF,WAAA/7E,QAAAvI,KAAA8H,UAAAjX;UAEAoE,KAAAmvF,MAAApyF,KAAAsuF;;;MAIRp8E,uBAAA,SAAAA,sBAAAlE;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAmvF,MAAAtzF,QAAA2e,KACIxa,KAAAmvF,MAAA30E,GAAA5Q;QAEJ5J,KAAAmvF;QACAnvF,KAAAmkE,YAAAp5D,KAAA6H,IAAAuxD;QACA,KAAA,IAAAvoE,IAAA,GAAAA,IAAAmP,KAAA6H,IAAAuxD,UAAAtoE,QAAAD,KAAA;UACI,IAAAyvF,OAAAjwF,GAAA6N,YAAAjJ,KAAAivF;UACA5D,KAAA3P,SAAA;UACA2P,KAAAniF,SAAAlJ,KAAAivF,WAAA/lF;UACA,IAAAmmF,aAAAhE,KAAA9hF,aAAA;UACA8lF,WAAA/7E,QAAAvI,KAAA6H,IAAAuxD,UAAAvoE;UAEAoE,KAAAmvF,MAAApyF,KAAAsuF;;;MAIRN,MAAA,SAAAA;QACIp0E,cAAA3W,KAAAovF;QACA1mF,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJ+gB,QAAA,SAAAA;QACI,IAAA,OAAA3qB,KAAAkvF,QAAA1mE,QACI,KAAA,IAAA5sB,IAAA,GAAAA,IAAAoE,KAAAmvF,MAAAtzF,QAAAD,KACIoE,KAAAmvF,MAAAvzF,GAAA8/E,SAAA,WAGJ,KAAA,IAAAlhE,IAAA,GAAAA,IAAAxa,KAAAmvF,MAAAtzF,QAAA2e,KAAA;UACI,IAAA60E,aAAArvF,KAAAmvF,MAAA30E,GAAAjR,aAAA;UACA8lF,WAAApF,SAAAzhE,UAAAxoB,KAAAkvF,QAAA1mE,SACIxoB,KAAAmvF,MAAA30E,GAAAkhE,SAAA,OAEA17E,KAAAmvF,MAAA30E,GAAAkhE,SAAA;;;MAMhBltE,kBAAA,SAAAA,iBAAAzD;QACI,IAAA,QAAAA,KAAApE,QACIpB,QAAAC,IAAA,sFAAAuF,KAAApE,cACH;UACGpB,QAAAC,IAAA;UACAD,QAAAC,IAAA,yBAAAuF,KAAArE,SAAAm6D;UACA91D,KAAAgI,iBAAA+qB,KAAA,SAAApyB;YACI,OAAAA,EAAAiG,WAAA/O,IAAAgC,SAAAgN;gBAEA7G,KAAAgI,iBAAAhW;YACI4U,QAAA/O,IAAAgC,SAAAgN;YACA/K,aAAA;;UAIR,KAAA,IAAAjL,IAAA,GAAAA,IAAAoE,KAAAmkE,UAAAtoE,QAAAD,KACI,IAAAmP,KAAArE,SAAAm6D,WAAA7gE,KAAAmkE,UAAAvoE,GAAAilE,QAAA;YACIj+D,IAAAK,mBAAAjD,KAAAmkE,UAAAvoE,GAAAukE;YACA;;UAIR/kE,GAAA+N,OAAAC,SAAAwK,iBAAAC,SAAAzY,GAAA+N,OAAAC,SAAAwK,iBAAAE,QACIpL,OAAAE,OAAA,aAAA,SAAA7J;YACI,IAAAssF,OAAAtsF,IAAAwK,aAAA;YACA8hF,KAAAiE,aAAAvkF,KAAAgI,kBAAAhI,KAAArE;YACAgC,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;YACAkE,KAAAqJ,KAAAO;YACHnI,KAAAzB,SAED0I,OAAAE,OAAA,UAAA,SAAA7J;YACI,IAAAssF,OAAAtsF,IAAAwK,aAAA;YACA8hF,KAAAiE,aAAAvkF,KAAAgI,kBAAAhI,KAAArE;YACAgC,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;YACAkE,KAAAqJ,KAAAO;YACHnI,KAAAzB;;;MAKboW,WAAA,SAAAA;QACIO,cAAA3W,KAAAovF;QACAxhF,YAAA4B,IAAA5B,YAAAC,UAAAkB,qBAAA/O,KAAA+O,qBAAA/O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAW,kBAAAxO,KAAAwO,kBAAAxO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAoB,uBAAAjP,KAAAiP,uBAAAjP;;;;;;;;;;;;ICpJR,IAAAyqF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAAyiE;QACAziE,KAAAiwD,SAAA;QACAjwD,KAAA0G,WAAA;QACA1G,KAAAgH,QAAA;QACAhH,KAAAuvF,eAAAvvF,KAAA4qF,SAAA;QACA5qF,KAAAuvF,aAAA7T,SAAA;QACA17E,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;QACAA,KAAA4qF,SAAA,aAAAl+E,GAAA,SAAA1M,KAAAmU,WAAAnU;QAGA4N,YAAAlB,GAAAkB,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAe,oBAAA5O,KAAA4O,oBAAA5O;QAEA4N,YAAAlB,GAAAkB,YAAAC,UAAAqB,oBAAAlP,KAAAkP,oBAAAlP;QACA4N,YAAAlB,GAAAkB,YAAAC,UAAAsB,kBAAAnP,KAAAmP,kBAAAnP;QAEA,KAAA,IAAApE,IAAA,GAAAA,IAAAgH,IAAAK,kBAAArH,KAAA;UACI,IAAAoN,OAAA5N,GAAA6N,YAAAjJ,KAAAuvF;UACAvmF,KAAA0yE,SAAA;UACA1yE,KAAAE,SAAAlJ,KAAA4qF,SAAA;UACA,IAAA53E,eAAAhK,KAAAO,aAAA;UACAyJ,aAAAvN;UACAzF,KAAAyiE,QAAA1lE,KAAAiW;;;MAIR9D,oBAAA,SAAAA,mBAAAnE;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAAxa,KAAAyiE,QAAAjoD,GAAA7I,WAAA5G,KAAA4H,cAAA1M,QAAA;UACIjG,KAAAyiE,QAAAjoD,GAAA/U;UACA;;QAGR,IAAA7C,IAAAgC,SAAAgN,OAAA7G,KAAA4H,cAAA1M,QAAA;UACIrD,IAAAkC,cAAA;UACA4D,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;;;MAIRuF,kBAAA,SAAAA,iBAAApE;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAAxa,KAAAyiE,QAAAjoD,GAAA7I,WAAA5G,KAAAoE,iBAAAwC,QAAA;UACI3R,KAAAyiE,QAAAjoD,GAAA/U;UACA;;QAIR,IAAA7C,IAAAgC,SAAAgN,OAAA7G,KAAAoE,iBAAAwC,QAAA;UACI/O,IAAAkC,cAAA;UACA4D,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;UACAkE,KAAAqJ,KAAAO;;;MAIR6E,gBAAA,SAAAA,eAAA1D;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAA,MAAAxa,KAAAyiE,QAAAjoD,GAAA7I,QAAA;UACI3R,KAAAyiE,QAAAjoD,GAAAlH,QAAAvI,KAAAiI,aAAArB,QAAA3R,KAAAyhE;UACA;;;MAKZ/yD,mBAAA,SAAAA,kBAAA3D;QACI,QAAAA,KAAAkI,aAAAtM,SACIpB,QAAAC,IAAA,gDAEAD,QAAAC,IAAA;QAEJ5C,IAAAkC,cAAA;QACA4D,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;;MAGJgF,oBAAA,SAAAA,mBAAA7D;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAAxa,KAAAyiE,QAAAjoD,GAAA7I,WAAA5G,KAAA9E,QAAA;UACIjG,KAAAyiE,QAAAjoD,GAAA/U;UACA;;QAGRzF,KAAAyhE,UAAA12D,KAAA/D;QACAhH,KAAAyhE,YAAA7+D,IAAAgC,SAAAgN,OACIhP,IAAAkC,cAAA;QAEJ,KAAA,IAAAlJ,IAAA,GAAAA,IAAAoE,KAAAyiE,QAAA5mE,QAAAD,KACI,MAAAoE,KAAAyiE,QAAA7mE,GAAA+V,UACI3R,KAAAyiE,QAAA7mE,GAAA0X,QAAAtT,KAAAyiE,QAAA7mE,GAAA+V,QAAA3R,KAAAyhE;QAGRzhE,KAAAwvF;;MAGJ7gF,iBAAA,SAAAA,gBAAA5D;QACI,KAAA,IAAAyP,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAAxa,KAAAyiE,QAAAjoD,GAAA7I,WAAA5G,KAAA2G,cAAAC,QAAA;UACI3R,KAAAyiE,QAAAjoD,GAAA/U;UACA;;QAGRzF,KAAAyhE,UAAA12D,KAAA2G,cAAA1K;QACAhH,KAAAyhE,YAAA7+D,IAAAgC,SAAAgN,OACIhP,IAAAkC,cAAA;QAEJ,KAAA,IAAAlJ,IAAA,GAAAA,IAAAoE,KAAAyiE,QAAA5mE,QAAAD,KACI,MAAAoE,KAAAyiE,QAAA7mE,GAAA+V,UACI3R,KAAAyiE,QAAA7mE,GAAA0X,QAAAtT,KAAAyiE,QAAA7mE,GAAA+V,QAAA3R,KAAAyhE;QAGRzhE,KAAAwvF;;MAGJA,iBAAA,SAAAA;QACI,IAAAC,SAAAzvF,KAAA4qF,SAAA;QACA,IAAA8E,MAAA1vF,KAAA4qF,SAAA,aAAArhF,aAAAnO,GAAA8vF;QACA,IAAAtoF,IAAAkC,aAAA;UACI2qF,OAAAE,QAAAv0F,GAAAw0F,MAAAC;UACAH,IAAAt/E,UAAA;eACH;UACGq/E,OAAAE,QAAAv0F,GAAAw0F,MAAAE;UACAJ,IAAAt/E,UAAA;;;MAIR26E,MAAA,SAAAA;QACI96E,IAAApI,OAAA8I,UAAA;;MAGJwD,WAAA,SAAAA;QACI,KAAAvR,IAAAkC,aAAA;UACI4D,OAAAE,OAAA,SAAA,SAAA7J;YACI,IAAAsU,QAAAtU,IAAAwK,aAAA;YACA8J,SACIA,MAAAC,QAAA;YAEP7R,KAAAzB;UACD;;QAEJ,IAAAkU;QACA,IAAA22E,YAAA;QACA,KAAA,IAAArwE,IAAA,GAAAA,IAAAxa,KAAAyiE,QAAA5mE,QAAA2e,KACI,IAAA,MAAAxa,KAAAyiE,QAAAjoD,GAAA7I,QAAA;UACIk5E;UACA32E,QAAAnX,KAAAiD,KAAAyiE,QAAAjoD,GAAA7I;;QAKR,IAAAk5E,cAAAjoF,IAAAK,kBAAA;UACI,IAAAsP,SAAAtC,IAAApI,OAAAV,SAAA;UACA5B,QAAAC,IAAA;UACA,MAAA+M,UACIhN,QAAAC,IAAA,sEAAA+M;UAGJ3P,IAAAiC,gBAAAqP;UAEA,IAAAd;YACIiC,QAAAzS,IAAAO;YACA+Q,SAAAA;;UAEJrS,KAAAC,YAAAwT,YAAAlC;eAEA1K,OAAAE,OAAA,SAAA,SAAA7J;UACI,IAAAsU,QAAAtU,IAAAwK,aAAA;UACA8J,SACIA,MAAAC,QAAA;UAEP7R,KAAAzB;;MAITsrF,gBAAA,SAAAA,eAAA14E;QACI5S,KAAAiwD,SAAAr9C,IAAAiuD;QACA7gE,KAAAyhE,UAAA7uD,IAAA5L;QACAhH,KAAAyiE,QAAA,GAAAnvD,QAAAtT,KAAAyhE,SAAAzhE,KAAAyhE;QACA7+D,IAAAkC,cAAA;QACA9E,KAAAwvF;;MAGJF,cAAA,SAAAA,aAAAv8E,kBAAArM;QACIqM,iBAAAupB,KAAA,SAAAlkB,GAAAC;UACI,IAAA3R,SAAA+6D,YAAAppD,EAAA1G,QACI,OAAA;UAEJ,OAAA;;QAEJ3R,KAAAyhE,UAAA/6D,SAAA+6D;QACA,KAAA,IAAAjnD,IAAA,GAAAA,IAAAzH,iBAAAlX,QAAA2e,KACIxa,KAAAyiE,QAAAjoD,GAAAlH,QAAAP,iBAAAyH,GAAA7I,QAAA3R,KAAAyhE;QAEJzhE,KAAAwvF;;MAGJp5E,WAAA,SAAAA;QACIxI,YAAA4B,IAAA5B,YAAAC,UAAAY,gBAAAzO,KAAAyO,gBAAAzO;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAa,mBAAA1O,KAAA0O,mBAAA1O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAc,iBAAA3O,KAAA2O,iBAAA3O;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAqB,oBAAAlP,KAAAkP,oBAAAlP;QACA4N,YAAA4B,IAAA5B,YAAAC,UAAAsB,kBAAAnP,KAAAmP,kBAAAnP;;;;;;;;;;;;IClNR,IAAAyqF,UAAApiF,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1kF,WAAA;UACI,IAAAhG,QAAAA,KAAAqJ,MAAA;YACIX,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;YACAkE,KAAAqJ,KAAAO;;UAEPnI,KAAAzB,OAAA;;MAGLsT,SAAA,SAAAA,QAAAnX;QACI6D,KAAA4qF,SAAA,SAAArhF,aAAAnO,GAAAquF,OAAAjhE,SAAArsB;;;;;;;;;;;IChBR,IAAAsuF,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MAEAxgF;QACIwkF;UACIjT,SAAA;UACAtV,KAAA9qE,GAAAihF;;QAEJqS;UACIlT,SAAA;UACAtV,KAAA9qE,GAAAihF;;;MAIRj7E,OAAA,SAAAA;QACI,IAAA2uF,UAAAluF,KAAAC,YAAA+P,gBAAAhQ,KAAAI,cAAAmL,KAAAovE,QAAA36E,KAAAI,cAAAwS,MAAA+nE;QAEAx8E,KAAA0zE,SAAA1zE,KAAA4qF,SAAA,UAAArhF,aAAA;QACAvJ,KAAA0zE,OAAApgE,QAAAzR,KAAAI,cAAAmL,KAAAuH;QACA3U,KAAAyU,QAAAzU,KAAA4qF,SAAA,SAAArhF,aAAA;QACAvJ,KAAAyU,MAAAnB,QAAAzR,KAAAI,cAAAwS,MAAAE;QACA3U,KAAA4qF,SAAA,MAAAlP,SAAA;QACA17E,KAAA4qF,SAAA,SAAAlP,SAAA;QACA17E,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAA+qF,MAAA/qF;QAEAA,KAAA4qF,SAAA,QAAAlP,SAAAqU;QACA/vF,KAAA4qF,SAAA,OAAAlP,UAAAqU;QAEA,IAAAA,QAMI30F,GAAA+hF,YAAAC,KAAAp9E,KAAAyuF,UAAA,OAAA,SANJ;UACIrzF,GAAA+hF,YAAAC,KAAAp9E,KAAA0uF,aAAA,OAAA;UAEA7sF,KAAAC,YAAA8T;;;MAORm1E,MAAA,SAAAA;QACI96E,IAAApI,OAAA8I,UAAA;QACA,IAAAmB,YAAApJ,OAAAmB,OAAA;QACA,IAAAiI,WAAA;UACIpJ,OAAAiB,QAAA;UACAmI,UAAAlI;;QAEJlB,OAAAiB,QAAA3J,KAAAqJ,KAAAvN;QACAkE,KAAAqJ,KAAAO;QAGA/H,KAAAC,YAAA6R;;;;;;;;;;;;ICnDR,IAAA82E,UAAApiF,QAAA;IACA,IAAA4H,MAAA5H,QAAA;IACAjN,GAAA0O;MACIC,SAAA0gF;MACAxgF;MAEAM,QAAA,SAAAA;QACIvK,KAAA0qF;QACA1qF,KAAA4qF,SAAA,QAAAl+E,GAAA,SAAA1M,KAAAurF,MAAAvrF;QACAA,KAAA4qF,SAAA,SAAAl+E,GAAA,SAAA1M,KAAA+lE,OAAA/lE;;MAGJ+lE,OAAA,SAAAA;QACIr9D,OAAAiB,QAAA3J,KAAAqJ;;MAGJkiF,MAAA,SAAAA;QACIt7E,IAAApI,OAAA8I,UAAA;QACA,IAAAmB,YAAApJ,OAAAmB,OAAA;QACAiI,aACIpJ,OAAAiB,QAAAmI;QAEJpJ,OAAAiB,QAAA3J,KAAAqJ;QACAxH,KAAAC,YAAA6R","sourcesContent":["/*\n    create by hao.c 2018/04/10\n\n    desc: 游戏数据相关操作逻辑\n */\n\nwindow.dataFunc = {\n    // 表格加载--\n    arrTables: [],\n    csvTables: {},\n    csvTableForArr: {},\n    tableCast: {},\n    tableComment: {},\n    CELL_DELIMITERS: [\",\", \";\", \"\\t\", \"|\", \"^\"],\n    LINE_DELIMITERS: [\"\\r\\n\", \"\\r\", \"\\n\"],\n    // 动画--\n    uiPanelAnimationClips: {}\n};\n\ndataFunc.getTable = function(tableName) {\n    return dataFunc.csvTables[tableName];\n};\n\ndataFunc.getTableArr = function(tableName) {\n    return dataFunc.csvTableForArr[tableName];\n};\n\ndataFunc.queryOne = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table) {\n        return null;\n    }\n\n    if (key) {\n        for (var tbItem in table) {\n            if (!table.hasOwnProperty(tbItem)) {\n                continue;\n            }\n\n            if (table[tbItem][key] === value) {\n                return table[tbItem];\n            }\n        }\n    } else {\n        return table[value];\n    }\n};\n\ndataFunc.queryByID = function(tableName, ID) {\n    return dataFunc.queryOne(tableName, null, ID);\n};\n\ndataFunc.queryAll = function(tableName, key, value) {\n    var table = dataFunc.getTable(tableName);\n    if (!table || !key) {\n        return null;\n    }\n\n    var ret = {};\n    for (var tbItem in table) {\n        if (!table.hasOwnProperty(tbItem)) {\n            continue;\n        }\n\n        if (table[tbItem][key] === value) {\n            ret[tbItem] = table[tbItem];\n        }\n    }\n\n    return ret;\n};\n\ndataFunc.loadConfigs = function(progressCb, callback) {\n\n    // 加载动画\n    cc.loader.loadResDir(\"panelAnimClips\", cc.AnimationClip, function(err, clips) {\n        if (err) {\n            cc.error(err.message || err);\n            return;\n        }\n        for (var i = 0; i < clips.length; i++) {\n            dataFunc.uiPanelAnimationClips[clips[i].name] = clips[i];\n        }\n    });\n\n    // 加载数据表\n    var currentLoad = 0;\n    dataFunc.arrTables.forEach(function(tableName, index) {\n        cc.loader.loadRes(\"data/\" + tableName, function(err, content) {\n            if (err) {\n                cc.error(err.message || err);\n                return;\n            }\n            if (progressCb) {\n                progressCb(index + 1, dataFunc.arrTables.length);\n            }\n            addTable(tableName, content);\n            if (callback) {\n                currentLoad++;\n                if (currentLoad >= dataFunc.arrTables.length) {\n                    callback();\n                }\n            }\n        });\n    });\n\n    function addTable(tableName, tableContent, force) {\n        if (dataFunc.csvTables[tableName] && !force) {\n            return;\n        }\n\n        var tableData = {};\n        var tableArr = [];\n        var opts = {header: true};\n        CSV.parse(tableContent, opts, function(row, keyname) {\n            tableData[row[keyname]] = row;\n            tableArr.push(row);\n        });\n\n        dataFunc.tableCast[tableName] = CSV.opts.cast;\n        dataFunc.tableComment[tableName] = CSV.opts.comment;\n        dataFunc.csvTables[tableName] = tableData;\n        dataFunc.csvTableForArr[tableName] = tableArr;\n    };\n\n    function getterCast(value, index, cast, d) {\n\n        if (cast instanceof Array) {\n            if (cast[index] === \"number\") {\n                return Number(d[index]);\n            } else if (cast[index] === \"boolean\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        } else {\n            if (!isNaN(Number(value))) {\n                return Number(d[index]);\n            } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\n            } else {\n                return d[index];\n            }\n        }\n    }\n\n    var CSV = {\n        /* =========================================\n         * Constants ===============================\n         * ========================================= */\n\n        STANDARD_DECODE_OPTS: {\n            skip: 0,\n            limit: false,\n            header: false,\n            cast: false,\n            comment: \"\"\n        },\n\n        STANDARD_ENCODE_OPTS: {\n            delimiter: dataFunc.CELL_DELIMITERS[0],\n            newline: dataFunc.LINE_DELIMITERS[0],\n            skip: 0,\n            limit: false,\n            header: false\n        },\n\n        quoteMark: '\"',\n        doubleQuoteMark: '\"\"',\n        quoteRegex: /\"/g,\n\n\n        /* =========================================\n         * Utility Functions =======================\n         * ========================================= */\n\n\n\n        assign: function() {\n            var args = Array.prototype.slice.call(arguments);\n            var base = args[0];\n            var rest = args.slice(1);\n            for (var i = 0, len = rest.length; i < len; i++) {\n                for (var attr in rest[i]) {\n                    base[attr] = rest[i][attr];\n                }\n            }\n\n            return base;\n        },\n\n        map: function(collection, fn) {\n            var results = [];\n            for (var i = 0, len = collection.length; i < len; i++) {\n                results[i] = fn(collection[i], i);\n            }\n\n            return results;\n        },\n\n        getType: function(obj) {\n            return Object.prototype.toString.call(obj).slice(8, -1);\n        },\n\n        getLimit: function(limit, len) {\n            return limit === false ? len : limit;\n        },\n\n        buildObjectConstructor: function(fields, sample, cast) {\n            return function(d) {\n                var object = new Object();\n                var setter = function(attr, value) {\n                    return object[attr] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                // body.push(\"return object;\");\n                // body.join(\";\\n\");\n                return object;\n            };\n        },\n\n        buildArrayConstructor: function(sample, cast) {\n            return function(d) {\n                var row = new Array(sample.length);\n                var setter = function(idx, value) {\n                    return row[idx] = value;\n                };\n                if (cast) {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\n                    });\n                } else {\n                    fields.forEach(function(attr, idx) {\n                        setter(attr, getterCast(sample[idx], idx, null, d));\n                    });\n                }\n                return row;\n            };\n        },\n\n        frequency: function(coll, needle, limit) {\n            if (limit === void 0) limit = false;\n\n            var count = 0;\n            var lastIndex = 0;\n            var maxIndex = this.getLimit(limit, coll.length);\n\n            while (lastIndex < maxIndex) {\n                lastIndex = coll.indexOf(needle, lastIndex);\n                if (lastIndex === -1) break;\n                lastIndex += 1;\n                count++;\n            }\n\n            return count;\n        },\n\n        mostFrequent: function(coll, needles, limit) {\n            var max = 0;\n            var detected;\n\n            for (var cur = needles.length - 1; cur >= 0; cur--) {\n                if (this.frequency(coll, needles[cur], limit) > max) {\n                    detected = needles[cur];\n                }\n            }\n\n            return detected || needles[0];\n        },\n\n        unsafeParse: function(text, opts, fn) {\n            var lines = text.split(opts.newline);\n\n            if (opts.skip > 0) {\n                lines.splice(opts.skip);\n            }\n\n            var fields;\n            var constructor;\n\n            function cells(lines) {\n                var line = lines.shift();\n                if (line.indexOf('\"') >= 0) {// 含引号\n\n                    // 找到这行完整的数据, 找到对称的双引号\n                    var lastIndex = 0;\n                    var findIndex = 0;\n                    var count = 0;\n                    while (lines.length > 0) {\n                        lastIndex = line.indexOf('\"', findIndex);\n                        if (lastIndex === -1 && count % 2 === 0) break;\n\n                        if (lastIndex !== -1) {\n                            findIndex = lastIndex + 1;\n                            count++;\n                        } else {\n                            line = line + opts.newline + lines.shift();\n                        }\n                    }\n\n                    var list = [];\n                    var item;\n\n                    var quoteCount = 0;\n\n                    var start = 0;\n                    var end = 0;\n                    var length = line.length;\n                    for (var key in line) {\n                        if (!line.hasOwnProperty(key)) {\n                            continue;\n                        }\n\n                        key = parseInt(key);\n                        var value = line[key];\n\n                        if (key === 0 && value === '\"') {\n                            quoteCount++;\n                            start = 1;\n                        }\n\n                        if (value === '\"') {\n                            quoteCount++;\n\n                            if (line[key - 1] === opts.delimiter && start === key) {\n                                start++;\n                            }\n                        }\n\n                        if (value === '\"' && quoteCount % 2 === 0) {\n\n                            if (line[key + 1] === opts.delimiter || key + 1 === length) {\n                                end = key;\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 2;\n                                end = start;\n                            }\n\n                        }\n\n                        if (value === opts.delimiter && quoteCount % 2 === 0) {\n                            end = key;\n                            if (end > start) {\n                                item = line.substring(start, end);\n                                list.push(item);\n                                start = end + 1;\n                                end = start;\n                            } else if (end === start) {\n                                list.push(\"\");\n                                start = end + 1;\n                                end = start;\n                            }\n                        }\n\n                    }\n\n                    end = length;\n\n                    if (end >= start) {\n                        item = line.substring(start, end);\n                        list.push(item);\n                    }\n\n                    return list;\n                } else {\n                    return line.split(opts.delimiter);\n                }\n            }\n\n            if (opts.header) {\n                if (opts.header === true) {\n                    opts.comment = cells(lines); // 第一行是注释\n                    opts.cast = cells(lines); // 第二行是数据类型\n                    fields = cells(lines);\n                } else if (this.getType(opts.header) === \"Array\") {\n                    fields = opts.header;\n                }\n\n                constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\n            } else {\n                constructor = this.buildArrayConstructor(lines[0].split(opts.delimiter), opts.cast);\n            }\n\n            while (lines.length > 0) {\n                var row = cells(lines);\n                if (row.length > 1) {\n                    fn(constructor(row), fields[0]);\n                }\n            }\n\n            return true;\n        },\n\n        parse: function(text, opts, fn) {\n            var rows;\n\n            if (this.getType(opts) === \"Function\") {\n                fn = opts;\n                opts = {};\n            } else if (this.getType(fn) !== \"Function\") {\n                rows = [];\n                fn = rows.push.bind(rows);\n            } else {\n                rows = [];\n            }\n\n            opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\n            this.opts = opts;\n\n            if (!opts.delimiter || !opts.newline) {\n                var limit = Math.min(48, Math.floor(text.length / 20), text.length);\n                opts.delimiter = opts.delimiter || this.mostFrequent(text, dataFunc.CELL_DELIMITERS, limit);\n                opts.newline = opts.newline || this.mostFrequent(text, dataFunc.LINE_DELIMITERS, limit);\n            }\n\n            // modify by jl 由表自行控制不要含有双引号.提高解析效率\n            return this.unsafeParse(text, opts, fn) &&\n                (rows.length > 0 ? rows : true);\n        }\n    };\n}","window.Game = {\n    GameManager: null,\n    BulletManager: null,\n    ItemManager: null,\n    PlayerManager: null,\n    ClickManager: null\n}\n\nwindow.GameState = cc.Enum({\n    None: 0,\n    Pause: 1,\n    Play: 2,\n    Over: 3\n})\n\nwindow.DirectState = cc.Enum({\n    None: 0,\n    Left: 1,\n    Right: 2\n})\n\nwindow.GLB = {\n    RANDOM_MATCH: 1,\n    PROPERTY_MATCH: 2,\n    COOPERATION: 1,\n    COMPETITION: 2,\n    MAX_PLAYER_COUNT: 2,\n\n    PLAYER_COUNTS: [2],\n\n    GAME_START_EVENT: \"gameStart\",\n    GAME_OVER_EVENT: \"gameOver\",\n    READY: \"ready\",\n    ROUND_START: \"roundStar\",\n    SCORE_EVENT: \"score\",\n    SHOOT_GUN_ITEM: \"shootGunItem\",\n    ADD_BULLET:\"addBullet\",\n    DISTANCE: \"distance\",\n    POSITION:\"position\",\n    SPAWN_SLATE: \"slateSpawn\",\n    HURT: \"hurt\",\n    DIFFUSE_ITEM_GET: \"diffuseItemGet\",\n    RADINTION_ITEM_GET: \"radintionItemGet\",\n    SLATE_HITTING: \"SlateHitting\",\n\n\n    channel: 'MatchVS',\n    platform: 'alpha',\n    gameId: 201408,\n    gameVersion: 1,\n    IP: \"wxrank.matchvs.com\",\n    PORT: \"3010\",\n    GAME_NAME: \"game5\",\n    appKey: '0acff65acc984c5aaad2b362b58314bc',\n    secret: '372fdb54456f4717b913e9211d99e85e',\n\n    matchType: 1,\n    gameType: 2,\n    userInfo: null,\n    playerUserIds: [],\n    isRoomOwner: false,\n\n    syncFrame: true,\n    FRAME_RATE: 10,\n\n    NormalBulletSpeed: 1000,\n    limitX: 320,\n    limitYTop: 490,\n    limitYBottom:620,\n    range:20\n\n}\n","function MatchvsEngine() {\r\n    console.log('MatchvsEngine init');\r\n}\r\n\r\nMatchvsEngine.prototype.init = function(matchVSResponses, channel, platform, gameid){\r\n    this.responses = matchVSResponses;\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.registerUser = function() {\r\n    this._forEachResponse(function(res) {\r\n        setTimeout(function(){\r\n            var userInfo = {\r\n                userID: 10086,\r\n                token: 'jkfldjalfkdjaljfs',\r\n                name: '张三',\r\n                avatar: 'http://d3819ii77zvwic.cloudfront.net/wp-content/uploads/2015/02/child-fist-pump.jpg'\r\n            };\r\n            res.registerUserResponse && res.registerUserResponse(userInfo);\r\n        }, 100);\r\n    });\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.login = function(userID,token,gameid,gameVersion,appkey, secret,deviceID,gatewayid){\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.joinRandomRoom = function(){\r\n    this._forEachResponse(function(res) {\r\n        setTimeout(function(){\r\n            var roomInfo = {\r\n                status: 0,\r\n                userInfoList: [\r\n                    {userID: 10086,userProfile: '张三'},\r\n                    {userID: 10087,userProfile: '李四'},\r\n                    {userID: 10088,userProfile: '王五'},\r\n                ],\r\n                roomInfo: {\r\n                    rootID: 1028374,\r\n                    rootProperty: \"好房间\",\r\n                    owner: 10086,\r\n                }\r\n            };\r\n            res && res.roomJoinResponse(roomInfo);\r\n        }, 100);\r\n    });\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype._forEachResponse = function(func) {\r\n    if (this.responses) {\r\n        for(var i = 0; i<this.responses.length; i++) {\r\n            this.responses[i] && func(this.responses[i]);\r\n        }\r\n    }\r\n};\r\n\r\nMatchvsEngine.prototype.joinOver = function(){\r\n    return 0;\r\n};\r\n\r\nMatchvsEngine.prototype.sendEvent = function(event){\r\n    var mockEventId = new Date().getTime();\r\n    this._forEachResponse(function(res){\r\n        setTimeout(function(){\r\n            res.sendEventRsp && res.sendEventRsp({\"status\": 0, \"seq\": mockEventId});\r\n        }, 100);\r\n    });\r\n    return {status: 0, seq: mockEventId};\r\n};\r\n\r\nmodule.exports = MatchvsEngine;","var engine;\r\nvar response = {};\r\nvar MsMatchInfo;\r\nvar MsCreateRoomInfo;\r\ntry {\r\n    engine = Matchvs.MatchvsEngine.getInstance();\r\n    MsMatchInfo = Matchvs.MsMatchInfo;\r\n    MsCreateRoomInfo = Matchvs.MsCreateRoomInfo;\r\n} catch (e) {\r\n    try {\r\n        var jsMatchvs = require(\"matchvs.all\");\r\n        engine = new jsMatchvs.MatchvsEngine();\r\n        response = new jsMatchvs.MatchvsResponse();\r\n        MsMatchInfo = jsMatchvs.MsMatchInfo;\r\n        MsCreateRoomInfo = jsMatchvs.MsCreateRoomInfo;\r\n    } catch (e) {\r\n        var MatchVSEngine = require('MatchvsEngine');\r\n        engine = new MatchVSEngine();\r\n    }\r\n}\r\nmodule.exports = {\r\n    engine: engine,\r\n    response: response,\r\n    MatchInfo: MsMatchInfo,\r\n    CreateRoomInfo: MsCreateRoomInfo,\r\n};","/*\n    create by hao.c 2018/04/10\n\n    desc: 游戏显示相关操作逻辑\n */\n\nwindow.uiFunc = {\n    uiList: []\n};\n\nuiFunc.openUI = function(uiName, callBack) {\n    cc.loader.loadRes('ui/' + uiName, function(err, prefab) {\n        if (err) {\n            cc.error(err.message || err);\n            return;\n        }\n\n        var temp = cc.instantiate(prefab);\n        temp.parent = cc.Canvas.instance.node;\n        uiFunc.uiList.push(temp);\n\n        for (var i = 0; i < uiFunc.uiList.length; i++) {\n            if (uiFunc.uiList[i] && uiFunc.uiList[i].name !== \"\") {\n                var targetUI = uiFunc.uiList[i].getComponent(\"uiPanel\");\n                if (targetUI && targetUI.isTop) {\n                    targetUI.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                }\n            }\n        }\n        // event--\n        if (callBack) {\n            callBack(temp);\n        }\n    });\n};\n\nuiFunc.closeUI = function(targetUI) {\n    for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n        if (uiFunc.uiList[i] && targetUI === uiFunc.uiList[i]) {\n            targetUI.destroy();\n            uiFunc.uiList.splice(i, 1);\n            break;\n        }\n    }\n};\n\nuiFunc.findUI = function(uiName) {\n    for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n        var temp = uiFunc.uiList[i];\n        if (temp && temp.name === uiName) {\n            return temp;\n        }\n    }\n    return null;\n}\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        redBulletPrefab: cc.Prefab,\n        blueBulletPrefab: cc.Prefab,\n        greenBulletPrefab: cc.Prefab,\n        radintionBulletPrefab: cc.Prefab\n    },\n\n    onLoad() {\n        Game.BulletManager = this;\n        this.redBulletPool = new cc.NodePool();\n        this.buleBulletPool = new cc.NodePool();\n        this.greenBulletPool = new cc.NodePool();\n        this.radintionBulletPool = new cc.NodePool();\n        this.redNumber = 0;\n    },\n\n    addBullet(data) {\n        var bullet = this.redBulletPool.get();\n        if (!bullet) {\n            bullet = cc.instantiate(this.redBulletPrefab);\n        }\n        bullet.parent = Game.BulletManager.node;\n        bullet.bulletType = \"red\";\n        bullet.setPosition(data.bulletPos);\n        bullet.getComponent(\"bullet\").init(data.speed,data.angle);\n    },\n    setBulletData(){\n        this.redNumber = this.redNumber > 35 ? 0 : this.redNumber;\n        var bulletDir = Math.floor(Math.random()*4);\n        var x = 0;\n        var y = 0;\n        switch (bulletDir){\n            case 0 : x = -GLB.limitX + Math.random() * 50;\n                     y = -GLB.limitYBottom + Math.random() * (GLB.limitYTop + GLB.limitYBottom);\n                break;\n            case 1 : x = GLB.limitX - Math.random() * 50;\n                     y = -GLB.limitYBottom + Math.random() * (GLB.limitYTop + GLB.limitYBottom);\n                break;\n            case 2 : x = -GLB.limitX + Math.random() * (GLB.limitX * 2);\n                     y = GLB.limitYTop - Math.random() * 50;\n                break;\n            case 3 : x = -GLB.limitX + Math.random() * (GLB.limitX * 2);\n                     y = -GLB.limitYBottom + Math.random() * 50;\n                break;\n        }\n        var bulletPos = cc.p(x,y);\n        var angle = Math.random() * 6.28;\n        var speed = 0;\n        if (this.redNumber > 30){\n            speed = 200;\n        }else{\n            speed = 100;\n        }\n        this.redNumber++;\n        var data = {bulletPos:bulletPos,\n                     angle:angle,\n                     speed:speed}\n        return data;\n    },\n\n    recycleBullet(target) {\n        switch (target.bulletType){\n            case \"red\": this.redBulletPool.put(target);\n                break;\n            case \"blue\": this.buleBulletPool.put(target);\n                break;\n            case \"green\": this.greenBulletPool.put(target);\n                break;\n            case \"radintion\": this.radintionBulletPool.put(target);\n                break;\n        }\n    },\n\n    diffuseBullet(bulletType,position){\n        var angle = 0.628;\n        for(let i = 1; i < 11; i++){\n            if (bulletType === \"blue\"){\n                var bullet = this.buleBulletPool.get();\n                if (!bullet) {\n                    bullet = cc.instantiate(this.blueBulletPrefab);\n                    bullet.bulletType = \"blue\";\n                }\n            }else{\n                var bullet = this.greenBulletPool.get();\n                if (!bullet) {\n                    bullet = cc.instantiate(this.greenBulletPrefab);\n                    bullet.bulletType = \"green\";\n                }\n            }\n            bullet.parent = Game.BulletManager.node;\n            bullet.setPosition(position);\n            bullet.getComponent(\"bullet\").init(100,angle*i);\n        }\n    },\n    radintionBullet(obj,position){\n        var bullet = this.radintionBulletPool.get();\n        if(!bullet){\n            bullet = cc.instantiate(this.radintionBulletPrefab)\n        }\n        bullet.parent = Game.BulletManager.node;\n        bullet.bulletType = \"radintion\";\n        bullet.setPosition(position);\n        bullet.getComponent(\"radintionBullet\").init(obj);\n    }\n\n});\n","cc.Class({\n    extends: cc.Component,\n\n    init(speed,angle) {\n        this.speed = speed;\n        this.angle = angle;\n    },\n\n    destroyBullet() {\n        Game.BulletManager.recycleBullet(this.node);\n    },\n    update(dt) {\n        this.node.x += this.speed * dt* Math.cos(this.angle);\n        this.node.y += this.speed * dt * Math.sin(this.angle);\n        if (this.node.x < -GLB.limitX-20 || this.node.x > GLB.limitX+20\n            || this.node.y < -GLB.limitYBottom || this.node.y > GLB.limitYTop){\n            this.destroyBullet();\n        }\n    }\n});\n","// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n\n    },\n\n    onLoad () {\n        Game.ClickManager = this;\n        this.clickPosBk = cc.p();\n        this.playerPos = cc.p();\n        this.node.on(cc.Node.EventType.TOUCH_START,this.touchstart,this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE,this.touchmove,this);\n        //this.node.on(cc.Node.EventType.TOUCH_END,this.touchmove,this);\n    },\n\n\n    touchstart(event){\n        this.touchId = event.getID();\n        this.clickPosBk = event.getLocation();\n        Game.PlayerManager.self.setPlayerPosBk();\n        this.bTouch = true;\n        //cc.log(this.clickPosBk);\n    },\n    touchmove(event){\n        if (event.getID() !== this.touchId){\n            return;\n        }\n        var clickPos = event.getLocation();\n        var playerPosBk = Game.PlayerManager.self.playerPosBk;\n        var x = playerPosBk.x - (this.clickPosBk.x - clickPos.x);\n        var y = playerPosBk.y - (this.clickPosBk.y - clickPos.y);\n        x = x > GLB.limitX - GLB.range ? GLB.limitX - GLB.range :\n            x < -GLB.limitX + GLB.range ? -GLB.limitX + GLB.range : x;\n        y = y > GLB.limitYTop - GLB.range ? GLB.limitYTop - GLB.range:\n            y < -GLB.limitYBottom + GLB.range ? -GLB.limitYBottom + GLB.range : y;\n        this.playerPos = cc.p(x,y);\n    },\n    //start () {},\n    update (dt) {\n        if (this.bTouch){\n            this.node.dispatchEvent(new cc.Event.EventCustom(clientEvent.eventType.playerMove,true));\n        }\n    },\n});\n","window.clientEvent = {\n    eventType: {\n        openUI: \"openUI\",\n        closeUI: \"closeUI\",\n        refreshSlateBtn: \"refreshSlateBtn\",\n        roundStart: \"roundStart\",\n        roundOver: \"roundOver\",\n        gameStart: \"gameStart\",\n        gameOver: \"gameOver\",\n        fire: \"fire\",\n        playerMove:\"playerMove\",\n\n        playerAccountGet: \"playerAccountGet\",\n        initResponse: \"initResponse\",\n        errorResponse: \"errorResponse\",\n        joinRoomResponse: \"joinRoomResponse\",\n        joinRoomNotify: \"joinRoomNotify\",\n        leaveRoomResponse: \"leaveRoomResponse\",\n        leaveRoomNotify: \"leaveRoomNotify\",\n        leaveRoomMedNotify: \"leaveRoomMedNotify\",\n        joinOverResponse: \"joinOverResponse\",\n        createRoomResponse: \"createRoomResponse\",\n        getRoomListResponse: \"getRoomListResponse\",\n        getRoomDetailResponse: \"getRoomDetailResponse\",\n        getRoomListExResponse: \"getRoomListExResponse\",\n        kickPlayerResponse: \"kickPlayerResponse\",\n        kickPlayerNotify: \"kickPlayerNotify\"\n    },\n    eventListener: null\n}\n\nclientEvent.init = function() {\n    clientEvent.eventListener = eventListener.create();\n};\n\nclientEvent.on = function(eventName, handler, target) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.on(eventName, handler, target);\n};\n\nclientEvent.off = function(eventName, handler, target) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.off(eventName, handler, target);\n};\n\nclientEvent.clear = function(target) {\n    clientEvent.eventListener.clear(target);\n};\n\nclientEvent.dispatch = function(eventName, data) {\n    if (typeof eventName !== \"string\") {\n        return;\n    }\n    clientEvent.eventListener.dispatch(eventName, data);\n};","window.eventListener = {};\n\nvar oneToMultiListener = {};\n\noneToMultiListener.on = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        handlerList = [];\n        this.handlers[eventName] = handlerList;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        if (!handlerList[i]) {\n            handlerList[i].handler = handler;\n            handlerList[i].target = target;\n            return i;\n        }\n    }\n\n    handlerList.push({ handler: handler, target: target });\n    return handlerList.length;\n};\n\noneToMultiListener.dispatch = function(eventName, data) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    var len = handlerList.length;\n    for (var i = 0; i < len; i++) {\n        if (handlerList[i]) {\n            var handler = handlerList[i].handler;\n            var target = handlerList[i].target;\n            if (handler) {\n                try {\n                    if (target) {\n                        handler.call(target, data);\n                    } else {\n                        handler(data);\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n    }\n};\n\noneToMultiListener.off = function(eventName, handler, target) {\n    var handlerList = this.handlers[eventName];\n    if (!handlerList) {\n        return;\n    }\n\n    for (var i = 0; i < handlerList.length; i++) {\n        var oldHandler = handlerList[i].handler;\n        var oldTarget = handlerList[i].target;\n        if (oldHandler === handler && oldTarget === target) {\n            handlerList.splice(i, 1);\n            break;\n        }\n    }\n};\noneToMultiListener.clear = function(target) {\n    for (var eventName in this.handlers) {\n        var handlerList = this.handlers[eventName];\n        for (var i = 0; i < handlerList.length; i++) {\n            var oldTarget = handlerList[i].target;\n            if (oldTarget === target) {\n                handlerList.splice(i, 1);\n            }\n        }\n    }\n};\n\neventListener.create = function() {\n    var newEventListener = Object.create(oneToMultiListener);\n    newEventListener.handlers = {};\n    return newEventListener;\n};","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n    blockInput() {\n        Game.GameManager.getComponent(cc.BlockInputEvents).enabled = true;\n        setTimeout(function() {\n            Game.GameManager.getComponent(cc.BlockInputEvents).enabled = false;\n        }, 1000);\n    },\n\n    onLoad() {\n        Game.GameManager = this;\n        cc.game.addPersistRootNode(this.node);\n        cc.director.getCollisionManager().enabled = true;\n        clientEvent.init();\n        dataFunc.loadConfigs();\n        cc.view.enableAutoFullScreen(false);\n\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n        this.network = window.network;\n        this.network.chooseNetworkMode();\n        this.getRankDataListener();\n        this.findPlayerByAccountListener();\n        this.playerDie = false;\n        this.exitGame = true;\n\n        if (window.wx) {\n            wx.login({\n                success: function() {\n                    wx.getUserInfo({\n                        fail: function(res) {\n                            // iOS 和 Android 对于拒绝授权的回调 errMsg 没有统一，需要做一下兼容处理\n                            if (res.errMsg.indexOf('auth deny') > -1 || res.errMsg.indexOf('auth denied') > -1) {\n                                // 处理用户拒绝授权的情况\n                            }\n                        },\n                        success: function(res) {\n                            Game.GameManager.nickName = res.userInfo.nickName;\n                            Game.GameManager.avatarUrl = res.userInfo.avatarUrl;\n                            console.log('success', Game.GameManager.nickName);\n                        }\n                    });\n                }\n            })\n        }\n    },\n\n    leaveRoom: function(data) {\n        // 离开房间--\n        if (this.gameState === GameState.Play) {\n            if (data.leaveRoomInfo.userId !== GLB.userInfo.id) {\n                this.isRivalLeave = true;\n            }\n            clientEvent.dispatch(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n            this.gameOver();\n        }\n    },\n\n    gameOver: function() {\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel && Game.GameManager.gameState !== GameState.Over) {\n            console.log(\"游戏结束\");\n            Game.GameManager.gameState = GameState.Over;\n            this.readyCnt = 0;\n            setTimeout(function() {\n                clientEvent.dispatch(clientEvent.eventType.gameOver);\n            }.bind(this), 1500);\n            setTimeout(function() {\n                uiFunc.openUI(\"uiVsResultVer\");\n            }.bind(this), 3000);\n        }\n    },\n\n    matchVsInit: function() {\n        mvs.response.initResponse = this.initResponse.bind(this);\n        mvs.response.errorResponse = this.errorResponse.bind(this);\n        mvs.response.joinRoomResponse = this.joinRoomResponse.bind(this);\n        mvs.response.joinRoomNotify = this.joinRoomNotify.bind(this);\n        mvs.response.leaveRoomResponse = this.leaveRoomResponse.bind(this);\n        mvs.response.leaveRoomNotify = this.leaveRoomNotify.bind(this);\n        mvs.response.joinOverResponse = this.joinOverResponse.bind(this);\n        mvs.response.createRoomResponse = this.createRoomResponse.bind(this);\n        mvs.response.getRoomListResponse = this.getRoomListResponse.bind(this);\n        mvs.response.getRoomDetailResponse = this.getRoomDetailResponse.bind(this);\n        mvs.response.getRoomListExResponse = this.getRoomListExResponse.bind(this);\n        mvs.response.kickPlayerResponse = this.kickPlayerResponse.bind(this);\n        mvs.response.kickPlayerNotify = this.kickPlayerNotify.bind(this);\n        mvs.response.registerUserResponse = this.registerUserResponse.bind(this);\n        mvs.response.loginResponse = this.loginResponse.bind(this); // 用户登录之后的回调\n        mvs.response.logoutResponse = this.logoutResponse.bind(this); // 用户登录之后的回调\n        mvs.response.sendEventNotify = this.sendEventNotify.bind(this);\n        mvs.response.frameUpdate = this.frameUpdate.bind(this);\n        mvs.response.setFrameSyncResponse = this.setFrameSyncResponse.bind(this);\n        mvs.response.networkStateNotify = this.networkStateNotify.bind(this);\n\n        var result = mvs.engine.init(mvs.response, GLB.channel, GLB.platform, GLB.gameId);\n        if (result !== 0) {\n            console.log('初始化失败,错误码:' + result);\n        }\n        Game.GameManager.blockInput();\n\n    },\n\n    networkStateNotify: function(netNotify) {\n        console.log(\"netNotify\");\n        console.log(\"netNotify.owner:\" + netNotify.owner);\n        if (netNotify.userID !== GLB.userInfo.id) {\n            GLB.isRoomOwner = true;\n        }\n        console.log(\"玩家：\" + netNotify.userID + \" state:\" + netNotify.state);\n        if (netNotify.userID !== GLB.userInfo.id) {\n            this.isRivalLeave = true;\n        }\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomMedNotify, netNotify);\n        this.gameOver();\n    },\n\n    kickPlayerNotify: function(kickPlayerNotify) {\n        var data = {\n            kickPlayerNotify: kickPlayerNotify\n        };\n        clientEvent.dispatch(clientEvent.eventType.kickPlayerNotify, data);\n    },\n\n    kickPlayerResponse: function(kickPlayerRsp) {\n        if (kickPlayerRsp.status !== 200) {\n            console.log(\"失败kickPlayerRsp:\" + kickPlayerRsp);\n            return;\n        }\n        var data = {\n            kickPlayerRsp: kickPlayerRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.kickPlayerResponse, data);\n    },\n\n    getRoomListExResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 rsp:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.getRoomListExResponse, data);\n    },\n\n    getRoomDetailResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 rsp:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.getRoomDetailResponse, data);\n    },\n\n    getRoomListResponse: function(status, roomInfos) {\n        if (status !== 200) {\n            console.log(\"失败 status:\" + status);\n            return;\n        }\n        var data = {\n            status: status,\n            roomInfos: roomInfos\n        };\n        clientEvent.dispatch(clientEvent.eventType.getRoomListResponse, data);\n    },\n\n    createRoomResponse: function(rsp) {\n        if (rsp.status !== 200) {\n            console.log(\"失败 createRoomResponse:\" + rsp);\n            return;\n        }\n        var data = {\n            rsp: rsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.createRoomResponse, data);\n    },\n\n    joinOverResponse: function(joinOverRsp) {\n        if (joinOverRsp.status !== 200) {\n            console.log(\"失败 joinOverRsp:\" + joinOverRsp);\n            return;\n        }\n        var data = {\n            joinOverRsp: joinOverRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.joinOverResponse, data);\n    },\n\n    joinRoomResponse: function(status, roomUserInfoList, roomInfo) {\n        if (status !== 200) {\n            console.log(\"失败 joinRoomResponse:\" + status);\n            return;\n        }\n        var data = {\n            status: status,\n            roomUserInfoList: roomUserInfoList,\n            roomInfo: roomInfo\n        };\n        clientEvent.dispatch(clientEvent.eventType.joinRoomResponse, data);\n    },\n\n    joinRoomNotify: function(roomUserInfo) {\n        var data = {\n            roomUserInfo: roomUserInfo\n        };\n        clientEvent.dispatch(clientEvent.eventType.joinRoomNotify, data);\n    },\n\n    leaveRoomResponse: function(leaveRoomRsp) {\n        if (leaveRoomRsp.status !== 200) {\n            console.log(\"失败 leaveRoomRsp:\" + leaveRoomRsp);\n            return;\n        }\n        var data = {\n            leaveRoomRsp: leaveRoomRsp\n        };\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomResponse, data);\n    },\n\n    leaveRoomNotify: function(leaveRoomInfo) {\n        var data = {\n            leaveRoomInfo: leaveRoomInfo\n        };\n        clientEvent.dispatch(clientEvent.eventType.leaveRoomNotify, data);\n    },\n\n    logoutResponse: function(status) {\n        cc.game.removePersistRootNode(this.node);\n        cc.director.loadScene('lobby');\n    },\n\n    errorResponse: function(error, msg) {\n        if (error === 1001) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"网络断开连接\");\n                }\n            });\n            setTimeout(function() {\n                mvs.engine.logout(\"\");\n                cc.game.removePersistRootNode(this.node);\n                cc.director.loadScene('lobby');\n            }.bind(this), 2500);\n        }\n        console.log(\"错误信息：\" + error);\n        console.log(\"错误信息：\" + msg);\n\n    },\n\n    initResponse: function() {\n        console.log('初始化成功，开始注册用户');\n        var result = mvs.engine.registerUser();\n        if (result !== 0) {\n            console.log('注册用户失败，错误码:' + result);\n        } else {\n            console.log('注册用户成功');\n        }\n    },\n\n    registerUserResponse: function(userInfo) {\n        var deviceId = 'abcdef';\n        var gatewayId = 0;\n        GLB.userInfo = userInfo;\n\n        console.log('开始登录,用户Id:' + userInfo.id);\n\n        var result = mvs.engine.login(\n            userInfo.id, userInfo.token,\n            GLB.gameId, GLB.gameVersion,\n            GLB.appKey, GLB.secret,\n            deviceId, gatewayId\n        );\n        if (result !== 0) {\n            console.log('登录失败,错误码:' + result);\n        }\n    },\n\n    loginResponse: function(info) {\n        if (info.status !== 200) {\n            console.log('登录失败,异步回调错误码:' + info.status);\n        } else {\n            console.log('登录成功');\n            this.lobbyShow();\n        }\n    },\n\n    lobbyShow: function() {\n        this.gameState = GameState.None;\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiLobbyPanelVer\");\n        } else {\n            uiFunc.openUI(\"uiLobbyPanel\");\n        }\n    },\n\n    // 收到的消息\n    sendEventNotify: function(info) {\n        console.log(info);\n        var cpProto = JSON.parse(info.cpProto);\n        if (info.cpProto.indexOf(GLB.GAME_START_EVENT) >= 0) {\n            GLB.playerUserIds = [GLB.userInfo.id];\n            var remoteUserIds = JSON.parse(info.cpProto).userIds;\n            remoteUserIds.forEach(function(id) {\n                if (GLB.userInfo.id !== id) {\n                    GLB.playerUserIds.push(id);\n                }\n            });\n            this.startGame();\n        }\n\n        if (info.cpProto.indexOf(GLB.GAME_OVER_EVENT) >= 0) {\n            this.gameOver();\n        }\n\n        if (info.cpProto.indexOf(GLB.READY) >= 0) {\n            this.readyCnt++;\n            if (GLB.isRoomOwner && this.readyCnt >= GLB.playerUserIds.length) {\n                this.sendRoundStartMsg();\n            }\n        }\n\n        if (info.cpProto.indexOf(GLB.ROUND_START) >= 0) {\n            setTimeout(function() {\n                Game.GameManager.gameState = GameState.Play;\n            }.bind(this), 2000);\n            clientEvent.dispatch(clientEvent.eventType.roundStart);\n\n            if (GLB.syncFrame === true && GLB.isRoomOwner === true) {\n                var result = mvs.engine.setFrameSync(GLB.FRAME_RATE);\n                if (result !== 0) {\n                    console.log('设置帧同步率失败,错误码:' + result);\n                }\n            }\n        }\n    },\n\n    frameUpdate: function(rsp) {\n        for (var i = 0; i < rsp.frameItems.length; i++) {\n            if (Game.GameManager.gameState === GameState.Over) {\n                return;\n            }\n            var info = rsp.frameItems[i];\n            var cpProto = JSON.parse(info.cpProto);\n            if (info.cpProto.indexOf(GLB.POSITION) >= 0) {\n                if (GLB.userInfo.id === info.srcUserID) {\n                    Game.PlayerManager.self.setDirect(cpProto.position);\n                } else {\n                    Game.PlayerManager.rival.setDirect(cpProto.position);\n                }\n            }\n            if (info.cpProto.indexOf(GLB.ADD_BULLET) >= 0) {\n                Game.BulletManager.addBullet(cpProto.bulletData);\n            }\n\n            if (info.cpProto.indexOf(GLB.HURT) >= 0) {\n                if (GLB.userInfo.id === cpProto.playerId) {\n                    Game.PlayerManager.self.hurt();\n                } else {\n                    Game.PlayerManager.rival.hurt();\n                }\n            }\n            if (info.cpProto.indexOf(GLB.SHOOT_GUN_ITEM) >= 0) {\n                Game.ItemManager.addItem(cpProto.itemData);\n            }\n            if (info.cpProto.indexOf(GLB.DIFFUSE_ITEM_GET) >= 0) {\n                if (GLB.userInfo.id === cpProto.playerId) {\n                    let position = Game.PlayerManager.self.node.getPosition();\n                    Game.BulletManager.diffuseBullet(\"blue\", position)\n                } else {\n                    let position = Game.PlayerManager.rival.node.getPosition();\n                    Game.BulletManager.diffuseBullet(\"green\", position)\n                }\n            }\n            if (info.cpProto.indexOf(GLB.RADINTION_ITEM_GET) >= 0) {\n                if (GLB.userInfo.id === cpProto.playerId) {\n                    let obj = Game.PlayerManager.rival.node;\n                    let position = Game.PlayerManager.self.node.getPosition();\n                    Game.BulletManager.radintionBullet(obj, position)\n                } else {\n                    let obj = Game.PlayerManager.self.node;\n                    let position = Game.PlayerManager.rival.node.getPosition();\n                    Game.BulletManager.radintionBullet(obj, position)\n                }\n            }\n        }\n    },\n\n    sendReadyMsg: function() {\n        var msg = {action: GLB.READY};\n        this.sendEventEx(msg);\n    },\n\n    sendRoundStartMsg: function() {\n        var msg = {action: GLB.ROUND_START};\n        this.sendEventEx(msg);\n    },\n\n    sendEventEx: function(msg) {\n        var result = mvs.engine.sendEventEx(0, JSON.stringify(msg), 0, GLB.playerUserIds);\n        if (result.result !== 0) {\n            console.log(msg.action, result.result);\n        }\n    },\n\n    sendEvent: function(msg) {\n        var result = mvs.engine.sendEvent(JSON.stringify(msg));\n        if (result.result !== 0) {\n            console.log(msg.action, result.result);\n        }\n    },\n\n    startGame: function() {\n        this.readyCnt = 0;\n        this.isRivalLeave = false;\n        cc.director.loadScene('game', function() {\n            uiFunc.openUI(\"uiGamePanel\", function() {\n                this.sendReadyMsg();\n            }.bind(this));\n        }.bind(this));\n    },\n\n    setFrameSyncResponse: function(rsp) {\n        if (rsp.mStatus !== 200) {\n            console.log('设置同步帧率失败，status=' + rsp.status);\n        } else {\n            console.log('设置同步帧率成功, 帧率为:' + GLB.FRAME_RATE);\n        }\n    },\n\n\n    getRankDataListener: function() {\n        this.network.on(\"connector.rankHandler.getRankData\", function(recvMsg) {\n            uiFunc.openUI(\"uiRankPanelVer\", function(obj) {\n                var uiRankPanel = obj.getComponent(\"uiRankPanel\");\n                uiRankPanel.setData(recvMsg.rankArray);\n            });\n        }.bind(this));\n    },\n\n    findPlayerByAccountListener: function() {\n        this.network.on(\"connector.entryHandler.findPlayerByAccount\", function(recvMsg) {\n            clientEvent.dispatch(clientEvent.eventType.playerAccountGet, recvMsg);\n        });\n    },\n\n    loginServer: function() {\n        if (!this.network.isConnected()) {\n            this.network.connect(GLB.IP, GLB.PORT, function() {\n                    this.network.send(\"connector.entryHandler.login\", {\n                        \"account\": GLB.userInfo.id + \"\",\n                        \"channel\": \"0\",\n                        \"userName\": Game.GameManager.nickName ? Game.GameManager.nickName : GLB.userInfo.id + \"\",\n                        \"headIcon\": Game.GameManager.avatarUrl ? Game.GameManager.avatarUrl : \"-\"\n                    });\n                    setTimeout(function() {\n                        this.network.send(\"connector.rankHandler.updateScore\", {\n                            \"account\": GLB.userInfo.id + \"\",\n                            \"game\": GLB.GAME_NAME\n                        });\n                    }.bind(this), 500);\n\n                }.bind(this)\n            );\n        } else {\n            this.network.send(\"connector.rankHandler.updateScore\", {\n                \"account\": GLB.userInfo.id + \"\",\n                \"game\": GLB.GAME_NAME\n            });\n        }\n    },\n\n    userInfoReq: function(userId) {\n        if (!Game.GameManager.network.isConnected()) {\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT, function() {\n                    Game.GameManager.network.send(\"connector.entryHandler.login\", {\n                        \"account\": GLB.userInfo.id + \"\",\n                        \"channel\": \"0\",\n                        \"userName\": Game.GameManager.nickName ? Game.GameManager.nickName : GLB.userInfo.id + \"\",\n                        \"headIcon\": Game.GameManager.avatarUrl ? Game.GameManager.avatarUrl : \"-\"\n                    });\n                    setTimeout(function() {\n                        Game.GameManager.network.send(\"connector.entryHandler.findPlayerByAccount\", {\n                            \"account\": userId + \"\",\n                        });\n                    }, 200);\n                }\n            );\n        } else {\n            Game.GameManager.network.send(\"connector.entryHandler.findPlayerByAccount\", {\n                \"account\": userId + \"\",\n            });\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoom, this);\n    }\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        diffuseItem: cc.Prefab,\n        radintionItem:cc.Prefab\n    },\n\n    onLoad() {\n        Game.ItemManager = this;\n        this.itemsNumber = 0;\n        this.diffuseItemPool = new cc.NodePool();\n        this.radintionItemPool = new cc.NodePool();\n        clientEvent.on(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.on(clientEvent.eventType.roundOver, this.roundOver, this);\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n    },\n\n    roundStart() {\n        this.scheduleItemSpawn();\n    },\n\n    scheduleItemSpawn() {\n        clearInterval(this.scheduleItemId);\n        this.scheduleItemId = setInterval(function(){\n            if (Game.GameManager.gameState === GameState.Over || !GLB.isRoomOwner) {\n                return;\n            }\n            if (this.itemsNumber < 2) {\n                var itemData = this.setBulletData();\n                mvs.engine.sendFrameEvent(JSON.stringify({\n                    action: GLB.SHOOT_GUN_ITEM,\n                    itemData: itemData\n                }));\n            }\n        }.bind(this), 6000);\n    },\n\n    setBulletData(){\n        var itemType = Math.floor(Math.random()*2);\n        var x = -GLB.limitX + Math.random() * GLB.limitX*2;\n        var y = -GLB.limitYBottom + Math.random() * (GLB.limitYTop + GLB.limitYBottom - 20);\n        var itemPos = cc.p(x,y);\n        var data = {itemPos:itemPos,\n            itemType:itemType}\n        return data;\n    },\n\n    addItem(data) {\n        if (data.itemType === 0){\n            var item = this.diffuseItemPool.get();\n            if(!item){\n                item = cc.instantiate(this.diffuseItem);\n                item.itemType = \"diffuse\";\n            }\n        } else{\n            var item = this.radintionItemPool.get();\n            if(!item){\n                item = cc.instantiate(this.radintionItem);\n                item.itemType = \"radintion\";\n            }\n        }\n        item.parent = this.node;\n        item.setPosition(data.itemPos);\n        this.itemsNumber++;\n    },\n\n    recycleItem(target) {\n        switch (target.itemType){\n            case \"diffuse\":this.diffuseItemPool.put(target);\n                break;\n            case \"radintion\":this.radintionItemPool.put(target);\n                break;\n        }\n        this.itemsNumber--;\n    },\n\n    roundOver() {\n        clearInterval(this.scheduleItemId);\n    },\n\n    gameOver() {\n        clearInterval(this.scheduleItemId);\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.off(clientEvent.eventType.roundOver, this.roundOver, this);\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n    }\n\n});\n","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    destroyItem() {\n        Game.ItemManager.recycleItem(this.node);\n    },\n\n});\n","\r\n/* ================ md5.js ================= */\r\n/*\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\n\r\n/*\r\n * Configurable variables. You may need to tweak these to be compatible with\r\n * the server-side, but the defaults work in most cases.\r\n */\r\nvar hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar b64pad  = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\r\nvar chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\r\n\r\n/*\r\n * These are the functions you'll usually want to call\r\n * They take string arguments and return either hex or base-64 encoded strings\r\n */\r\nfunction hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}\r\nfunction b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}\r\nfunction str_md5(s){ return binl2str(core_md5(str2binl(s), s.length * chrsz));}\r\nfunction hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }\r\nfunction b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }\r\nfunction str_hmac_md5(key, data) { return binl2str(core_hmac_md5(key, data)); }\r\n\r\n/*\r\n * Perform a simple self-test to see if the VM is working\r\n */\r\nfunction md5_vm_test()\r\n{\r\n    return hex_md5(\"abc\") == \"900150983cd24fb0d6963f7d28e17f72\";\r\n}\r\n\r\n/*\r\n * Calculate the MD5 of an array of little-endian words, and a bit length\r\n */\r\nfunction core_md5(x, len)\r\n{\r\n    /* append padding */\r\n    x[len >> 5] |= 0x80 << ((len) % 32);\r\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\r\n\r\n    var a =  1732584193;\r\n    var b = -271733879;\r\n    var c = -1732584194;\r\n    var d =  271733878;\r\n\r\n    for(var i = 0; i < x.length; i += 16)\r\n    {\r\n        var olda = a;\r\n        var oldb = b;\r\n        var oldc = c;\r\n        var oldd = d;\r\n\r\n        a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\r\n        d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\r\n        c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\r\n        b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\r\n        a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\r\n        d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\r\n        c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\r\n        b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\r\n        a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\r\n        d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\r\n        c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\r\n        b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\r\n        a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\r\n        d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\r\n        c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\r\n        b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\r\n\r\n        a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\r\n        d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\r\n        c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\r\n        b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\r\n        a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\r\n        d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\r\n        c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\r\n        b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\r\n        a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\r\n        d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\r\n        c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\r\n        b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\r\n        a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\r\n        d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\r\n        c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\r\n        b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\r\n\r\n        a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\r\n        d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\r\n        c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\r\n        b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\r\n        a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\r\n        d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\r\n        c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\r\n        b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\r\n        a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\r\n        d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\r\n        c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\r\n        b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\r\n        a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\r\n        d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\r\n        c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\r\n        b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\r\n\r\n        a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\r\n        d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\r\n        c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\r\n        b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\r\n        a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\r\n        d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\r\n        c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\r\n        b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\r\n        a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\r\n        d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\r\n        c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\r\n        b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\r\n        a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\r\n        d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\r\n        c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\r\n        b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\r\n\r\n        a = safe_add(a, olda);\r\n        b = safe_add(b, oldb);\r\n        c = safe_add(c, oldc);\r\n        d = safe_add(d, oldd);\r\n    }\r\n    return Array(a, b, c, d);\r\n\r\n}\r\n\r\n/*\r\n * These functions implement the four basic operations the algorithm uses.\r\n */\r\nfunction md5_cmn(q, a, b, x, s, t)\r\n{\r\n    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\r\n}\r\nfunction md5_ff(a, b, c, d, x, s, t)\r\n{\r\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n}\r\nfunction md5_gg(a, b, c, d, x, s, t)\r\n{\r\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n}\r\nfunction md5_hh(a, b, c, d, x, s, t)\r\n{\r\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\nfunction md5_ii(a, b, c, d, x, s, t)\r\n{\r\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n}\r\n\r\n/*\r\n * Calculate the HMAC-MD5, of a key and some data\r\n */\r\nfunction core_hmac_md5(key, data)\r\n{\r\n    var bkey = str2binl(key);\r\n    if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);\r\n\r\n    var ipad = Array(16), opad = Array(16);\r\n    for(var i = 0; i < 16; i++)\r\n    {\r\n        ipad[i] = bkey[i] ^ 0x36363636;\r\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\r\n    }\r\n\r\n    var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);\r\n    return core_md5(opad.concat(hash), 512 + 128);\r\n}\r\n\r\n/*\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\nfunction safe_add(x, y)\r\n{\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\n/*\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\nfunction bit_rol(num, cnt)\r\n{\r\n    return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n\r\n/*\r\n * Convert a string to an array of little-endian words\r\n * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.\r\n */\r\nfunction str2binl(str)\r\n{\r\n    var bin = Array();\r\n    var mask = (1 << chrsz) - 1;\r\n    for(var i = 0; i < str.length * chrsz; i += chrsz)\r\n        bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);\r\n    return bin;\r\n}\r\n\r\n/*\r\n * Convert an array of little-endian words to a string\r\n */\r\nfunction binl2str(bin)\r\n{\r\n    var str = \"\";\r\n    var mask = (1 << chrsz) - 1;\r\n    for(var i = 0; i < bin.length * 32; i += chrsz)\r\n        str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & mask);\r\n    return str;\r\n}\r\n\r\n/*\r\n * Convert an array of little-endian words to a hex string.\r\n */\r\nfunction binl2hex(binarray)\r\n{\r\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    var str = \"\";\r\n    for(var i = 0; i < binarray.length * 4; i++)\r\n    {\r\n        str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\r\n           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\r\n    }\r\n    return str;\r\n}\r\n\r\n/*\r\n * Convert an array of little-endian words to a base-64 string\r\n */\r\nfunction binl2b64(binarray)\r\n{\r\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    var str = \"\";\r\n    for(var i = 0; i < binarray.length * 4; i += 3)\r\n    {\r\n        var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)\r\n                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )\r\n                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);\r\n        for(var j = 0; j < 4; j++)\r\n        {\r\n            if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;\r\n            else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/* ================ format.js ================= */\r\n//\r\n// format - printf-like string formatting for JavaScript\r\n// github.com/samsonjs/format\r\n// @_sjs\r\n//\r\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\r\n//\r\n// MIT License\r\n// http://sjs.mit-license.org\r\n//\r\n\r\nvar format = function (fmt){\r\n    var argIndex = 1 // skip initial format argument\r\n        , args = [].slice.call(arguments)\r\n        , i = 0\r\n        , n = fmt.length\r\n        , result = \"\"\r\n        , c\r\n        , escaped = false\r\n        , arg\r\n        , tmp\r\n        , leadingZero = false\r\n        , precision\r\n        , nextArg = function() { return args[argIndex++]; }\r\n        , slurpNumber = function() {\r\n            var digits = \"\";\r\n            while (/\\d/.test(fmt[i])) {\r\n                digits += fmt[i++];\r\n                c = fmt[i];\r\n            }\r\n            return digits.length > 0 ? parseInt(digits) : null;\r\n        }\r\n      ;\r\n    for (; i < n; ++i) {\r\n        c = fmt[i];\r\n        if (escaped) {\r\n            escaped = false;\r\n            if (c == \".\") {\r\n                leadingZero = false;\r\n                c = fmt[++i];\r\n            }\r\n            else if (c == \"0\" && fmt[i + 1] == \".\") {\r\n                leadingZero = true;\r\n                i += 2;\r\n                c = fmt[i];\r\n            }\r\n            else {\r\n                leadingZero = true;\r\n            }\r\n            precision = slurpNumber();\r\n            switch (c) {\r\n            case \"b\": // number in binary\r\n                result += parseInt(nextArg(), 10).toString(2);\r\n                break;\r\n            case \"c\": // character\r\n                arg = nextArg();\r\n                if (typeof arg === \"string\" || arg instanceof String)\r\n                    result += arg;\r\n                else\r\n                    result += String.fromCharCode(parseInt(arg, 10));\r\n                break;\r\n            case \"d\": // number in decimal\r\n                result += parseInt(nextArg(), 10);\r\n                break;\r\n            case \"f\": // floating point number\r\n                tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\r\n                result += leadingZero ? tmp : tmp.replace(/^0/, \"\");\r\n                break;\r\n            case \"j\": // JSON\r\n                result += JSON.stringify(nextArg());\r\n                break;\r\n            case \"o\": // number in octal\r\n                result += \"0\" + parseInt(nextArg(), 10).toString(8);\r\n                break;\r\n            case \"s\": // string\r\n                result += nextArg();\r\n                break;\r\n            case \"x\": // lowercase hexadecimal\r\n                result += \"0x\" + parseInt(nextArg(), 10).toString(16);\r\n                break;\r\n            case \"X\": // uppercase hexadecimal\r\n                result += \"0x\" + parseInt(nextArg(), 10).toString(16).toUpperCase();\r\n                break;\r\n            default:\r\n                result += c;\r\n                break;\r\n            }\r\n        } else if (c === \"%\") {\r\n            escaped = true;\r\n        } else {\r\n            result += c;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n/* ================ matchvsLog.js ================= */\r\nvar MatchvsLog = {\r\n    toArray: function (argument) {\r\n        var args = [];\r\n        for (var i = 0; i < argument.length; i++) {\r\n            args.push(argument[i]);\r\n        }\r\n        return args;\r\n    }\r\n};\r\n\r\nfunction getNowFormatDate() {\r\n    var date = new Date();\r\n    var ___ = \"-\";\r\n    var __ = \":\";\r\n    var month = date.getMonth() + 1;\r\n    var strDate = date.getDate();\r\n    if (month >= 1 && month <= 9) {\r\n        month = \"0\" + month;\r\n    }\r\n    if (strDate >= 0 && strDate <= 9) {\r\n        strDate = \"0\" + strDate;\r\n    }\r\n    return \"[\" + date.getFullYear() + ___ + month\r\n        + ___ + strDate + \" \" + date.getHours() + __\r\n        + date.getMinutes() + __ + date.getSeconds() + \".\"\r\n        + date.getMilliseconds() + \"]\";\r\n}\r\n\r\nMatchvsLog.openLog = function () {\r\n    console.log(\"---- open log ----\");\r\n    if (typeof (wx) === \"undefined\") {\r\n        MatchvsLog.logI = console.log.bind(console\r\n            , \"[INFO ] \" + \" \");\r\n        MatchvsLog.logE = console.error.bind(console\r\n            , \"[ERROR] \" + \" \");\r\n    } else {\r\n        MatchvsLog.logI = function () {\r\n            var loc = \"\";\r\n            try {\r\n                throw new Error();\r\n            } catch (e) {\r\n                var line = e.stack.split(/\\n/)[1];\r\n                loc= line.slice(line.lastIndexOf(\"/\")+1,line.lastIndexOf(\")\"));\r\n            }\r\n            console.info(\"[INFO ] \" + getNowFormatDate() + \" \" + this.toArray(arguments) + \" \" + loc);\r\n        };\r\n\r\n        MatchvsLog.logE = function () {\r\n            var loc = \"\";\r\n            try {\r\n                throw new Error();\r\n            } catch (e) {\r\n                var line = e.stack.split(/\\n/)[1];\r\n                loc= line.slice(line.lastIndexOf(\"/\")+1,line.lastIndexOf(\")\"));\r\n            }\r\n            console.error(\"[ERROR] \" + getNowFormatDate() + \" \" + this.toArray(arguments) + \" \" + loc);\r\n        };\r\n    }\r\n};\r\n\r\nMatchvsLog.closeLog = function () {\r\n    console.log(\"---- close log ----\");\r\n    MatchvsLog.logI = function () {\r\n    };\r\n    MatchvsLog.logE = function () {\r\n    };\r\n};\r\n\r\nMatchvsLog.openLog();//default, the log is opening\r\n\r\n/* ================ mvsconfig.js ================= */\r\nvar HEART_BEAT_INTERVAL = 3000; //心跳间隔时间\r\nvar ENGE_STATE = {\r\n    NONE:             0x0000,     //无状态\r\n    INITING :         0x0001,     //正在初始化\r\n    HAVE_INIT :       0x0002,     //初始化\r\n    LOGINING:         0x0004,     //正在登录\r\n    HAVE_LOGIN :      0x0008,     //已登录\r\n    IN_ROOM:          0x0010,     //在房间内\r\n    CREATEROOM:       0x0020,     //创建房间中\r\n    JOIN_ROOMING:     0x0040,     //加入房间中\r\n    LEAVE_ROOMING:    0x0080,     //正在退出房间\r\n    LOGOUTING:        0x0100,     //正在退出登录\r\n    RECONNECTING:     0x0200      //正在重新连接\r\n};\r\n\r\n/**\r\n * 平台配置值\r\n * @type {{MVS_COMMON: number, MVS_EGRET: number, MVS_WX: number}}\r\n */\r\nvar ENMU_MVS_PTF = {\r\n    MVS_COMMON: 0,\r\n    MVS_EGRET : 1,\r\n    MVS_WX:2\r\n};\r\n\r\n\r\nvar MVSCONFIG ={\r\n    MAXPLAYER_LIMIT : 20,\r\n    MVS_PTF_ADATPER : ENMU_MVS_PTF.MVS_COMMON //如果是白鹭适配就需要填 1\r\n};\r\n\r\nvar HttpConf = {\r\n    HOST_GATWAY_ADDR:\"\",\r\n    HOST_HOTEL_ADDR:\"\",\r\n    GETHOSTLIST_URL:\"http://sdk.matchvs.com\",\r\n    REGISTER_USER_URL:\"\",\r\n    CMSNS_URL:\"\",\r\n    VS_OPEN_URL:\"\",\r\n    VS_PAY_URL:\"\",\r\n    VS_PRODUCT_URL:\"\"\r\n};\r\n\r\n/* ================ msutil.js ================= */\r\nif (typeof String.prototype.startsWith !== \"function\") {\r\n    String.prototype.startsWith = function (prefix) {\r\n        return this.slice(0, prefix.length) === prefix;\r\n    };\r\n}\r\nif (typeof String.prototype.endsWith !== \"function\") {\r\n    String.prototype.endsWith = function (suffix) {\r\n        return this.indexOf(suffix, this.length - suffix.length) !== -1;\r\n    };\r\n}\r\n\r\nfunction IncludeJS(fileName) {\r\n    new_element = document.createElement(\"script\");\r\n    new_element.setAttribute(\"type\", \"text/javascript\");\r\n    new_element.setAttribute(\"src\", fileName);// 在这里引入了a.js\r\n    document.body.appendChild(new_element);\r\n}\r\n\r\n// IncludeJS(\"msutil.js\");\r\n\r\nfunction MSExtend(Child, Parent) {\r\n    var p = Parent.prototype;\r\n    var c = Child.prototype;\r\n    for (var i in p) {\r\n        c[i] = p[i];\r\n    }\r\n}\r\n\r\nfunction stringToUtf8ByteArray(a) {\r\n    if (!(a && (typeof a === \"string\"))) {\r\n        return new Uint8Array(0);\r\n    }\r\n    for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n        var e = a.charCodeAt(d);\r\n        128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);\r\n    }\r\n    var buf = new Uint8Array(b.length);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        buf[i] = b[i];\r\n\r\n    }\r\n    return buf;\r\n}\r\n\r\nfunction utf8ByteArrayToString(a) {\r\n    for (var b = [], c = 0, d = 0; c < a.length;) {\r\n        var e = a[c++];\r\n        if (128 > e) b[d++] = String.fromCharCode(e); else if (191 < e && 224 > e) {\r\n            var f = a[c++];\r\n            b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);\r\n        } else if (239 < e && 365 > e) {\r\n            var f = a[c++], g = a[c++], h = a[c++],\r\n                e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;\r\n            b[d++] = String.fromCharCode(55296 + (e >> 10));\r\n            b[d++] = String.fromCharCode(56320 + (e & 1023));\r\n        } else f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);\r\n    }\r\n    return b.join(\"\");\r\n}\r\n\r\nfunction str2u8array(str) {\r\n    if (!(str && (typeof str === \"string\"))) {\r\n        return str;\r\n    }\r\n    var out = new Uint8Array(str.length * 2);\r\n    for (var i = 0; i < str.length; i++) {\r\n        out[i * 2] = str.charCodeAt(i) >> 8;\r\n        out[i * 2 + 1] = str.charCodeAt(i);\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction u8array2str(u8array) {\r\n    var buf = new Uint16Array(u8array.length / 2);\r\n    for (var i = 0; i < buf.length; i++) {\r\n        buf[i] = u8array[i * 2] << 8 | u8array[i * 2 + 1];\r\n\r\n    }\r\n    return String.fromCharCode.apply(null, buf);\r\n\r\n}\r\n\r\n/**\r\n * @return {boolean}\r\n */\r\nfunction LocalStore_Save(key, value) {\r\n    //存储，IE6~7 cookie 其他浏览器HTML5本地存储\r\n    if (window.localStorage) {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }\r\n\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return false;\r\n    }\r\n\r\n    if (typeof (wx) !== \"undefined\") {\r\n        wx.setStorageSync(key, value);\r\n        return true;\r\n    } else {\r\n        return false;\r\n        // document.cookie+=(key+\"=\"+value);\r\n    }\r\n}\r\n\r\n/**\r\n * @return {boolean}\r\n */\r\nfunction LocalStore_Clear() {\r\n    //存储，IE6~7 cookie 其他浏览器HTML5本地存储\r\n    if (window.localStorage) {\r\n        localStorage.clear();\r\n        return true;\r\n    }\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return false;\r\n    }\r\n    if (typeof (wx) !== \"undefined\") {\r\n        wx.clearStorageSync();\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction LocalStore_Load(key) {\r\n    if (window.localStorage) {\r\n        return localStorage.getItem(key);\r\n    }\r\n    if (MVSCONFIG.MVS_PTF_ADATPER === ENMU_MVS_PTF.MVS_EGRET) {\r\n        return null;\r\n    }\r\n\r\n    if (typeof (wx) !== \"undefined\") {\r\n        return wx.getStorageSync(key);\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nfunction isIE() { //ie?\r\n    return !!window.ActiveXObject || \"ActiveXObject\" in window;\r\n}\r\n\r\n/**\r\n * 同时在SDK加入房间时mvs在bookInfo中会返回hotel的wssProxy\r\n * 建立连接时用 wss://proxyAddress/proxy?hotel=hotelAddress\r\n * @param engine {MatchvsEngine}\r\n * @returns {string} url\r\n */\r\nfunction getHotelUrl(engine) {\r\n    return \"wss://\" + engine.mBookInfo.getWssproxy() + \"/proxy?hotel=\" + engine.mBookInfo.getHoteladdr();\r\n}\r\n\r\nfunction commEngineStateCheck(engineState, roomLoock, type) {\r\n    if ((engineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return -2;         //未初始化\r\n    if ((engineState & ENGE_STATE.INITING) === ENGE_STATE.INITING) return -3;             //正在初始化\r\n    if ((engineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) return -4;       //未登录\r\n    if ((engineState & ENGE_STATE.LOGINING) === ENGE_STATE.LOGINING) return -5;           //正在登录\r\n    if ((engineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM) return -7;         //在创建房间\r\n    if ((engineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING) return -7;     //正在加入房间\r\n    if ((engineState & ENGE_STATE.LOGOUTING) === ENGE_STATE.LOGOUTING) return -11;  // 正在登出\r\n    if (type === 1) {\r\n        if ((engineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM) return -6;         //没有进入房间\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING) return -10;//正在离开房间\r\n    } else if (type === 2) {\r\n        if ((engineState & ENGE_STATE.IN_ROOM) === ENGE_STATE.IN_ROOM) return -8;         //已经在房间\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING) return -10;//正在离开房间\r\n    } else if (type === 3) {\r\n        if ((engineState & ENGE_STATE.LEAVE_ROOMING) === ENGE_STATE.LEAVE_ROOMING) return -10;//正在离开房间\r\n    }\r\n    return 0;\r\n}/* ================ mspb.js ================= */\r\n(function e(t, n, r) {\r\n    function s(o, u) {\r\n        if (!n[o]) {\r\n            if (!t[o]) {\r\n                var a = typeof _require == \"function\" && _require;\r\n                if (!u && a) return a(o, !0);\r\n                if (i) return i(o, !0);\r\n                var f = new Error(\"Cannot find module '\" + o + \"'\");\r\n                throw f.code = \"MODULE_NOT_FOUND\", f;\r\n            }\r\n            var l = n[o] = {exports: {}};\r\n            t[o][0].call(l.exports, function (e) {\r\n                var n = t[o][1][e];\r\n                return s(n ? n : e);\r\n            }, l, l.exports, e, t, n, r);\r\n        }\r\n        return n[o].exports;\r\n    }\r\n\r\n    var i = typeof _require == \"function\" && _require;\r\n    for (var o = 0; o < r.length; o++) s(r[o]);\r\n    return s;\r\n})({\r\n    1: [function (_require, module, exports) {\r\n        (function (global) {\r\n            var $jscomp = {\r\n                scope: {}, getGlobal: function (a) {\r\n                    return \"undefined\" != typeof window && window === a ? a : \"undefined\" != typeof global ? global : a;\r\n                }\r\n            };\r\n            $jscomp.global = $jscomp.getGlobal(this);\r\n            $jscomp.initSymbol = function () {\r\n                $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);\r\n                $jscomp.initSymbol = function () {\r\n                };\r\n            };\r\n            $jscomp.symbolCounter_ = 0;\r\n            $jscomp.Symbol = function (a) {\r\n                return \"jscomp_symbol_\" + a + $jscomp.symbolCounter_++;\r\n            };\r\n            $jscomp.initSymbolIterator = function () {\r\n                $jscomp.initSymbol();\r\n                $jscomp.global.Symbol.iterator || ($jscomp.global.Symbol.iterator = $jscomp.global.Symbol(\"iterator\"));\r\n                $jscomp.initSymbolIterator = function () {\r\n                };\r\n            };\r\n            $jscomp.makeIterator = function (a) {\r\n                $jscomp.initSymbolIterator();\r\n                $jscomp.initSymbol();\r\n                $jscomp.initSymbolIterator();\r\n                var b = a[Symbol.iterator];\r\n                if (b) return b.call(a);\r\n                var c = 0;\r\n                return {\r\n                    next: function () {\r\n                        return c < a.length ? {done: !1, value: a[c++]} : {done: !0};\r\n                    }\r\n                };\r\n            };\r\n            $jscomp.arrayFromIterator = function (a) {\r\n                for (var b, c = []; !(b = a.next()).done;) c.push(b.value);\r\n                return c;\r\n            };\r\n            $jscomp.arrayFromIterable = function (a) {\r\n                return a instanceof Array ? a : $jscomp.arrayFromIterator($jscomp.makeIterator(a));\r\n            };\r\n            $jscomp.inherits = function (a, b) {\r\n                function c() {\r\n                }\r\n\r\n                c.prototype = b.prototype;\r\n                a.prototype = new c;\r\n                a.prototype.constructor = a;\r\n                for (var d in b) if (Object.defineProperties) {\r\n                    var e = Object.getOwnPropertyDescriptor(b, d);\r\n                    e && Object.defineProperty(a, d, e);\r\n                } else a[d] = b[d];\r\n            };\r\n            $jscomp.array = $jscomp.array || {};\r\n            $jscomp.iteratorFromArray = function (a, b) {\r\n                $jscomp.initSymbolIterator();\r\n                a instanceof String && (a += \"\");\r\n                var c = 0, d = {\r\n                    next: function () {\r\n                        if (c < a.length) {\r\n                            var e = c++;\r\n                            return {value: b(e, a[e]), done: !1};\r\n                        }\r\n                        d.next = function () {\r\n                            return {done: !0, value: void 0};\r\n                        };\r\n                        return d.next();\r\n                    }\r\n                };\r\n                $jscomp.initSymbol();\r\n                $jscomp.initSymbolIterator();\r\n                d[Symbol.iterator] = function () {\r\n                    return d;\r\n                };\r\n                return d;\r\n            };\r\n            $jscomp.findInternal = function (a, b, c) {\r\n                a instanceof String && (a = String(a));\r\n                for (var d = a.length, e = 0; e < d; e++) {\r\n                    var f = a[e];\r\n                    if (b.call(c, f, e, a)) return {i: e, v: f};\r\n                }\r\n                return {i: -1, v: void 0};\r\n            };\r\n            $jscomp.array.from = function (a, b, c) {\r\n                $jscomp.initSymbolIterator();\r\n                b = null != b ? b : function (a) {\r\n                    return a;\r\n                };\r\n                var d = [];\r\n                $jscomp.initSymbol();\r\n                $jscomp.initSymbolIterator();\r\n                var e = a[Symbol.iterator];\r\n                \"function\" == typeof e && (a = e.call(a));\r\n                if (\"function\" == typeof a.next) for (; !(e = a.next()).done;) d.push(b.call(c, e.value)); else for (var e = a.length, f = 0; f < e; f++) d.push(b.call(c, a[f]));\r\n                return d;\r\n            };\r\n            $jscomp.array.of = function (a) {\r\n                return $jscomp.array.from(arguments);\r\n            };\r\n            $jscomp.array.entries = function () {\r\n                return $jscomp.iteratorFromArray(this, function (a, b) {\r\n                    return [a, b];\r\n                });\r\n            };\r\n            $jscomp.array.installHelper_ = function (a, b) {\r\n                !Array.prototype[a] && Object.defineProperties && Object.defineProperty && Object.defineProperty(Array.prototype, a, {\r\n                    configurable: !0,\r\n                    enumerable: !1,\r\n                    writable: !0,\r\n                    value: b\r\n                });\r\n            };\r\n            $jscomp.array.entries$install = function () {\r\n                $jscomp.array.installHelper_(\"entries\", $jscomp.array.entries);\r\n            };\r\n            $jscomp.array.keys = function () {\r\n                return $jscomp.iteratorFromArray(this, function (a) {\r\n                    return a;\r\n                });\r\n            };\r\n            $jscomp.array.keys$install = function () {\r\n                $jscomp.array.installHelper_(\"keys\", $jscomp.array.keys);\r\n            };\r\n            $jscomp.array.values = function () {\r\n                return $jscomp.iteratorFromArray(this, function (a, b) {\r\n                    return b;\r\n                });\r\n            };\r\n            $jscomp.array.values$install = function () {\r\n                $jscomp.array.installHelper_(\"values\", $jscomp.array.values);\r\n            };\r\n            $jscomp.array.copyWithin = function (a, b, c) {\r\n                var d = this.length;\r\n                a = Number(a);\r\n                b = Number(b);\r\n                c = Number(null != c ? c : d);\r\n                if (a < b) for (c = Math.min(c, d); b < c;) b in this ? this[a++] = this[b++] : (delete this[a++], b++); else for (c = Math.min(c, d + b - a), a += c - b; c > b;) --c in this ? this[--a] = this[c] : delete this[a];\r\n                return this;\r\n            };\r\n            $jscomp.array.copyWithin$install = function () {\r\n                $jscomp.array.installHelper_(\"copyWithin\", $jscomp.array.copyWithin);\r\n            };\r\n            $jscomp.array.fill = function (a, b, c) {\r\n                var d = this.length || 0;\r\n                0 > b && (b = Math.max(0, d + b));\r\n                if (null == c || c > d) c = d;\r\n                c = Number(c);\r\n                0 > c && (c = Math.max(0, d + c));\r\n                for (b = Number(b || 0); b < c; b++) this[b] = a;\r\n                return this;\r\n            };\r\n            $jscomp.array.fill$install = function () {\r\n                $jscomp.array.installHelper_(\"fill\", $jscomp.array.fill);\r\n            };\r\n            $jscomp.array.find = function (a, b) {\r\n                return $jscomp.findInternal(this, a, b).v;\r\n            };\r\n            $jscomp.array.find$install = function () {\r\n                $jscomp.array.installHelper_(\"find\", $jscomp.array.find);\r\n            };\r\n            $jscomp.array.findIndex = function (a, b) {\r\n                return $jscomp.findInternal(this, a, b).i;\r\n            };\r\n            $jscomp.array.findIndex$install = function () {\r\n                $jscomp.array.installHelper_(\"findIndex\", $jscomp.array.findIndex);\r\n            };\r\n            $jscomp.ASSUME_NO_NATIVE_MAP = !1;\r\n            $jscomp.Map$isConformant = function () {\r\n                if ($jscomp.ASSUME_NO_NATIVE_MAP) return !1;\r\n                var a = $jscomp.global.Map;\r\n                if (!a || !a.prototype.entries || \"function\" != typeof Object.seal) return !1;\r\n                try {\r\n                    var b = Object.seal({x: 4}), c = new a($jscomp.makeIterator([[b, \"s\"]]));\r\n                    if (\"s\" != c.get(b) || 1 != c.size || c.get({x: 4}) || c.set({x: 4}, \"t\") != c || 2 != c.size) return !1;\r\n                    var d = c.entries(), e = d.next();\r\n                    if (e.done || e.value[0] != b || \"s\" != e.value[1]) return !1;\r\n                    e = d.next();\r\n                    return e.done || 4 != e.value[0].x || \"t\" != e.value[1] || !d.next().done ? !1 : !0;\r\n                } catch (f) {\r\n                    return !1;\r\n                }\r\n            };\r\n            $jscomp.Map = function (a) {\r\n                this.data_ = {};\r\n                this.head_ = $jscomp.Map.createHead();\r\n                this.size = 0;\r\n                if (a) {\r\n                    a = $jscomp.makeIterator(a);\r\n                    for (var b; !(b = a.next()).done;) b = b.value, this.set(b[0], b[1]);\r\n                }\r\n            };\r\n            $jscomp.Map.prototype.set = function (a, b) {\r\n                var c = $jscomp.Map.maybeGetEntry(this, a);\r\n                c.list || (c.list = this.data_[c.id] = []);\r\n                c.entry ? c.entry.value = b : (c.entry = {\r\n                    next: this.head_,\r\n                    previous: this.head_.previous,\r\n                    head: this.head_,\r\n                    key: a,\r\n                    value: b\r\n                }, c.list.push(c.entry), this.head_.previous.next = c.entry, this.head_.previous = c.entry, this.size++);\r\n                return this;\r\n            };\r\n            $jscomp.Map.prototype[\"delete\"] = function (a) {\r\n                a = $jscomp.Map.maybeGetEntry(this, a);\r\n                return a.entry && a.list ? (a.list.splice(a.index, 1), a.list.length || delete this.data_[a.id], a.entry.previous.next = a.entry.next, a.entry.next.previous = a.entry.previous, a.entry.head = null, this.size--, !0) : !1;\r\n            };\r\n            $jscomp.Map.prototype.clear = function () {\r\n                this.data_ = {};\r\n                this.head_ = this.head_.previous = $jscomp.Map.createHead();\r\n                this.size = 0;\r\n            };\r\n            $jscomp.Map.prototype.has = function (a) {\r\n                return !!$jscomp.Map.maybeGetEntry(this, a).entry;\r\n            };\r\n            $jscomp.Map.prototype.get = function (a) {\r\n                return (a = $jscomp.Map.maybeGetEntry(this, a).entry) && a.value;\r\n            };\r\n            $jscomp.Map.prototype.entries = function () {\r\n                return $jscomp.Map.makeIterator_(this, function (a) {\r\n                    return [a.key, a.value];\r\n                });\r\n            };\r\n            $jscomp.Map.prototype.keys = function () {\r\n                return $jscomp.Map.makeIterator_(this, function (a) {\r\n                    return a.key;\r\n                });\r\n            };\r\n            $jscomp.Map.prototype.values = function () {\r\n                return $jscomp.Map.makeIterator_(this, function (a) {\r\n                    return a.value;\r\n                });\r\n            };\r\n            $jscomp.Map.prototype.forEach = function (a, b) {\r\n                for (var c = this.entries(), d; !(d = c.next()).done;) d = d.value, a.call(b, d[1], d[0], this);\r\n            };\r\n            $jscomp.Map.maybeGetEntry = function (a, b) {\r\n                var c = $jscomp.Map.getId(b), d = a.data_[c];\r\n                if (d && Object.prototype.hasOwnProperty.call(a.data_, c)) for (var e = 0; e < d.length; e++) {\r\n                    var f = d[e];\r\n                    if (b !== b && f.key !== f.key || b === f.key) return {id: c, list: d, index: e, entry: f};\r\n                }\r\n                return {id: c, list: d, index: -1, entry: void 0};\r\n            };\r\n            $jscomp.Map.makeIterator_ = function (a, b) {\r\n                var c = a.head_, d = {\r\n                    next: function () {\r\n                        if (c) {\r\n                            for (; c.head != a.head_;) c = c.previous;\r\n                            for (; c.next != c.head;) return c = c.next, {done: !1, value: b(c)};\r\n                            c = null;\r\n                        }\r\n                        return {done: !0, value: void 0};\r\n                    }\r\n                };\r\n                $jscomp.initSymbol();\r\n                $jscomp.initSymbolIterator();\r\n                d[Symbol.iterator] = function () {\r\n                    return d;\r\n                };\r\n                return d;\r\n            };\r\n            $jscomp.Map.mapIndex_ = 0;\r\n            $jscomp.Map.createHead = function () {\r\n                var a = {};\r\n                return a.previous = a.next = a.head = a;\r\n            };\r\n            $jscomp.Map.getId = function (a) {\r\n                if (!(a instanceof Object)) return \"p_\" + a;\r\n                if (!($jscomp.Map.idKey in a)) try {\r\n                    $jscomp.Map.defineProperty(a, $jscomp.Map.idKey, {value: ++$jscomp.Map.mapIndex_});\r\n                } catch (b) {\r\n                }\r\n                return $jscomp.Map.idKey in a ? a[$jscomp.Map.idKey] : \"o_ \" + a;\r\n            };\r\n            $jscomp.Map.defineProperty = Object.defineProperty ? function (a, b, c) {\r\n                Object.defineProperty(a, b, {value: String(c)});\r\n            } : function (a, b, c) {\r\n                a[b] = String(c);\r\n            };\r\n            $jscomp.Map.Entry = function () {\r\n            };\r\n            $jscomp.Map$install = function () {\r\n                $jscomp.initSymbol();\r\n                $jscomp.initSymbolIterator();\r\n                $jscomp.Map$isConformant() ? $jscomp.Map = $jscomp.global.Map : ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), $jscomp.Map.prototype[Symbol.iterator] = $jscomp.Map.prototype.entries, $jscomp.initSymbol(), $jscomp.Map.idKey = Symbol(\"map-id-key\"), $jscomp.Map$install = function () {\r\n                });\r\n            };\r\n            $jscomp.math = $jscomp.math || {};\r\n            $jscomp.math.clz32 = function (a) {\r\n                a = Number(a) >>> 0;\r\n                if (0 === a) return 32;\r\n                var b = 0;\r\n                0 === (a & 4294901760) && (a <<= 16, b += 16);\r\n                0 === (a & 4278190080) && (a <<= 8, b += 8);\r\n                0 === (a & 4026531840) && (a <<= 4, b += 4);\r\n                0 === (a & 3221225472) && (a <<= 2, b += 2);\r\n                0 === (a & 2147483648) && b++;\r\n                return b;\r\n            };\r\n            $jscomp.math.imul = function (a, b) {\r\n                a = Number(a);\r\n                b = Number(b);\r\n                var c = a & 65535, d = b & 65535;\r\n                return c * d + ((a >>> 16 & 65535) * d + c * (b >>> 16 & 65535) << 16 >>> 0) | 0;\r\n            };\r\n            $jscomp.math.sign = function (a) {\r\n                a = Number(a);\r\n                return 0 === a || isNaN(a) ? a : 0 < a ? 1 : -1;\r\n            };\r\n            $jscomp.math.log10 = function (a) {\r\n                return Math.log(a) / Math.LN10;\r\n            };\r\n            $jscomp.math.log2 = function (a) {\r\n                return Math.log(a) / Math.LN2;\r\n            };\r\n            $jscomp.math.log1p = function (a) {\r\n                a = Number(a);\r\n                if (.25 > a && -.25 < a) {\r\n                    for (var b = a, c = 1, d = a, e = 0, f = 1; e != d;) b *= a, f *= -1, d = (e = d) + f * b / ++c;\r\n                    return d;\r\n                }\r\n                return Math.log(1 + a);\r\n            };\r\n            $jscomp.math.expm1 = function (a) {\r\n                a = Number(a);\r\n                if (.25 > a && -.25 < a) {\r\n                    for (var b = a, c = 1, d = a, e = 0; e != d;) b *= a / ++c, d = (e = d) + b;\r\n                    return d;\r\n                }\r\n                return Math.exp(a) - 1;\r\n            };\r\n            $jscomp.math.cosh = function (a) {\r\n                a = Number(a);\r\n                return (Math.exp(a) + Math.exp(-a)) / 2;\r\n            };\r\n            $jscomp.math.sinh = function (a) {\r\n                a = Number(a);\r\n                return 0 === a ? a : (Math.exp(a) - Math.exp(-a)) / 2;\r\n            };\r\n            $jscomp.math.tanh = function (a) {\r\n                a = Number(a);\r\n                if (0 === a) return a;\r\n                var b = Math.exp(-2 * Math.abs(a)), b = (1 - b) / (1 + b);\r\n                return 0 > a ? -b : b;\r\n            };\r\n            $jscomp.math.acosh = function (a) {\r\n                a = Number(a);\r\n                return Math.log(a + Math.sqrt(a * a - 1));\r\n            };\r\n            $jscomp.math.asinh = function (a) {\r\n                a = Number(a);\r\n                if (0 === a) return a;\r\n                var b = Math.log(Math.abs(a) + Math.sqrt(a * a + 1));\r\n                return 0 > a ? -b : b;\r\n            };\r\n            $jscomp.math.atanh = function (a) {\r\n                a = Number(a);\r\n                return ($jscomp.math.log1p(a) - $jscomp.math.log1p(-a)) / 2;\r\n            };\r\n            $jscomp.math.hypot = function (a, b, c) {\r\n                a = Number(a);\r\n                b = Number(b);\r\n                var d, e, f, g = Math.max(Math.abs(a), Math.abs(b));\r\n                for (d = 2; d < arguments.length; d++) g = Math.max(g, Math.abs(arguments[d]));\r\n                if (1E100 < g || 1E-100 > g) {\r\n                    a /= g;\r\n                    b /= g;\r\n                    f = a * a + b * b;\r\n                    for (d = 2; d < arguments.length; d++) e = Number(arguments[d]) / g, f += e * e;\r\n                    return Math.sqrt(f) * g;\r\n                }\r\n                f = a * a + b * b;\r\n                for (d = 2; d < arguments.length; d++) e = Number(arguments[d]), f += e * e;\r\n                return Math.sqrt(f);\r\n            };\r\n            $jscomp.math.trunc = function (a) {\r\n                a = Number(a);\r\n                if (isNaN(a) || Infinity === a || -Infinity === a || 0 === a) return a;\r\n                var b = Math.floor(Math.abs(a));\r\n                return 0 > a ? -b : b;\r\n            };\r\n            $jscomp.math.cbrt = function (a) {\r\n                if (0 === a) return a;\r\n                a = Number(a);\r\n                var b = Math.pow(Math.abs(a), 1 / 3);\r\n                return 0 > a ? -b : b;\r\n            };\r\n            $jscomp.number = $jscomp.number || {};\r\n            $jscomp.number.isFinite = function (a) {\r\n                return \"number\" !== typeof a ? !1 : !isNaN(a) && Infinity !== a && -Infinity !== a;\r\n            };\r\n            $jscomp.number.isInteger = function (a) {\r\n                return $jscomp.number.isFinite(a) ? a === Math.floor(a) : !1;\r\n            };\r\n            $jscomp.number.isNaN = function (a) {\r\n                return \"number\" === typeof a && isNaN(a);\r\n            };\r\n            $jscomp.number.isSafeInteger = function (a) {\r\n                return $jscomp.number.isInteger(a) && Math.abs(a) <= $jscomp.number.MAX_SAFE_INTEGER;\r\n            };\r\n            $jscomp.number.EPSILON = function () {\r\n                return Math.pow(2, -52);\r\n            }();\r\n            $jscomp.number.MAX_SAFE_INTEGER = function () {\r\n                return 9007199254740991;\r\n            }();\r\n            $jscomp.number.MIN_SAFE_INTEGER = function () {\r\n                return -9007199254740991;\r\n            }();\r\n            $jscomp.object = $jscomp.object || {};\r\n            $jscomp.object.assign = function (a, b) {\r\n                for (var c = 1; c < arguments.length; c++) {\r\n                    var d = arguments[c];\r\n                    if (d) for (var e in d) Object.prototype.hasOwnProperty.call(d, e) && (a[e] = d[e]);\r\n                }\r\n                return a;\r\n            };\r\n            $jscomp.object.is = function (a, b) {\r\n                return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;\r\n            };\r\n            $jscomp.ASSUME_NO_NATIVE_SET = !1;\r\n            $jscomp.Set$isConformant = function () {\r\n                if ($jscomp.ASSUME_NO_NATIVE_SET) return !1;\r\n                var a = $jscomp.global.Set;\r\n                if (!a || !a.prototype.entries || \"function\" != typeof Object.seal) return !1;\r\n                try {\r\n                    var b = Object.seal({x: 4}), c = new a($jscomp.makeIterator([b]));\r\n                    if (!c.has(b) || 1 != c.size || c.add(b) != c || 1 != c.size || c.add({x: 4}) != c || 2 != c.size) return !1;\r\n                    var d = c.entries(), e = d.next();\r\n                    if (e.done || e.value[0] != b || e.value[1] != b) return !1;\r\n                    e = d.next();\r\n                    return e.done || e.value[0] == b || 4 != e.value[0].x || e.value[1] != e.value[0] ? !1 : d.next().done;\r\n                } catch (f) {\r\n                    return !1;\r\n                }\r\n            };\r\n            $jscomp.Set = function (a) {\r\n                this.map_ = new $jscomp.Map;\r\n                if (a) {\r\n                    a = $jscomp.makeIterator(a);\r\n                    for (var b; !(b = a.next()).done;) this.add(b.value);\r\n                }\r\n                this.size = this.map_.size;\r\n            };\r\n            $jscomp.Set.prototype.add = function (a) {\r\n                this.map_.set(a, a);\r\n                this.size = this.map_.size;\r\n                return this;\r\n            };\r\n            $jscomp.Set.prototype[\"delete\"] = function (a) {\r\n                a = this.map_[\"delete\"](a);\r\n                this.size = this.map_.size;\r\n                return a;\r\n            };\r\n            $jscomp.Set.prototype.clear = function () {\r\n                this.map_.clear();\r\n                this.size = 0;\r\n            };\r\n            $jscomp.Set.prototype.has = function (a) {\r\n                return this.map_.has(a);\r\n            };\r\n            $jscomp.Set.prototype.entries = function () {\r\n                return this.map_.entries();\r\n            };\r\n            $jscomp.Set.prototype.values = function () {\r\n                return this.map_.values();\r\n            };\r\n            $jscomp.Set.prototype.forEach = function (a, b) {\r\n                var c = this;\r\n                this.map_.forEach(function (d) {\r\n                    return a.call(b, d, d, c);\r\n                });\r\n            };\r\n            $jscomp.Set$install = function () {\r\n                $jscomp.Map$install();\r\n                $jscomp.Set$isConformant() ? $jscomp.Set = $jscomp.global.Set : ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), $jscomp.Set.prototype[Symbol.iterator] = $jscomp.Set.prototype.values, $jscomp.Set$install = function () {\r\n                });\r\n            };\r\n            $jscomp.string = $jscomp.string || {};\r\n            $jscomp.checkStringArgs = function (a, b, c) {\r\n                if (null == a) throw new TypeError(\"The 'this' value for String.prototype.\" + c + \" must not be null or undefined\");\r\n                if (b instanceof RegExp) throw new TypeError(\"First argument to String.prototype.\" + c + \" must not be a regular expression\");\r\n                return a + \"\";\r\n            };\r\n            $jscomp.string.fromCodePoint = function (a) {\r\n                for (var b = \"\", c = 0; c < arguments.length; c++) {\r\n                    var d = Number(arguments[c]);\r\n                    if (0 > d || 1114111 < d || d !== Math.floor(d)) throw new RangeError(\"invalid_code_point \" + d);\r\n                    65535 >= d ? b += String.fromCharCode(d) : (d -= 65536, b += String.fromCharCode(d >>> 10 & 1023 | 55296), b += String.fromCharCode(d & 1023 | 56320));\r\n                }\r\n                return b;\r\n            };\r\n            $jscomp.string.repeat = function (a) {\r\n                var b = $jscomp.checkStringArgs(this, null, \"repeat\");\r\n                if (0 > a || 1342177279 < a) throw new RangeError(\"Invalid count value\");\r\n                a |= 0;\r\n                for (var c = \"\"; a;) if (a & 1 && (c += b), a >>>= 1) b += b;\r\n                return c;\r\n            };\r\n            $jscomp.string.repeat$install = function () {\r\n                String.prototype.repeat || (String.prototype.repeat = $jscomp.string.repeat);\r\n            };\r\n            $jscomp.string.codePointAt = function (a) {\r\n                var b = $jscomp.checkStringArgs(this, null, \"codePointAt\"), c = b.length;\r\n                a = Number(a) || 0;\r\n                if (0 <= a && a < c) {\r\n                    a |= 0;\r\n                    var d = b.charCodeAt(a);\r\n                    if (55296 > d || 56319 < d || a + 1 === c) return d;\r\n                    a = b.charCodeAt(a + 1);\r\n                    return 56320 > a || 57343 < a ? d : 1024 * (d - 55296) + a + 9216;\r\n                }\r\n            };\r\n            $jscomp.string.codePointAt$install = function () {\r\n                String.prototype.codePointAt || (String.prototype.codePointAt = $jscomp.string.codePointAt);\r\n            };\r\n            $jscomp.string.includes = function (a, b) {\r\n                return -1 !== $jscomp.checkStringArgs(this, a, \"includes\").indexOf(a, b || 0);\r\n            };\r\n            $jscomp.string.includes$install = function () {\r\n                String.prototype.includes || (String.prototype.includes = $jscomp.string.includes);\r\n            };\r\n            $jscomp.string.startsWith = function (a, b) {\r\n                var c = $jscomp.checkStringArgs(this, a, \"startsWith\");\r\n                a += \"\";\r\n                for (var d = c.length, e = a.length, f = Math.max(0, Math.min(b | 0, c.length)), g = 0; g < e && f < d;) if (c[f++] != a[g++]) return !1;\r\n                return g >= e;\r\n            };\r\n            $jscomp.string.startsWith$install = function () {\r\n                String.prototype.startsWith || (String.prototype.startsWith = $jscomp.string.startsWith);\r\n            };\r\n            $jscomp.string.endsWith = function (a, b) {\r\n                var c = $jscomp.checkStringArgs(this, a, \"endsWith\");\r\n                a += \"\";\r\n                void 0 === b && (b = c.length);\r\n                for (var d = Math.max(0, Math.min(b | 0, c.length)), e = a.length; 0 < e && 0 < d;) if (c[--d] != a[--e]) return !1;\r\n                return 0 >= e;\r\n            };\r\n            $jscomp.string.endsWith$install = function () {\r\n                String.prototype.endsWith || (String.prototype.endsWith = $jscomp.string.endsWith);\r\n            };\r\n            var COMPILED = !0, goog = goog || {};\r\n            goog.global = this;\r\n            goog.isDef = function (a) {\r\n                return void 0 !== a;\r\n            };\r\n            goog.exportPath_ = function (a, b, c) {\r\n                a = a.split(\".\");\r\n                c = c || goog.global;\r\n                a[0] in c || !c.execScript || c.execScript(\"var \" + a[0]);\r\n                for (var d; a.length && (d = a.shift());) !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};\r\n            };\r\n            goog.define = function (a, b) {\r\n                var c = b;\r\n                COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));\r\n                goog.exportPath_(a, c);\r\n            };\r\n            goog.DEBUG = !0;\r\n            goog.LOCALE = \"en\";\r\n            goog.TRUSTED_SITE = !0;\r\n            goog.STRICT_MODE_COMPATIBLE = !1;\r\n            goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;\r\n            goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\r\n            goog.provide = function (a) {\r\n                if (!COMPILED && goog.isProvided_(a)) throw Error(\"Namespace \\\"\" + a + \"\\\" already declared.\");\r\n                goog.constructNamespace_(a);\r\n            };\r\n            goog.constructNamespace_ = function (a, b) {\r\n                if (!COMPILED) {\r\n                    delete goog.implicitNamespaces_[a];\r\n                    for (var c = a; (c = c.substring(0, c.lastIndexOf(\".\"))) && !goog.getObjectByName(c);) goog.implicitNamespaces_[c] = !0;\r\n                }\r\n                goog.exportPath_(a, b);\r\n            };\r\n            goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\r\n            goog.module = function (a) {\r\n                if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) throw Error(\"Invalid module identifier\");\r\n                if (!goog.isInModuleLoader_()) throw Error(\"Module \" + a + \" has been loaded incorrectly.\");\r\n                if (goog.moduleLoaderState_.moduleName) throw Error(\"goog.module may only be called once per module.\");\r\n                goog.moduleLoaderState_.moduleName = a;\r\n                if (!COMPILED) {\r\n                    if (goog.isProvided_(a)) throw Error(\"Namespace \\\"\" + a + \"\\\" already declared.\");\r\n                    delete goog.implicitNamespaces_[a];\r\n                }\r\n            };\r\n            goog.module.get = function (a) {\r\n                return goog.module.getInternal_(a);\r\n            };\r\n            goog.module.getInternal_ = function (a) {\r\n                if (!COMPILED) return goog.isProvided_(a) ? a in goog.loadedModules_ ? goog.loadedModules_[a] : goog.getObjectByName(a) : null;\r\n            };\r\n            goog.moduleLoaderState_ = null;\r\n            goog.isInModuleLoader_ = function () {\r\n                return null != goog.moduleLoaderState_;\r\n            };\r\n            goog.module.declareLegacyNamespace = function () {\r\n                if (!COMPILED && !goog.isInModuleLoader_()) throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");\r\n                if (!COMPILED && !goog.moduleLoaderState_.moduleName) throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");\r\n                goog.moduleLoaderState_.declareLegacyNamespace = !0;\r\n            };\r\n            goog.setTestOnly = function (a) {\r\n                if (goog.DISALLOW_TEST_ONLY_CODE) throw a = a || \"\", Error(\"Importing test-only code into non-debug environment\" + (a ? \": \" + a : \".\"));\r\n            };\r\n            goog.forwardDeclare = function (a) {\r\n            };\r\n            COMPILED || (goog.isProvided_ = function (a) {\r\n                return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\r\n            }, goog.implicitNamespaces_ = {\"goog.module\": !0});\r\n            goog.getObjectByName = function (a, b) {\r\n                for (var c = a.split(\".\"), d = b || goog.global, e; e = c.shift();) if (goog.isDefAndNotNull(d[e])) d = d[e]; else return null;\r\n                return d;\r\n            };\r\n            goog.globalize = function (a, b) {\r\n                var c = b || goog.global, d;\r\n                for (d in a) c[d] = a[d];\r\n            };\r\n            goog.addDependency = function (a, b, c, d) {\r\n                if (goog.DEPENDENCIES_ENABLED) {\r\n                    var e;\r\n                    a = a.replace(/\\\\/g, \"/\");\r\n                    for (var f = goog.dependencies_, g = 0; e = b[g]; g++) f.nameToPath[e] = a, f.pathIsModule[a] = !!d;\r\n                    for (d = 0; b = c[d]; d++) a in f._requires || (f._requires[a] = {}), f._requires[a][b] = !0;\r\n                }\r\n            };\r\n            goog.ENABLE_DEBUG_LOADER = !0;\r\n            goog.logToConsole_ = function (a) {\r\n                goog.global.console && goog.global.console.error(a);\r\n            };\r\n            goog._require = function (a) {\r\n                if (!COMPILED) {\r\n                    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);\r\n                    if (goog.isProvided_(a)) return goog.isInModuleLoader_() ? goog.module.getInternal_(a) : null;\r\n                    if (goog.ENABLE_DEBUG_LOADER) {\r\n                        var b = goog.getPathFromDeps_(a);\r\n                        if (b) return goog.writeScripts_(b), null;\r\n                    }\r\n                    a = \"goog._require could not find: \" + a;\r\n                    goog.logToConsole_(a);\r\n                    throw Error(a);\r\n                }\r\n            };\r\n            goog.basePath = \"\";\r\n            goog.nullFunction = function () {\r\n            };\r\n            goog.abstractMethod = function () {\r\n                throw Error(\"unimplemented abstract method\");\r\n            };\r\n            goog.addSingletonGetter = function (a) {\r\n                a.getInstance = function () {\r\n                    if (a.instance_) return a.instance_;\r\n                    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\r\n                    return a.instance_ = new a;\r\n                };\r\n            };\r\n            goog.instantiatedSingletons_ = [];\r\n            goog.LOAD_MODULE_USING_EVAL = !0;\r\n            goog.SEAL_MODULE_EXPORTS = goog.DEBUG;\r\n            goog.loadedModules_ = {};\r\n            goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\r\n            goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {\r\n                pathIsModule: {},\r\n                nameToPath: {},\r\n                _requires: {},\r\n                visited: {},\r\n                written: {},\r\n                deferred: {}\r\n            }, goog.inHtmlDocument_ = function () {\r\n                var a = goog.global.document;\r\n                return null != a && \"write\" in a;\r\n            }, goog.findBasePath_ = function () {\r\n                if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) goog.basePath = goog.global.CLOSURE_BASE_PATH; else if (goog.inHtmlDocument_()) for (var a = goog.global.document.getElementsByTagName(\"SCRIPT\"), b = a.length - 1; 0 <= b; --b) {\r\n                    var c = a[b].src, d = c.lastIndexOf(\"?\"), d = -1 == d ? c.length :\r\n                        d;\r\n                    if (\"base.js\" == c.substr(d - 7, 7)) {\r\n                        goog.basePath = c.substr(0, d - 7);\r\n                        break;\r\n                    }\r\n                }\r\n            }, goog.importScript_ = function (a, b) {\r\n                (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);\r\n            }, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importModule_ = function (a) {\r\n                goog.importScript_(\"\", \"goog.retrieveAndExecModule_(\\\"\" + a + \"\\\");\") && (goog.dependencies_.written[a] = !0);\r\n            }, goog.queuedModules_ = [], goog.wrapModule_ = function (a, b) {\r\n                return goog.LOAD_MODULE_USING_EVAL &&\r\n                goog.isDef(goog.global.JSON) ? \"goog.loadModule(\" + goog.global.JSON.stringify(b + \"\\n//# sourceURL=\" + a + \"\\n\") + \");\" : \"goog.loadModule(function(exports) {\\\"use strict\\\";\" + b + \"\\n;return exports});\\n//# sourceURL=\" + a + \"\\n\";\r\n            }, goog.loadQueuedModules_ = function () {\r\n                var a = goog.queuedModules_.length;\r\n                if (0 < a) {\r\n                    var b = goog.queuedModules_;\r\n                    goog.queuedModules_ = [];\r\n                    for (var c = 0; c < a; c++) goog.maybeProcessDeferredPath_(b[c]);\r\n                }\r\n            }, goog.maybeProcessDeferredDep_ = function (a) {\r\n                goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a),\r\n                goog.maybeProcessDeferredPath_(goog.basePath + a));\r\n            }, goog.isDeferredModule_ = function (a) {\r\n                return (a = goog.getPathFromDeps_(a)) && goog.dependencies_.pathIsModule[a] ? goog.basePath + a in goog.dependencies_.deferred : !1;\r\n            }, goog.allDepsAreAvailable_ = function (a) {\r\n                if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_._requires) for (var b in goog.dependencies_._requires[a]) if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) return !1;\r\n                return !0;\r\n            }, goog.maybeProcessDeferredPath_ = function (a) {\r\n                if (a in goog.dependencies_.deferred) {\r\n                    var b =\r\n                        goog.dependencies_.deferred[a];\r\n                    delete goog.dependencies_.deferred[a];\r\n                    goog.globalEval(b);\r\n                }\r\n            }, goog.loadModuleFromUrl = function (a) {\r\n                goog.retrieveAndExecModule_(a);\r\n            }, goog.loadModule = function (a) {\r\n                var b = goog.moduleLoaderState_;\r\n                try {\r\n                    goog.moduleLoaderState_ = {moduleName: void 0, declareLegacyNamespace: !1};\r\n                    var c;\r\n                    if (goog.isFunction(a)) c = a.call(goog.global, {}); else if (goog.isString(a)) c = goog.loadModuleFromSource_.call(goog.global, a); else throw Error(\"Invalid module definition\");\r\n                    var d = goog.moduleLoaderState_.moduleName;\r\n                    if (!goog.isString(d) || !d) throw Error(\"Invalid module name \\\"\" + d + \"\\\"\");\r\n                    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && Object.seal(c);\r\n                    goog.loadedModules_[d] = c;\r\n                } finally {\r\n                    goog.moduleLoaderState_ = b;\r\n                }\r\n            }, goog.loadModuleFromSource_ = function (a) {\r\n                eval(a);\r\n                return {};\r\n            }, goog.writeScriptSrcNode_ = function (a) {\r\n                goog.global.document.write(\"<script type=\\\"text/javascript\\\" src=\\\"\" + a + \"\\\">\\x3c/script>\");\r\n            }, goog.appendScriptSrcNode_ = function (a) {\r\n                var b = goog.global.document,\r\n                    c = b.createElement(\"script\");\r\n                c.type = \"text/javascript\";\r\n                c.src = a;\r\n                c.defer = !1;\r\n                c.async = !1;\r\n                b.head.appendChild(c);\r\n            }, goog.writeScriptTag_ = function (a, b) {\r\n                if (goog.inHtmlDocument_()) {\r\n                    var c = goog.global.document;\r\n                    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && \"complete\" == c.readyState) {\r\n                        if (/\\bdeps.js$/.test(a)) return !1;\r\n                        throw Error(\"Cannot write \\\"\" + a + \"\\\" after document load\");\r\n                    }\r\n                    var d = goog.IS_OLD_IE_;\r\n                    void 0 === b ? d ? (d = \" onreadystatechange='goog.onScriptLoad_(this, \" + ++goog.lastNonModuleScriptIndex_ + \")' \", c.write(\"<script type=\\\"text/javascript\\\" src=\\\"\" +\r\n                        a + \"\\\"\" + d + \">\\x3c/script>\")) : goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a) : c.write(\"<script type=\\\"text/javascript\\\">\" + b + \"\\x3c/script>\");\r\n                    return !0;\r\n                }\r\n                return !1;\r\n            }, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function (a, b) {\r\n                \"complete\" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();\r\n                return !0;\r\n            }, goog.writeScripts_ = function (a) {\r\n                function b(a) {\r\n                    if (!(a in e.written || a in e.visited)) {\r\n                        e.visited[a] = !0;\r\n                        if (a in e._requires) for (var f in e._requires[a]) if (!goog.isProvided_(f)) if (f in\r\n                            e.nameToPath) b(e.nameToPath[f]); else throw Error(\"Undefined nameToPath for \" + f);\r\n                        a in d || (d[a] = !0, c.push(a));\r\n                    }\r\n                }\r\n\r\n                var c = [], d = {}, e = goog.dependencies_;\r\n                b(a);\r\n                for (a = 0; a < c.length; a++) {\r\n                    var f = c[a];\r\n                    goog.dependencies_.written[f] = !0;\r\n                }\r\n                var g = goog.moduleLoaderState_;\r\n                goog.moduleLoaderState_ = null;\r\n                for (a = 0; a < c.length; a++) if (f = c[a]) e.pathIsModule[f] ? goog.importModule_(goog.basePath + f) : goog.importScript_(goog.basePath + f); else throw goog.moduleLoaderState_ = g, Error(\"Undefined script input\");\r\n                goog.moduleLoaderState_ = g;\r\n            }, goog.getPathFromDeps_ =\r\n                function (a) {\r\n                    return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;\r\n                }, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + \"deps.js\"));\r\n            goog.normalizePath_ = function (a) {\r\n                a = a.split(\"/\");\r\n                for (var b = 0; b < a.length;) \".\" == a[b] ? a.splice(b, 1) : b && \"..\" == a[b] && a[b - 1] && \"..\" != a[b - 1] ? a.splice(--b, 2) : b++;\r\n                return a.join(\"/\");\r\n            };\r\n            goog.loadFileSync_ = function (a) {\r\n                if (goog.global.CLOSURE_LOAD_FILE_SYNC) return goog.global.CLOSURE_LOAD_FILE_SYNC(a);\r\n                var b = new goog.global.XMLHttpRequest;\r\n                b.open(\"get\", a, !1);\r\n                b.send();\r\n                return b.responseText;\r\n            };\r\n            goog.retrieveAndExecModule_ = function (a) {\r\n                if (!COMPILED) {\r\n                    var b = a;\r\n                    a = goog.normalizePath_(a);\r\n                    var c = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, d = goog.loadFileSync_(a);\r\n                    if (null != d) d = goog.wrapModule_(a, d), goog.IS_OLD_IE_ ? (goog.dependencies_.deferred[b] = d, goog.queuedModules_.push(b)) : c(a, d); else throw Error(\"load of \" + a + \"failed\");\r\n                }\r\n            };\r\n            goog.typeOf = function (a) {\r\n                var b = typeof a;\r\n                if (\"object\" == b) if (a) {\r\n                    if (a instanceof Array) return \"array\";\r\n                    if (a instanceof Object) return b;\r\n                    var c = Object.prototype.toString.call(a);\r\n                    if (\"[object Window]\" == c) return \"object\";\r\n                    if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) return \"array\";\r\n                    if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) return \"function\";\r\n                } else return \"null\";\r\n                else if (\"function\" == b && \"undefined\" == typeof a.call) return \"object\";\r\n                return b;\r\n            };\r\n            goog.isNull = function (a) {\r\n                return null === a;\r\n            };\r\n            goog.isDefAndNotNull = function (a) {\r\n                return null != a;\r\n            };\r\n            goog.isArray = function (a) {\r\n                return \"array\" == goog.typeOf(a);\r\n            };\r\n            goog.isArrayLike = function (a) {\r\n                var b = goog.typeOf(a);\r\n                return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\r\n            };\r\n            goog.isDateLike = function (a) {\r\n                return goog.isObject(a) && \"function\" == typeof a.getFullYear;\r\n            };\r\n            goog.isString = function (a) {\r\n                return \"string\" == typeof a;\r\n            };\r\n            goog.isBoolean = function (a) {\r\n                return \"boolean\" == typeof a;\r\n            };\r\n            goog.isNumber = function (a) {\r\n                return \"number\" == typeof a;\r\n            };\r\n            goog.isFunction = function (a) {\r\n                return \"function\" == goog.typeOf(a);\r\n            };\r\n            goog.isObject = function (a) {\r\n                var b = typeof a;\r\n                return \"object\" == b && null != a || \"function\" == b;\r\n            };\r\n            goog.getUid = function (a) {\r\n                return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\r\n            };\r\n            goog.hasUid = function (a) {\r\n                return !!a[goog.UID_PROPERTY_];\r\n            };\r\n            goog.removeUid = function (a) {\r\n                null !== a && \"removeAttribute\" in a && a.removeAttribute(goog.UID_PROPERTY_);\r\n                try {\r\n                    delete a[goog.UID_PROPERTY_];\r\n                } catch (b) {\r\n                }\r\n            };\r\n            goog.UID_PROPERTY_ = \"closure_uid_\" + (1E9 * Math.random() >>> 0);\r\n            goog.uidCounter_ = 0;\r\n            goog.getHashCode = goog.getUid;\r\n            goog.removeHashCode = goog.removeUid;\r\n            goog.cloneObject = function (a) {\r\n                var b = goog.typeOf(a);\r\n                if (\"object\" == b || \"array\" == b) {\r\n                    if (a.clone) return a.clone();\r\n                    var b = \"array\" == b ? [] : {}, c;\r\n                    for (c in a) b[c] = goog.cloneObject(a[c]);\r\n                    return b;\r\n                }\r\n                return a;\r\n            };\r\n            goog.bindNative_ = function (a, b, c) {\r\n                return a.call.apply(a.bind, arguments);\r\n            };\r\n            goog.bindJs_ = function (a, b, c) {\r\n                if (!a) throw Error();\r\n                if (2 < arguments.length) {\r\n                    var d = Array.prototype.slice.call(arguments, 2);\r\n                    return function () {\r\n                        var c = Array.prototype.slice.call(arguments);\r\n                        Array.prototype.unshift.apply(c, d);\r\n                        return a.apply(b, c);\r\n                    };\r\n                }\r\n                return function () {\r\n                    return a.apply(b, arguments);\r\n                };\r\n            };\r\n            goog.bind = function (a, b, c) {\r\n                Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\r\n                return goog.bind.apply(null, arguments);\r\n            };\r\n            goog.partial = function (a, b) {\r\n                var c = Array.prototype.slice.call(arguments, 1);\r\n                return function () {\r\n                    var b = c.slice();\r\n                    b.push.apply(b, arguments);\r\n                    return a.apply(this, b);\r\n                };\r\n            };\r\n            goog.mixin = function (a, b) {\r\n                for (var c in b) a[c] = b[c];\r\n            };\r\n            goog.now = goog.TRUSTED_SITE && Date.now || function () {\r\n                return +new Date;\r\n            };\r\n            goog.globalEval = function (a) {\r\n                if (goog.global.execScript) goog.global.execScript(a, \"JavaScript\"); else if (goog.global.eval) {\r\n                    if (null == goog.evalWorksForGlobals_) if (goog.global.eval(\"var _evalTest_ = 1;\"), \"undefined\" != typeof goog.global._evalTest_) {\r\n                        try {\r\n                            delete goog.global._evalTest_;\r\n                        } catch (d) {\r\n                        }\r\n                        goog.evalWorksForGlobals_ = !0;\r\n                    } else goog.evalWorksForGlobals_ = !1;\r\n                    if (goog.evalWorksForGlobals_) goog.global.eval(a); else {\r\n                        var b = goog.global.document, c = b.createElement(\"SCRIPT\");\r\n                        c.type = \"text/javascript\";\r\n                        c.defer = !1;\r\n                        c.appendChild(b.createTextNode(a));\r\n                        b.body.appendChild(c);\r\n                        b.body.removeChild(c);\r\n                    }\r\n                } else throw Error(\"goog.globalEval not available\");\r\n            };\r\n            goog.evalWorksForGlobals_ = null;\r\n            goog.getCssName = function (a, b) {\r\n                var c = function (a) {\r\n                        return goog.cssNameMapping_[a] || a;\r\n                    }, d = function (a) {\r\n                        a = a.split(\"-\");\r\n                        for (var b = [], d = 0; d < a.length; d++) b.push(c(a[d]));\r\n                        return b.join(\"-\");\r\n                    }, d = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? c : d : function (a) {\r\n                        return a;\r\n                    };\r\n                return b ? a + \"-\" + d(b) : d(a);\r\n            };\r\n            goog.setCssNameMapping = function (a, b) {\r\n                goog.cssNameMapping_ = a;\r\n                goog.cssNameMappingStyle_ = b;\r\n            };\r\n            !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\r\n            goog.getMsg = function (a, b) {\r\n                b && (a = a.replace(/\\{\\$([^}]+)}/g, function (a, d) {\r\n                    return null != b && d in b ? b[d] : a;\r\n                }));\r\n                return a;\r\n            };\r\n            goog.getMsgWithFallback = function (a, b) {\r\n                return a;\r\n            };\r\n            goog.exportSymbol = function (a, b, c) {\r\n                goog.exportPath_(a, b, c);\r\n            };\r\n            goog.exportProperty = function (a, b, c) {\r\n                a[b] = c;\r\n            };\r\n            goog.inherits = function (a, b) {\r\n                function c() {\r\n                }\r\n\r\n                c.prototype = b.prototype;\r\n                a.superClass_ = b.prototype;\r\n                a.prototype = new c;\r\n                a.prototype.constructor = a;\r\n                a.base = function (a, c, f) {\r\n                    for (var g = Array(arguments.length - 2), h = 2; h < arguments.length; h++) g[h - 2] = arguments[h];\r\n                    return b.prototype[c].apply(a, g);\r\n                };\r\n            };\r\n            goog.base = function (a, b, c) {\r\n                var d = arguments.callee.caller;\r\n                if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");\r\n                if (d.superClass_) {\r\n                    for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++) e[f - 1] = arguments[f];\r\n                    return d.superClass_.constructor.apply(a, e);\r\n                }\r\n                e = Array(arguments.length - 2);\r\n                for (f = 2; f < arguments.length; f++) e[f - 2] = arguments[f];\r\n                for (var f = !1, g = a.constructor; g; g =\r\n                    g.superClass_ && g.superClass_.constructor) if (g.prototype[b] === d) f = !0; else if (f) return g.prototype[b].apply(a, e);\r\n                if (a[b] === d) return a.constructor.prototype[b].apply(a, e);\r\n                throw Error(\"goog.base called from a method of one name to a method of a different name\");\r\n            };\r\n            goog.scope = function (a) {\r\n                a.call(goog.global);\r\n            };\r\n            COMPILED || (goog.global.COMPILED = COMPILED);\r\n            goog.defineClass = function (a, b) {\r\n                var c = b.constructor, d = b.statics;\r\n                c && c != Object.prototype.constructor || (c = function () {\r\n                    throw Error(\"cannot instantiate an interface (no constructor defined).\");\r\n                });\r\n                c = goog.defineClass.createSealingConstructor_(c, a);\r\n                a && goog.inherits(c, a);\r\n                delete b.constructor;\r\n                delete b.statics;\r\n                goog.defineClass.applyProperties_(c.prototype, b);\r\n                null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));\r\n                return c;\r\n            };\r\n            goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\r\n            goog.defineClass.createSealingConstructor_ = function (a, b) {\r\n                if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {\r\n                    if (b && b.prototype && b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) return a;\r\n                    var c = function () {\r\n                        var b = a.apply(this, arguments) || this;\r\n                        b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];\r\n                        this.constructor === c && Object.seal(b);\r\n                        return b;\r\n                    };\r\n                    return c;\r\n                }\r\n                return a;\r\n            };\r\n            goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\n            goog.defineClass.applyProperties_ = function (a, b) {\r\n                for (var c in b) Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n                for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n            };\r\n            goog.tagUnsealableClass = function (a) {\r\n                !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);\r\n            };\r\n            goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = \"goog_defineClass_legacy_unsealable\";\r\n            goog.dom = {};\r\n            goog.dom.NodeType = {\r\n                ELEMENT: 1,\r\n                ATTRIBUTE: 2,\r\n                TEXT: 3,\r\n                CDATA_SECTION: 4,\r\n                ENTITY_REFERENCE: 5,\r\n                ENTITY: 6,\r\n                PROCESSING_INSTRUCTION: 7,\r\n                COMMENT: 8,\r\n                DOCUMENT: 9,\r\n                DOCUMENT_TYPE: 10,\r\n                DOCUMENT_FRAGMENT: 11,\r\n                NOTATION: 12\r\n            };\r\n            goog.debug = {};\r\n            goog.debug.Error = function (a) {\r\n                if (Error.captureStackTrace) Error.captureStackTrace(this, goog.debug.Error); else {\r\n                    var b = Error().stack;\r\n                    b && (this.stack = b);\r\n                }\r\n                a && (this.message = String(a));\r\n                this.reportErrorToServer = !0;\r\n            };\r\n            goog.inherits(goog.debug.Error, Error);\r\n            goog.debug.Error.prototype.name = \"CustomError\";\r\n            goog.string = {};\r\n            goog.string.DETECT_DOUBLE_ESCAPING = !1;\r\n            goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;\r\n            goog.string.Unicode = {NBSP: \"\\u00a0\"};\r\n            goog.string.startsWith = function (a, b) {\r\n                return 0 == a.lastIndexOf(b, 0);\r\n            };\r\n            goog.string.endsWith = function (a, b) {\r\n                var c = a.length - b.length;\r\n                return 0 <= c && a.indexOf(b, c) == c;\r\n            };\r\n            goog.string.caseInsensitiveStartsWith = function (a, b) {\r\n                return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));\r\n            };\r\n            goog.string.caseInsensitiveEndsWith = function (a, b) {\r\n                return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));\r\n            };\r\n            goog.string.caseInsensitiveEquals = function (a, b) {\r\n                return a.toLowerCase() == b.toLowerCase();\r\n            };\r\n            goog.string.subs = function (a, b) {\r\n                for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) d += c.shift() + e.shift();\r\n                return d + c.join(\"%s\");\r\n            };\r\n            goog.string.collapseWhitespace = function (a) {\r\n                return a.replace(/[\\s\\xa0]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\r\n            };\r\n            goog.string.isEmptyOrWhitespace = function (a) {\r\n                return /^[\\s\\xa0]*$/.test(a);\r\n            };\r\n            goog.string.isEmptyString = function (a) {\r\n                return 0 == a.length;\r\n            };\r\n            goog.string.isEmpty = goog.string.isEmptyOrWhitespace;\r\n            goog.string.isEmptyOrWhitespaceSafe = function (a) {\r\n                return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));\r\n            };\r\n            goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\r\n            goog.string.isBreakingWhitespace = function (a) {\r\n                return !/[^\\t\\n\\r ]/.test(a);\r\n            };\r\n            goog.string.isAlpha = function (a) {\r\n                return !/[^a-zA-Z]/.test(a);\r\n            };\r\n            goog.string.isNumeric = function (a) {\r\n                return !/[^0-9]/.test(a);\r\n            };\r\n            goog.string.isAlphaNumeric = function (a) {\r\n                return !/[^a-zA-Z0-9]/.test(a);\r\n            };\r\n            goog.string.isSpace = function (a) {\r\n                return \" \" == a;\r\n            };\r\n            goog.string.isUnicodeChar = function (a) {\r\n                return 1 == a.length && \" \" <= a && \"~\" >= a || \"\\u0080\" <= a && \"\\ufffd\" >= a;\r\n            };\r\n            goog.string.stripNewlines = function (a) {\r\n                return a.replace(/(\\r\\n|\\r|\\n)+/g, \" \");\r\n            };\r\n            goog.string.canonicalizeNewlines = function (a) {\r\n                return a.replace(/(\\r\\n|\\r|\\n)/g, \"\\n\");\r\n            };\r\n            goog.string.normalizeWhitespace = function (a) {\r\n                return a.replace(/\\xa0|\\s/g, \" \");\r\n            };\r\n            goog.string.normalizeSpaces = function (a) {\r\n                return a.replace(/\\xa0|[ \\t]+/g, \" \");\r\n            };\r\n            goog.string.collapseBreakingSpaces = function (a) {\r\n                return a.replace(/[\\t\\r\\n ]+/g, \" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \"\");\r\n            };\r\n            goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function (a) {\r\n                return a.trim();\r\n            } : function (a) {\r\n                return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\");\r\n            };\r\n            goog.string.trimLeft = function (a) {\r\n                return a.replace(/^[\\s\\xa0]+/, \"\");\r\n            };\r\n            goog.string.trimRight = function (a) {\r\n                return a.replace(/[\\s\\xa0]+$/, \"\");\r\n            };\r\n            goog.string.caseInsensitiveCompare = function (a, b) {\r\n                var c = String(a).toLowerCase(), d = String(b).toLowerCase();\r\n                return c < d ? -1 : c == d ? 0 : 1;\r\n            };\r\n            goog.string.numberAwareCompare_ = function (a, b, c) {\r\n                if (a == b) return 0;\r\n                if (!a) return -1;\r\n                if (!b) return 1;\r\n                for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {\r\n                    c = d[g];\r\n                    var h = e[g];\r\n                    if (c != h) return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;\r\n                }\r\n                return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;\r\n            };\r\n            goog.string.intAwareCompare = function (a, b) {\r\n                return goog.string.numberAwareCompare_(a, b, /\\d+|\\D+/g);\r\n            };\r\n            goog.string.floatAwareCompare = function (a, b) {\r\n                return goog.string.numberAwareCompare_(a, b, /\\d+|\\.\\d+|\\D+/g);\r\n            };\r\n            goog.string.numerateCompare = goog.string.floatAwareCompare;\r\n            goog.string.urlEncode = function (a) {\r\n                return encodeURIComponent(String(a));\r\n            };\r\n            goog.string.urlDecode = function (a) {\r\n                return decodeURIComponent(a.replace(/\\+/g, \" \"));\r\n            };\r\n            goog.string.newLineToBr = function (a, b) {\r\n                return a.replace(/(\\r\\n|\\r|\\n)/g, b ? \"<br />\" : \"<br>\");\r\n            };\r\n            goog.string.htmlEscape = function (a, b) {\r\n                if (b) a = a.replace(goog.string.AMP_RE_, \"&amp;\").replace(goog.string.LT_RE_, \"&lt;\").replace(goog.string.GT_RE_, \"&gt;\").replace(goog.string.QUOT_RE_, \"&quot;\").replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\").replace(goog.string.NULL_RE_, \"&#0;\"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, \"&#101;\")); else {\r\n                    if (!goog.string.ALL_RE_.test(a)) return a;\r\n                    -1 != a.indexOf(\"&\") && (a = a.replace(goog.string.AMP_RE_, \"&amp;\"));\r\n                    -1 != a.indexOf(\"<\") && (a = a.replace(goog.string.LT_RE_,\r\n                        \"&lt;\"));\r\n                    -1 != a.indexOf(\">\") && (a = a.replace(goog.string.GT_RE_, \"&gt;\"));\r\n                    -1 != a.indexOf(\"\\\"\") && (a = a.replace(goog.string.QUOT_RE_, \"&quot;\"));\r\n                    -1 != a.indexOf(\"'\") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\"));\r\n                    -1 != a.indexOf(\"\\x00\") && (a = a.replace(goog.string.NULL_RE_, \"&#0;\"));\r\n                    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf(\"e\") && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\r\n                }\r\n                return a;\r\n            };\r\n            goog.string.AMP_RE_ = /&/g;\r\n            goog.string.LT_RE_ = /</g;\r\n            goog.string.GT_RE_ = />/g;\r\n            goog.string.QUOT_RE_ = /\"/g;\r\n            goog.string.SINGLE_QUOTE_RE_ = /'/g;\r\n            goog.string.NULL_RE_ = /\\x00/g;\r\n            goog.string.E_RE_ = /e/g;\r\n            goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\\x00&<>\"'e]/ : /[\\x00&<>\"']/;\r\n            goog.string.unescapeEntities = function (a) {\r\n                return goog.string.contains(a, \"&\") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && \"document\" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;\r\n            };\r\n            goog.string.unescapeEntitiesWithDocument = function (a, b) {\r\n                return goog.string.contains(a, \"&\") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;\r\n            };\r\n            goog.string.unescapeEntitiesUsingDom_ = function (a, b) {\r\n                var c = {\"&amp;\": \"&\", \"&lt;\": \"<\", \"&gt;\": \">\", \"&quot;\": \"\\\"\"}, d;\r\n                d = b ? b.createElement(\"div\") : goog.global.document.createElement(\"div\");\r\n                return a.replace(goog.string.HTML_ENTITY_PATTERN_, function (a, b) {\r\n                    var g = c[a];\r\n                    if (g) return g;\r\n                    if (\"#\" == b.charAt(0)) {\r\n                        var h = Number(\"0\" + b.substr(1));\r\n                        isNaN(h) || (g = String.fromCharCode(h));\r\n                    }\r\n                    g || (d.innerHTML = a + \" \", g = d.firstChild.nodeValue.slice(0, -1));\r\n                    return c[a] = g;\r\n                });\r\n            };\r\n            goog.string.unescapePureXmlEntities_ = function (a) {\r\n                return a.replace(/&([^;]+);/g, function (a, c) {\r\n                    switch (c) {\r\n                    case \"amp\":\r\n                        return \"&\";\r\n                    case \"lt\":\r\n                        return \"<\";\r\n                    case \"gt\":\r\n                        return \">\";\r\n                    case \"quot\":\r\n                        return \"\\\"\";\r\n                    default:\r\n                        if (\"#\" == c.charAt(0)) {\r\n                            var d = Number(\"0\" + c.substr(1));\r\n                            if (!isNaN(d)) return String.fromCharCode(d);\r\n                        }\r\n                        return a;\r\n                    }\r\n                });\r\n            };\r\n            goog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\r\n            goog.string.whitespaceEscape = function (a, b) {\r\n                return goog.string.newLineToBr(a.replace(/ {2}/g, \" &#160;\"), b);\r\n            };\r\n            goog.string.preserveSpaces = function (a) {\r\n                return a.replace(/(^|[\\n ]) /g, \"$1\" + goog.string.Unicode.NBSP);\r\n            };\r\n            goog.string.stripQuotes = function (a, b) {\r\n                for (var c = b.length, d = 0; d < c; d++) {\r\n                    var e = 1 == c ? b : b.charAt(d);\r\n                    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) return a.substring(1, a.length - 1);\r\n                }\r\n                return a;\r\n            };\r\n            goog.string.truncate = function (a, b, c) {\r\n                c && (a = goog.string.unescapeEntities(a));\r\n                a.length > b && (a = a.substring(0, b - 3) + \"...\");\r\n                c && (a = goog.string.htmlEscape(a));\r\n                return a;\r\n            };\r\n            goog.string.truncateMiddle = function (a, b, c, d) {\r\n                c && (a = goog.string.unescapeEntities(a));\r\n                if (d && a.length > b) {\r\n                    d > b && (d = b);\r\n                    var e = a.length - d;\r\n                    a = a.substring(0, b - d) + \"...\" + a.substring(e);\r\n                } else a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + \"...\" + a.substring(e));\r\n                c && (a = goog.string.htmlEscape(a));\r\n                return a;\r\n            };\r\n            goog.string.specialEscapeChars_ = {\r\n                \"\\x00\": \"\\\\0\",\r\n                \"\\b\": \"\\\\b\",\r\n                \"\\f\": \"\\\\f\",\r\n                \"\\n\": \"\\\\n\",\r\n                \"\\r\": \"\\\\r\",\r\n                \"\\t\": \"\\\\t\",\r\n                \"\\x0B\": \"\\\\x0B\",\r\n                \"\\\"\": \"\\\\\\\"\",\r\n                \"\\\\\": \"\\\\\\\\\",\r\n                \"<\": \"<\"\r\n            };\r\n            goog.string.jsEscapeCache_ = {\"'\": \"\\\\'\"};\r\n            goog.string.quote = function (a) {\r\n                a = String(a);\r\n                for (var b = [\"\\\"\"], c = 0; c < a.length; c++) {\r\n                    var d = a.charAt(c), e = d.charCodeAt(0);\r\n                    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));\r\n                }\r\n                b.push(\"\\\"\");\r\n                return b.join(\"\");\r\n            };\r\n            goog.string.escapeString = function (a) {\r\n                for (var b = [], c = 0; c < a.length; c++) b[c] = goog.string.escapeChar(a.charAt(c));\r\n                return b.join(\"\");\r\n            };\r\n            goog.string.escapeChar = function (a) {\r\n                if (a in goog.string.jsEscapeCache_) return goog.string.jsEscapeCache_[a];\r\n                if (a in goog.string.specialEscapeChars_) return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];\r\n                var b, c = a.charCodeAt(0);\r\n                if (31 < c && 127 > c) b = a; else {\r\n                    if (256 > c) {\r\n                        if (b = \"\\\\x\", 16 > c || 256 < c) b += \"0\";\r\n                    } else b = \"\\\\u\", 4096 > c && (b += \"0\");\r\n                    b += c.toString(16).toUpperCase();\r\n                }\r\n                return goog.string.jsEscapeCache_[a] = b;\r\n            };\r\n            goog.string.contains = function (a, b) {\r\n                return -1 != a.indexOf(b);\r\n            };\r\n            goog.string.caseInsensitiveContains = function (a, b) {\r\n                return goog.string.contains(a.toLowerCase(), b.toLowerCase());\r\n            };\r\n            goog.string.countOf = function (a, b) {\r\n                return a && b ? a.split(b).length - 1 : 0;\r\n            };\r\n            goog.string.removeAt = function (a, b, c) {\r\n                var d = a;\r\n                0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));\r\n                return d;\r\n            };\r\n            goog.string.remove = function (a, b) {\r\n                var c = new RegExp(goog.string.regExpEscape(b), \"\");\r\n                return a.replace(c, \"\");\r\n            };\r\n            goog.string.removeAll = function (a, b) {\r\n                var c = new RegExp(goog.string.regExpEscape(b), \"g\");\r\n                return a.replace(c, \"\");\r\n            };\r\n            goog.string.regExpEscape = function (a) {\r\n                return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\").replace(/\\x08/g, \"\\\\x08\");\r\n            };\r\n            goog.string.repeat = String.prototype.repeat ? function (a, b) {\r\n                return a.repeat(b);\r\n            } : function (a, b) {\r\n                return Array(b + 1).join(a);\r\n            };\r\n            goog.string.padNumber = function (a, b, c) {\r\n                a = goog.isDef(c) ? a.toFixed(c) : String(a);\r\n                c = a.indexOf(\".\");\r\n                -1 == c && (c = a.length);\r\n                return goog.string.repeat(\"0\", Math.max(0, b - c)) + a;\r\n            };\r\n            goog.string.makeSafe = function (a) {\r\n                return null == a ? \"\" : String(a);\r\n            };\r\n            goog.string.buildString = function (a) {\r\n                return Array.prototype.join.call(arguments, \"\");\r\n            };\r\n            goog.string.getRandomString = function () {\r\n                return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);\r\n            };\r\n            goog.string.compareVersions = function (a, b) {\r\n                for (var c = 0, d = goog.string.trim(String(a)).split(\".\"), e = goog.string.trim(String(b)).split(\".\"), f = Math.max(d.length, e.length), g = 0; 0 == c && g < f; g++) {\r\n                    var h = d[g] || \"\", k = e[g] || \"\", l = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"),\r\n                        p = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\r\n                    do {\r\n                        var m = l.exec(h) || [\"\", \"\", \"\"], n = p.exec(k) || [\"\", \"\", \"\"];\r\n                        if (0 == m[0].length && 0 == n[0].length) break;\r\n                        var c = 0 == m[1].length ? 0 : parseInt(m[1], 10),\r\n                            q = 0 == n[1].length ? 0 : parseInt(n[1], 10),\r\n                            c = goog.string.compareElements_(c, q) || goog.string.compareElements_(0 ==\r\n                                m[2].length, 0 == n[2].length) || goog.string.compareElements_(m[2], n[2]);\r\n                    } while (0 == c);\r\n                }\r\n                return c;\r\n            };\r\n            goog.string.compareElements_ = function (a, b) {\r\n                return a < b ? -1 : a > b ? 1 : 0;\r\n            };\r\n            goog.string.hashCode = function (a) {\r\n                for (var b = 0, c = 0; c < a.length; ++c) b = 31 * b + a.charCodeAt(c) >>> 0;\r\n                return b;\r\n            };\r\n            goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;\r\n            goog.string.createUniqueString = function () {\r\n                return \"goog_\" + goog.string.uniqueStringCounter_++;\r\n            };\r\n            goog.string.toNumber = function (a) {\r\n                var b = Number(a);\r\n                return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;\r\n            };\r\n            goog.string.isLowerCamelCase = function (a) {\r\n                return /^[a-z]+([A-Z][a-z]*)*$/.test(a);\r\n            };\r\n            goog.string.isUpperCamelCase = function (a) {\r\n                return /^([A-Z][a-z]*)+$/.test(a);\r\n            };\r\n            goog.string.toCamelCase = function (a) {\r\n                return String(a).replace(/\\-([a-z])/g, function (a, c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            };\r\n            goog.string.toSelectorCase = function (a) {\r\n                return String(a).replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n            };\r\n            goog.string.toTitleCase = function (a, b) {\r\n                var c = goog.isString(b) ? goog.string.regExpEscape(b) : \"\\\\s\";\r\n                return a.replace(new RegExp(\"(^\" + (c ? \"|[\" + c + \"]+\" : \"\") + \")([a-z])\", \"g\"), function (a, b, c) {\r\n                    return b + c.toUpperCase();\r\n                });\r\n            };\r\n            goog.string.capitalize = function (a) {\r\n                return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();\r\n            };\r\n            goog.string.parseInt = function (a) {\r\n                isFinite(a) && (a = String(a));\r\n                return goog.isString(a) ? /^\\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;\r\n            };\r\n            goog.string.splitLimit = function (a, b, c) {\r\n                a = a.split(b);\r\n                for (var d = []; 0 < c && a.length;) d.push(a.shift()), c--;\r\n                a.length && d.push(a.join(b));\r\n                return d;\r\n            };\r\n            goog.string.editDistance = function (a, b) {\r\n                var c = [], d = [];\r\n                if (a == b) return 0;\r\n                if (!a.length || !b.length) return Math.max(a.length, b.length);\r\n                for (var e = 0; e < b.length + 1; e++) c[e] = e;\r\n                for (e = 0; e < a.length; e++) {\r\n                    d[0] = e + 1;\r\n                    for (var f = 0; f < b.length; f++) d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));\r\n                    for (f = 0; f < c.length; f++) c[f] = d[f];\r\n                }\r\n                return d[b.length];\r\n            };\r\n            goog.asserts = {};\r\n            goog.asserts.ENABLE_ASSERTS = goog.DEBUG;\r\n            goog.asserts.AssertionError = function (a, b) {\r\n                b.unshift(a);\r\n                goog.debug.Error.call(this, goog.string.subs.apply(null, b));\r\n                b.shift();\r\n                this.messagePattern = a;\r\n            };\r\n            goog.inherits(goog.asserts.AssertionError, goog.debug.Error);\r\n            goog.asserts.AssertionError.prototype.name = \"AssertionError\";\r\n            goog.asserts.DEFAULT_ERROR_HANDLER = function (a) {\r\n                throw a;\r\n            };\r\n            goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\r\n            goog.asserts.doAssertFailure_ = function (a, b, c, d) {\r\n                var e = \"Assertion failed\";\r\n                if (c) var e = e + (\": \" + c), f = d; else a && (e += \": \" + a, f = b);\r\n                a = new goog.asserts.AssertionError(\"\" + e, f || []);\r\n                goog.asserts.errorHandler_(a);\r\n            };\r\n            goog.asserts.setErrorHandler = function (a) {\r\n                goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);\r\n            };\r\n            goog.asserts.assert = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_(\"\", null, b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.fail = function (a, b) {\r\n                goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1)));\r\n            };\r\n            goog.asserts.assertNumber = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertString = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertFunction = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertObject = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertArray = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertBoolean = function (a, b, c) {\r\n                goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertElement = function (a, b, c) {\r\n                !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n                return a;\r\n            };\r\n            goog.asserts.assertInstanceof = function (a, b, c, d) {\r\n                !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));\r\n                return a;\r\n            };\r\n            goog.asserts.assertObjectPrototypeIsIntact = function () {\r\n                for (var a in Object.prototype) goog.asserts.fail(a + \" should not be enumerable in Object.prototype.\");\r\n            };\r\n            goog.asserts.getType_ = function (a) {\r\n                return a instanceof Function ? a.displayName || a.name || \"unknown type name\" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? \"null\" : typeof a;\r\n            };\r\n            var jspb = {\r\n                Map: function (a, b) {\r\n                    this.arr_ = a;\r\n                    this.valueCtor_ = b;\r\n                    this.map_ = {};\r\n                    this.arrClean = !0;\r\n                    0 < this.arr_.length && this.loadFromArray_();\r\n                }\r\n            };\r\n            jspb.Map.prototype.loadFromArray_ = function () {\r\n                for (var a = 0; a < this.arr_.length; a++) {\r\n                    var b = this.arr_[a], c = b[0];\r\n                    this.map_[c.toString()] = new jspb.Map.Entry_(c, b[1]);\r\n                }\r\n                this.arrClean = !0;\r\n            };\r\n            jspb.Map.prototype.toArray = function () {\r\n                if (this.arrClean) {\r\n                    if (this.valueCtor_) {\r\n                        var a = this.map_, b;\r\n                        for (b in a) if (Object.prototype.hasOwnProperty.call(a, b)) {\r\n                            var c = a[b].valueWrapper;\r\n                            c && c.toArray();\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.arr_.length = 0;\r\n                    a = this.stringKeys_();\r\n                    a.sort();\r\n                    for (b = 0; b < a.length; b++) {\r\n                        var d = this.map_[a[b]];\r\n                        (c = d.valueWrapper) && c.toArray();\r\n                        this.arr_.push([d.key, d.value]);\r\n                    }\r\n                    this.arrClean = !0;\r\n                }\r\n                return this.arr_;\r\n            };\r\n            jspb.Map.prototype.toObject = function (a, b) {\r\n                for (var c = this.toArray(), d = [], e = 0; e < c.length; e++) {\r\n                    var f = this.map_[c[e][0].toString()];\r\n                    this.wrapEntry_(f);\r\n                    var g = f.valueWrapper;\r\n                    g ? (goog.asserts.assert(b), d.push([f.key, b(a, g)])) : d.push([f.key, f.value]);\r\n                }\r\n                return d;\r\n            };\r\n            jspb.Map.fromObject = function (a, b, c) {\r\n                b = new jspb.Map([], b);\r\n                for (var d = 0; d < a.length; d++) {\r\n                    var e = a[d][0], f = c(a[d][1]);\r\n                    b.set(e, f);\r\n                }\r\n                return b;\r\n            };\r\n            jspb.Map.ArrayIteratorIterable_ = function (a) {\r\n                this.idx_ = 0;\r\n                this.arr_ = a;\r\n            };\r\n            jspb.Map.ArrayIteratorIterable_.prototype.next = function () {\r\n                return this.idx_ < this.arr_.length ? {done: !1, value: this.arr_[this.idx_++]} : {\r\n                    done: !0,\r\n                    value: void 0\r\n                };\r\n            };\r\n            $jscomp.initSymbol();\r\n            \"undefined\" != typeof Symbol && ($jscomp.initSymbol(), $jscomp.initSymbolIterator(), jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function () {\r\n                return this;\r\n            });\r\n            jspb.Map.prototype.getLength = function () {\r\n                return this.stringKeys_().length;\r\n            };\r\n            jspb.Map.prototype.clear = function () {\r\n                this.map_ = {};\r\n                this.arrClean = !1;\r\n            };\r\n            jspb.Map.prototype.del = function (a) {\r\n                a = a.toString();\r\n                var b = this.map_.hasOwnProperty(a);\r\n                delete this.map_[a];\r\n                this.arrClean = !1;\r\n                return b;\r\n            };\r\n            jspb.Map.prototype.getEntryList = function () {\r\n                var a = [], b = this.stringKeys_();\r\n                b.sort();\r\n                for (var c = 0; c < b.length; c++) {\r\n                    var d = this.map_[b[c]];\r\n                    a.push([d.key, d.value]);\r\n                }\r\n                return a;\r\n            };\r\n            jspb.Map.prototype.entries = function () {\r\n                var a = [], b = this.stringKeys_();\r\n                b.sort();\r\n                for (var c = 0; c < b.length; c++) {\r\n                    var d = this.map_[b[c]];\r\n                    a.push([d.key, this.wrapEntry_(d)]);\r\n                }\r\n                return new jspb.Map.ArrayIteratorIterable_(a);\r\n            };\r\n            jspb.Map.prototype.keys = function () {\r\n                var a = [], b = this.stringKeys_();\r\n                b.sort();\r\n                for (var c = 0; c < b.length; c++) a.push(this.map_[b[c]].key);\r\n                return new jspb.Map.ArrayIteratorIterable_(a);\r\n            };\r\n            jspb.Map.prototype.values = function () {\r\n                var a = [], b = this.stringKeys_();\r\n                b.sort();\r\n                for (var c = 0; c < b.length; c++) a.push(this.wrapEntry_(this.map_[b[c]]));\r\n                return new jspb.Map.ArrayIteratorIterable_(a);\r\n            };\r\n            jspb.Map.prototype.forEach = function (a, b) {\r\n                var c = this.stringKeys_();\r\n                c.sort();\r\n                for (var d = 0; d < c.length; d++) {\r\n                    var e = this.map_[c[d]];\r\n                    a.call(b, this.wrapEntry_(e), e.key, this);\r\n                }\r\n            };\r\n            jspb.Map.prototype.set = function (a, b) {\r\n                var c = new jspb.Map.Entry_(a);\r\n                this.valueCtor_ ? (c.valueWrapper = b, c.value = b.toArray()) : c.value = b;\r\n                this.map_[a.toString()] = c;\r\n                this.arrClean = !1;\r\n                return this;\r\n            };\r\n            jspb.Map.prototype.wrapEntry_ = function (a) {\r\n                return this.valueCtor_ ? (a.valueWrapper || (a.valueWrapper = new this.valueCtor_(a.value)), a.valueWrapper) : a.value;\r\n            };\r\n            jspb.Map.prototype.get = function (a) {\r\n                if (a = this.map_[a.toString()]) return this.wrapEntry_(a);\r\n            };\r\n            jspb.Map.prototype.has = function (a) {\r\n                return a.toString() in this.map_;\r\n            };\r\n            jspb.Map.prototype.serializeBinary = function (a, b, c, d, e) {\r\n                var f = this.stringKeys_();\r\n                f.sort();\r\n                for (var g = 0; g < f.length; g++) {\r\n                    var h = this.map_[f[g]];\r\n                    b.beginSubMessage(a);\r\n                    c.call(b, 1, h.key);\r\n                    this.valueCtor_ ? d.call(b, 2, this.wrapEntry_(h), e) : d.call(b, 2, h.value);\r\n                    b.endSubMessage();\r\n                }\r\n            };\r\n            jspb.Map.deserializeBinary = function (a, b, c, d, e) {\r\n                for (var f = void 0, g = void 0; b.nextField() && !b.isEndGroup();) {\r\n                    var h = b.getFieldNumber();\r\n                    1 == h ? f = c.call(b) : 2 == h && (a.valueCtor_ ? (g = new a.valueCtor_, d.call(b, g, e)) : g = d.call(b));\r\n                }\r\n                goog.asserts.assert(void 0 != f);\r\n                goog.asserts.assert(void 0 != g);\r\n                a.set(f, g);\r\n            };\r\n            jspb.Map.prototype.stringKeys_ = function () {\r\n                var a = this.map_, b = [], c;\r\n                for (c in a) Object.prototype.hasOwnProperty.call(a, c) && b.push(c);\r\n                return b;\r\n            };\r\n            jspb.Map.Entry_ = function (a, b) {\r\n                this.key = a;\r\n                this.value = b;\r\n                this.valueWrapper = void 0;\r\n            };\r\n            goog.array = {};\r\n            goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;\r\n            goog.array.ASSUME_NATIVE_FUNCTIONS = !1;\r\n            goog.array.peek = function (a) {\r\n                return a[a.length - 1];\r\n            };\r\n            goog.array.last = goog.array.peek;\r\n            goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.indexOf.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\r\n                if (goog.isString(a)) return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;\r\n                for (; c < a.length; c++) if (c in a && a[c] === b) return c;\r\n                return -1;\r\n            };\r\n            goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);\r\n            } : function (a, b, c) {\r\n                c = null == c ? a.length - 1 : c;\r\n                0 > c && (c = Math.max(0, a.length + c));\r\n                if (goog.isString(a)) return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;\r\n                for (; 0 <= c; c--) if (c in a && a[c] === b) return c;\r\n                return -1;\r\n            };\r\n            goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                Array.prototype.forEach.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) f in e && b.call(c, e[f], f, a);\r\n            };\r\n            goog.array.forEachRight = function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, d = d - 1; 0 <= d; --d) d in e && b.call(c, e[d], d, a);\r\n            };\r\n            goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.filter.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split(\"\") : a, h = 0; h < d; h++) if (h in g) {\r\n                    var k = g[h];\r\n                    b.call(c, k, h, a) && (e[f++] = k);\r\n                }\r\n                return e;\r\n            };\r\n            goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.map.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split(\"\") : a, g = 0; g < d; g++) g in f && (e[g] = b.call(c, f[g], g, a));\r\n                return e;\r\n            };\r\n            goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function (a, b, c, d) {\r\n                goog.asserts.assert(null != a.length);\r\n                d && (b = goog.bind(b, d));\r\n                return Array.prototype.reduce.call(a, b, c);\r\n            } : function (a, b, c, d) {\r\n                var e = c;\r\n                goog.array.forEach(a, function (c, g) {\r\n                    e = b.call(d, e, c, g, a);\r\n                });\r\n                return e;\r\n            };\r\n            goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function (a, b, c, d) {\r\n                goog.asserts.assert(null != a.length);\r\n                goog.asserts.assert(null != b);\r\n                d && (b = goog.bind(b, d));\r\n                return Array.prototype.reduceRight.call(a, b, c);\r\n            } : function (a, b, c, d) {\r\n                var e = c;\r\n                goog.array.forEachRight(a, function (c, g) {\r\n                    e = b.call(d, e, c, g, a);\r\n                });\r\n                return e;\r\n            };\r\n            goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.some.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && b.call(c, e[f], f, a)) return !0;\r\n                return !1;\r\n            };\r\n            goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.every.call(a, b, c);\r\n            } : function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && !b.call(c, e[f], f, a)) return !1;\r\n                return !0;\r\n            };\r\n            goog.array.count = function (a, b, c) {\r\n                var d = 0;\r\n                goog.array.forEach(a, function (a, f, g) {\r\n                    b.call(c, a, f, g) && ++d;\r\n                }, c);\r\n                return d;\r\n            };\r\n            goog.array.find = function (a, b, c) {\r\n                b = goog.array.findIndex(a, b, c);\r\n                return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n            };\r\n            goog.array.findIndex = function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && b.call(c, e[f], f, a)) return f;\r\n                return -1;\r\n            };\r\n            goog.array.findRight = function (a, b, c) {\r\n                b = goog.array.findIndexRight(a, b, c);\r\n                return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n            };\r\n            goog.array.findIndexRight = function (a, b, c) {\r\n                for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, d = d - 1; 0 <= d; d--) if (d in e && b.call(c, e[d], d, a)) return d;\r\n                return -1;\r\n            };\r\n            goog.array.contains = function (a, b) {\r\n                return 0 <= goog.array.indexOf(a, b);\r\n            };\r\n            goog.array.isEmpty = function (a) {\r\n                return 0 == a.length;\r\n            };\r\n            goog.array.clear = function (a) {\r\n                if (!goog.isArray(a)) for (var b = a.length - 1; 0 <= b; b--) delete a[b];\r\n                a.length = 0;\r\n            };\r\n            goog.array.insert = function (a, b) {\r\n                goog.array.contains(a, b) || a.push(b);\r\n            };\r\n            goog.array.insertAt = function (a, b, c) {\r\n                goog.array.splice(a, c, 0, b);\r\n            };\r\n            goog.array.insertArrayAt = function (a, b, c) {\r\n                goog.partial(goog.array.splice, a, c, 0).apply(null, b);\r\n            };\r\n            goog.array.insertBefore = function (a, b, c) {\r\n                var d;\r\n                2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);\r\n            };\r\n            goog.array.remove = function (a, b) {\r\n                var c = goog.array.indexOf(a, b), d;\r\n                (d = 0 <= c) && goog.array.removeAt(a, c);\r\n                return d;\r\n            };\r\n            goog.array.removeAt = function (a, b) {\r\n                goog.asserts.assert(null != a.length);\r\n                return 1 == Array.prototype.splice.call(a, b, 1).length;\r\n            };\r\n            goog.array.removeIf = function (a, b, c) {\r\n                b = goog.array.findIndex(a, b, c);\r\n                return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;\r\n            };\r\n            goog.array.removeAllIf = function (a, b, c) {\r\n                var d = 0;\r\n                goog.array.forEachRight(a, function (e, f) {\r\n                    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;\r\n                });\r\n                return d;\r\n            };\r\n            goog.array.concat = function (a) {\r\n                return Array.prototype.concat.apply(Array.prototype, arguments);\r\n            };\r\n            goog.array.join = function (a) {\r\n                return Array.prototype.concat.apply(Array.prototype, arguments);\r\n            };\r\n            goog.array.toArray = function (a) {\r\n                var b = a.length;\r\n                if (0 < b) {\r\n                    for (var c = Array(b), d = 0; d < b; d++) c[d] = a[d];\r\n                    return c;\r\n                }\r\n                return [];\r\n            };\r\n            goog.array.clone = goog.array.toArray;\r\n            goog.array.extend = function (a, b) {\r\n                for (var c = 1; c < arguments.length; c++) {\r\n                    var d = arguments[c];\r\n                    if (goog.isArrayLike(d)) {\r\n                        var e = a.length || 0, f = d.length || 0;\r\n                        a.length = e + f;\r\n                        for (var g = 0; g < f; g++) a[e + g] = d[g];\r\n                    } else a.push(d);\r\n                }\r\n            };\r\n            goog.array.splice = function (a, b, c, d) {\r\n                goog.asserts.assert(null != a.length);\r\n                return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));\r\n            };\r\n            goog.array.slice = function (a, b, c) {\r\n                goog.asserts.assert(null != a.length);\r\n                return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);\r\n            };\r\n            goog.array.removeDuplicates = function (a, b, c) {\r\n                b = b || a;\r\n                var d = function (a) {\r\n                    return goog.isObject(a) ? \"o\" + goog.getUid(a) : (typeof a).charAt(0) + a;\r\n                };\r\n                c = c || d;\r\n                for (var d = {}, e = 0, f = 0; f < a.length;) {\r\n                    var g = a[f++], h = c(g);\r\n                    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);\r\n                }\r\n                b.length = e;\r\n            };\r\n            goog.array.binarySearch = function (a, b, c) {\r\n                return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);\r\n            };\r\n            goog.array.binarySelect = function (a, b, c) {\r\n                return goog.array.binarySearch_(a, b, !0, void 0, c);\r\n            };\r\n            goog.array.binarySearch_ = function (a, b, c, d, e) {\r\n                for (var f = 0, g = a.length, h; f < g;) {\r\n                    var k = f + g >> 1, l;\r\n                    l = c ? b.call(e, a[k], k, a) : b(d, a[k]);\r\n                    0 < l ? f = k + 1 : (g = k, h = !l);\r\n                }\r\n                return h ? f : ~f;\r\n            };\r\n            goog.array.sort = function (a, b) {\r\n                a.sort(b || goog.array.defaultCompare);\r\n            };\r\n            goog.array.stableSort = function (a, b) {\r\n                for (var c = 0; c < a.length; c++) a[c] = {index: c, value: a[c]};\r\n                var d = b || goog.array.defaultCompare;\r\n                goog.array.sort(a, function (a, b) {\r\n                    return d(a.value, b.value) || a.index - b.index;\r\n                });\r\n                for (c = 0; c < a.length; c++) a[c] = a[c].value;\r\n            };\r\n            goog.array.sortByKey = function (a, b, c) {\r\n                var d = c || goog.array.defaultCompare;\r\n                goog.array.sort(a, function (a, c) {\r\n                    return d(b(a), b(c));\r\n                });\r\n            };\r\n            goog.array.sortObjectsByKey = function (a, b, c) {\r\n                goog.array.sortByKey(a, function (a) {\r\n                    return a[b];\r\n                }, c);\r\n            };\r\n            goog.array.isSorted = function (a, b, c) {\r\n                b = b || goog.array.defaultCompare;\r\n                for (var d = 1; d < a.length; d++) {\r\n                    var e = b(a[d - 1], a[d]);\r\n                    if (0 < e || 0 == e && c) return !1;\r\n                }\r\n                return !0;\r\n            };\r\n            goog.array.equals = function (a, b, c) {\r\n                if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) return !1;\r\n                var d = a.length;\r\n                c = c || goog.array.defaultCompareEquality;\r\n                for (var e = 0; e < d; e++) if (!c(a[e], b[e])) return !1;\r\n                return !0;\r\n            };\r\n            goog.array.compare3 = function (a, b, c) {\r\n                c = c || goog.array.defaultCompare;\r\n                for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {\r\n                    var f = c(a[e], b[e]);\r\n                    if (0 != f) return f;\r\n                }\r\n                return goog.array.defaultCompare(a.length, b.length);\r\n            };\r\n            goog.array.defaultCompare = function (a, b) {\r\n                return a > b ? 1 : a < b ? -1 : 0;\r\n            };\r\n            goog.array.inverseDefaultCompare = function (a, b) {\r\n                return -goog.array.defaultCompare(a, b);\r\n            };\r\n            goog.array.defaultCompareEquality = function (a, b) {\r\n                return a === b;\r\n            };\r\n            goog.array.binaryInsert = function (a, b, c) {\r\n                c = goog.array.binarySearch(a, b, c);\r\n                return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;\r\n            };\r\n            goog.array.binaryRemove = function (a, b, c) {\r\n                b = goog.array.binarySearch(a, b, c);\r\n                return 0 <= b ? goog.array.removeAt(a, b) : !1;\r\n            };\r\n            goog.array.bucket = function (a, b, c) {\r\n                for (var d = {}, e = 0; e < a.length; e++) {\r\n                    var f = a[e], g = b.call(c, f, e, a);\r\n                    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);\r\n                }\r\n                return d;\r\n            };\r\n            goog.array.toObject = function (a, b, c) {\r\n                var d = {};\r\n                goog.array.forEach(a, function (e, f) {\r\n                    d[b.call(c, e, f, a)] = e;\r\n                });\r\n                return d;\r\n            };\r\n            goog.array.range = function (a, b, c) {\r\n                var d = [], e = 0, f = a;\r\n                c = c || 1;\r\n                void 0 !== b && (e = a, f = b);\r\n                if (0 > c * (f - e)) return [];\r\n                if (0 < c) for (a = e; a < f; a += c) d.push(a); else for (a = e; a > f; a += c) d.push(a);\r\n                return d;\r\n            };\r\n            goog.array.repeat = function (a, b) {\r\n                for (var c = [], d = 0; d < b; d++) c[d] = a;\r\n                return c;\r\n            };\r\n            goog.array.flatten = function (a) {\r\n                for (var b = [], c = 0; c < arguments.length; c++) {\r\n                    var d = arguments[c];\r\n                    if (goog.isArray(d)) for (var e = 0; e < d.length; e += 8192) for (var f = goog.array.slice(d, e, e + 8192), f = goog.array.flatten.apply(null, f), g = 0; g < f.length; g++) b.push(f[g]); else b.push(d);\r\n                }\r\n                return b;\r\n            };\r\n            goog.array.rotate = function (a, b) {\r\n                goog.asserts.assert(null != a.length);\r\n                a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));\r\n                return a;\r\n            };\r\n            goog.array.moveItem = function (a, b, c) {\r\n                goog.asserts.assert(0 <= b && b < a.length);\r\n                goog.asserts.assert(0 <= c && c < a.length);\r\n                b = Array.prototype.splice.call(a, b, 1);\r\n                Array.prototype.splice.call(a, c, 0, b[0]);\r\n            };\r\n            goog.array.zip = function (a) {\r\n                if (!arguments.length) return [];\r\n                for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) arguments[d].length < c && (c = arguments[d].length);\r\n                for (d = 0; d < c; d++) {\r\n                    for (var e = [], f = 0; f < arguments.length; f++) e.push(arguments[f][d]);\r\n                    b.push(e);\r\n                }\r\n                return b;\r\n            };\r\n            goog.array.shuffle = function (a, b) {\r\n                for (var c = b || Math.random, d = a.length - 1; 0 < d; d--) {\r\n                    var e = Math.floor(c() * (d + 1)), f = a[d];\r\n                    a[d] = a[e];\r\n                    a[e] = f;\r\n                }\r\n            };\r\n            goog.array.copyByIndex = function (a, b) {\r\n                var c = [];\r\n                goog.array.forEach(b, function (b) {\r\n                    c.push(a[b]);\r\n                });\r\n                return c;\r\n            };\r\n            goog.crypt = {};\r\n            goog.crypt.stringToByteArray = function (a) {\r\n                for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n                    for (var e = a.charCodeAt(d); 255 < e;) b[c++] = e & 255, e >>= 8;\r\n                    b[c++] = e;\r\n                }\r\n                return b;\r\n            };\r\n            goog.crypt.byteArrayToString = function (a) {\r\n                if (8192 >= a.length) return String.fromCharCode.apply(null, a);\r\n                for (var b = \"\", c = 0; c < a.length; c += 8192) var d = goog.array.slice(a, c, c + 8192), b = b + String.fromCharCode.apply(null, d);\r\n                return b;\r\n            };\r\n            goog.crypt.byteArrayToHex = function (a) {\r\n                return goog.array.map(a, function (a) {\r\n                    a = a.toString(16);\r\n                    return 1 < a.length ? a : \"0\" + a;\r\n                }).join(\"\");\r\n            };\r\n            goog.crypt.hexToByteArray = function (a) {\r\n                goog.asserts.assert(0 == a.length % 2, \"Key string length must be multiple of 2\");\r\n                for (var b = [], c = 0; c < a.length; c += 2) b.push(parseInt(a.substring(c, c + 2), 16));\r\n                return b;\r\n            };\r\n            goog.crypt.stringToUtf8ByteArray = function (a) {\r\n                for (var b = [], c = 0, d = 0; d < a.length; d++) {\r\n                    var e = a.charCodeAt(d);\r\n                    128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);\r\n                }\r\n                return b;\r\n            };\r\n            goog.crypt.utf8ByteArrayToString = function (a) {\r\n                for (var b = [], c = 0, d = 0; c < a.length;) {\r\n                    var e = a[c++];\r\n                    if (128 > e) b[d++] = String.fromCharCode(e); else if (191 < e && 224 > e) {\r\n                        var f = a[c++];\r\n                        b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);\r\n                    } else if (239 < e && 365 > e) {\r\n                        var f = a[c++], g = a[c++], h = a[c++],\r\n                            e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;\r\n                        b[d++] = String.fromCharCode(55296 + (e >> 10));\r\n                        b[d++] = String.fromCharCode(56320 + (e & 1023));\r\n                    } else f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);\r\n                }\r\n                return b.join(\"\");\r\n            };\r\n            goog.crypt.xorByteArray = function (a, b) {\r\n                goog.asserts.assert(a.length == b.length, \"XOR array lengths must match\");\r\n                for (var c = [], d = 0; d < a.length; d++) c.push(a[d] ^ b[d]);\r\n                return c;\r\n            };\r\n            goog.labs = {};\r\n            goog.labs.userAgent = {};\r\n            goog.labs.userAgent.util = {};\r\n            goog.labs.userAgent.util.getNativeUserAgentString_ = function () {\r\n                var a = goog.labs.userAgent.util.getNavigator_();\r\n                return a && (a = a.userAgent) ? a : \"\";\r\n            };\r\n            goog.labs.userAgent.util.getNavigator_ = function () {\r\n                return goog.global.navigator;\r\n            };\r\n            goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();\r\n            goog.labs.userAgent.util.setUserAgent = function (a) {\r\n                goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();\r\n            };\r\n            goog.labs.userAgent.util.getUserAgent = function () {\r\n                return goog.labs.userAgent.util.userAgent_;\r\n            };\r\n            goog.labs.userAgent.util.matchUserAgent = function (a) {\r\n                var b = goog.labs.userAgent.util.getUserAgent();\r\n                return goog.string.contains(b, a);\r\n            };\r\n            goog.labs.userAgent.util.matchUserAgentIgnoreCase = function (a) {\r\n                var b = goog.labs.userAgent.util.getUserAgent();\r\n                return goog.string.caseInsensitiveContains(b, a);\r\n            };\r\n            goog.labs.userAgent.util.extractVersionTuples = function (a) {\r\n                for (var b = RegExp(\"(\\\\w[\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\", \"g\"), c = [], d; d = b.exec(a);) c.push([d[1], d[2], d[3] || void 0]);\r\n                return c;\r\n            };\r\n            goog.labs.userAgent.platform = {};\r\n            goog.labs.userAgent.platform.isAndroid = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Android\");\r\n            };\r\n            goog.labs.userAgent.platform.isIpod = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"iPod\");\r\n            };\r\n            goog.labs.userAgent.platform.isIphone = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"iPhone\") && !goog.labs.userAgent.util.matchUserAgent(\"iPod\") && !goog.labs.userAgent.util.matchUserAgent(\"iPad\");\r\n            };\r\n            goog.labs.userAgent.platform.isIpad = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"iPad\");\r\n            };\r\n            goog.labs.userAgent.platform.isIos = function () {\r\n                return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();\r\n            };\r\n            goog.labs.userAgent.platform.isMacintosh = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\");\r\n            };\r\n            goog.labs.userAgent.platform.isLinux = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Linux\");\r\n            };\r\n            goog.labs.userAgent.platform.isWindows = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Windows\");\r\n            };\r\n            goog.labs.userAgent.platform.isChromeOS = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"CrOS\");\r\n            };\r\n            goog.labs.userAgent.platform.getVersion = function () {\r\n                var a = goog.labs.userAgent.util.getUserAgent(), b = \"\";\r\n                goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : \"0.0\") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, \".\")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, \".\") : \"10\") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\\s+([^\\);]+)(\\)|;)/,\r\n                b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && (b = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);\r\n                return b || \"\";\r\n            };\r\n            goog.labs.userAgent.platform.isVersionOrHigher = function (a) {\r\n                return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);\r\n            };\r\n            goog.object = {};\r\n            goog.object.forEach = function (a, b, c) {\r\n                for (var d in a) b.call(c, a[d], d, a);\r\n            };\r\n            goog.object.filter = function (a, b, c) {\r\n                var d = {}, e;\r\n                for (e in a) b.call(c, a[e], e, a) && (d[e] = a[e]);\r\n                return d;\r\n            };\r\n            goog.object.map = function (a, b, c) {\r\n                var d = {}, e;\r\n                for (e in a) d[e] = b.call(c, a[e], e, a);\r\n                return d;\r\n            };\r\n            goog.object.some = function (a, b, c) {\r\n                for (var d in a) if (b.call(c, a[d], d, a)) return !0;\r\n                return !1;\r\n            };\r\n            goog.object.every = function (a, b, c) {\r\n                for (var d in a) if (!b.call(c, a[d], d, a)) return !1;\r\n                return !0;\r\n            };\r\n            goog.object.getCount = function (a) {\r\n                var b = 0, c;\r\n                for (c in a) b++;\r\n                return b;\r\n            };\r\n            goog.object.getAnyKey = function (a) {\r\n                for (var b in a) return b;\r\n            };\r\n            goog.object.getAnyValue = function (a) {\r\n                for (var b in a) return a[b];\r\n            };\r\n            goog.object.contains = function (a, b) {\r\n                return goog.object.containsValue(a, b);\r\n            };\r\n            goog.object.getValues = function (a) {\r\n                var b = [], c = 0, d;\r\n                for (d in a) b[c++] = a[d];\r\n                return b;\r\n            };\r\n            goog.object.getKeys = function (a) {\r\n                var b = [], c = 0, d;\r\n                for (d in a) b[c++] = d;\r\n                return b;\r\n            };\r\n            goog.object.getValueByKeys = function (a, b) {\r\n                for (var c = goog.isArrayLike(b), d = c ? b : arguments, c = c ? 0 : 1; c < d.length && (a = a[d[c]], goog.isDef(a)); c++) ;\r\n                return a;\r\n            };\r\n            goog.object.containsKey = function (a, b) {\r\n                return null !== a && b in a;\r\n            };\r\n            goog.object.containsValue = function (a, b) {\r\n                for (var c in a) if (a[c] == b) return !0;\r\n                return !1;\r\n            };\r\n            goog.object.findKey = function (a, b, c) {\r\n                for (var d in a) if (b.call(c, a[d], d, a)) return d;\r\n            };\r\n            goog.object.findValue = function (a, b, c) {\r\n                return (b = goog.object.findKey(a, b, c)) && a[b];\r\n            };\r\n            goog.object.isEmpty = function (a) {\r\n                for (var b in a) return !1;\r\n                return !0;\r\n            };\r\n            goog.object.clear = function (a) {\r\n                for (var b in a) delete a[b];\r\n            };\r\n            goog.object.remove = function (a, b) {\r\n                var c;\r\n                (c = b in a) && delete a[b];\r\n                return c;\r\n            };\r\n            goog.object.add = function (a, b, c) {\r\n                if (null !== a && b in a) throw Error(\"The object already contains the key \\\"\" + b + \"\\\"\");\r\n                goog.object.set(a, b, c);\r\n            };\r\n            goog.object.get = function (a, b, c) {\r\n                return null !== a && b in a ? a[b] : c;\r\n            };\r\n            goog.object.set = function (a, b, c) {\r\n                a[b] = c;\r\n            };\r\n            goog.object.setIfUndefined = function (a, b, c) {\r\n                return b in a ? a[b] : a[b] = c;\r\n            };\r\n            goog.object.setWithReturnValueIfNotSet = function (a, b, c) {\r\n                if (b in a) return a[b];\r\n                c = c();\r\n                return a[b] = c;\r\n            };\r\n            goog.object.equals = function (a, b) {\r\n                for (var c in a) if (!(c in b) || a[c] !== b[c]) return !1;\r\n                for (c in b) if (!(c in a)) return !1;\r\n                return !0;\r\n            };\r\n            goog.object.clone = function (a) {\r\n                var b = {}, c;\r\n                for (c in a) b[c] = a[c];\r\n                return b;\r\n            };\r\n            goog.object.unsafeClone = function (a) {\r\n                var b = goog.typeOf(a);\r\n                if (\"object\" == b || \"array\" == b) {\r\n                    if (goog.isFunction(a.clone)) return a.clone();\r\n                    var b = \"array\" == b ? [] : {}, c;\r\n                    for (c in a) b[c] = goog.object.unsafeClone(a[c]);\r\n                    return b;\r\n                }\r\n                return a;\r\n            };\r\n            goog.object.transpose = function (a) {\r\n                var b = {}, c;\r\n                for (c in a) b[a[c]] = c;\r\n                return b;\r\n            };\r\n            goog.object.PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\n            goog.object.extend = function (a, b) {\r\n                for (var c, d, e = 1; e < arguments.length; e++) {\r\n                    d = arguments[e];\r\n                    for (c in d) a[c] = d[c];\r\n                    for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\r\n                }\r\n            };\r\n            goog.object.create = function (a) {\r\n                var b = arguments.length;\r\n                if (1 == b && goog.isArray(arguments[0])) return goog.object.create.apply(null, arguments[0]);\r\n                if (b % 2) throw Error(\"Uneven number of arguments\");\r\n                for (var c = {}, d = 0; d < b; d += 2) c[arguments[d]] = arguments[d + 1];\r\n                return c;\r\n            };\r\n            goog.object.createSet = function (a) {\r\n                var b = arguments.length;\r\n                if (1 == b && goog.isArray(arguments[0])) return goog.object.createSet.apply(null, arguments[0]);\r\n                for (var c = {}, d = 0; d < b; d++) c[arguments[d]] = !0;\r\n                return c;\r\n            };\r\n            goog.object.createImmutableView = function (a) {\r\n                var b = a;\r\n                Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));\r\n                return b;\r\n            };\r\n            goog.object.isImmutableView = function (a) {\r\n                return !!Object.isFrozen && Object.isFrozen(a);\r\n            };\r\n            goog.labs.userAgent.browser = {};\r\n            goog.labs.userAgent.browser.matchOpera_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Opera\") || goog.labs.userAgent.util.matchUserAgent(\"OPR\");\r\n            };\r\n            goog.labs.userAgent.browser.matchIE_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\r\n            };\r\n            goog.labs.userAgent.browser.matchEdge_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\r\n            };\r\n            goog.labs.userAgent.browser.matchFirefox_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Firefox\");\r\n            };\r\n            goog.labs.userAgent.browser.matchSafari_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Safari\") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent(\"Android\"));\r\n            };\r\n            goog.labs.userAgent.browser.matchCoast_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Coast\");\r\n            };\r\n            goog.labs.userAgent.browser.matchIosWebview_ = function () {\r\n                return (goog.labs.userAgent.util.matchUserAgent(\"iPad\") || goog.labs.userAgent.util.matchUserAgent(\"iPhone\")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\");\r\n            };\r\n            goog.labs.userAgent.browser.matchChrome_ = function () {\r\n                return (goog.labs.userAgent.util.matchUserAgent(\"Chrome\") || goog.labs.userAgent.util.matchUserAgent(\"CriOS\")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();\r\n            };\r\n            goog.labs.userAgent.browser.matchAndroidBrowser_ = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Android\") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());\r\n            };\r\n            goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\r\n            goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\r\n            goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;\r\n            goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;\r\n            goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\r\n            goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\r\n            goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;\r\n            goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\r\n            goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;\r\n            goog.labs.userAgent.browser.isSilk = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Silk\");\r\n            };\r\n            goog.labs.userAgent.browser.getVersion = function () {\r\n                function a(a) {\r\n                    a = goog.array.find(a, d);\r\n                    return c[a] || \"\";\r\n                }\r\n\r\n                var b = goog.labs.userAgent.util.getUserAgent();\r\n                if (goog.labs.userAgent.browser.isIE()) return goog.labs.userAgent.browser.getIEVersion_(b);\r\n                var b = goog.labs.userAgent.util.extractVersionTuples(b), c = {};\r\n                goog.array.forEach(b, function (a) {\r\n                    c[a[0]] = a[1];\r\n                });\r\n                var d = goog.partial(goog.object.containsKey, c);\r\n                return goog.labs.userAgent.browser.isOpera() ? a([\"Version\", \"Opera\", \"OPR\"]) : goog.labs.userAgent.browser.isEdge() ?\r\n                    a([\"Edge\"]) : goog.labs.userAgent.browser.isChrome() ? a([\"Chrome\", \"CriOS\"]) : (b = b[2]) && b[1] || \"\";\r\n            };\r\n            goog.labs.userAgent.browser.isVersionOrHigher = function (a) {\r\n                return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);\r\n            };\r\n            goog.labs.userAgent.browser.getIEVersion_ = function (a) {\r\n                var b = /rv: *([\\d\\.]*)/.exec(a);\r\n                if (b && b[1]) return b[1];\r\n                var b = \"\", c = /MSIE +([\\d\\.]+)/.exec(a);\r\n                if (c && c[1]) if (a = /Trident\\/(\\d.\\d)/.exec(a), \"7.0\" == c[1]) if (a && a[1]) switch (a[1]) {\r\n                case \"4.0\":\r\n                    b = \"8.0\";\r\n                    break;\r\n                case \"5.0\":\r\n                    b = \"9.0\";\r\n                    break;\r\n                case \"6.0\":\r\n                    b = \"10.0\";\r\n                    break;\r\n                case \"7.0\":\r\n                    b = \"11.0\";\r\n                } else b = \"7.0\"; else b = c[1];\r\n                return b;\r\n            };\r\n            goog.labs.userAgent.engine = {};\r\n            goog.labs.userAgent.engine.isPresto = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Presto\");\r\n            };\r\n            goog.labs.userAgent.engine.isTrident = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\r\n            };\r\n            goog.labs.userAgent.engine.isEdge = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\r\n            };\r\n            goog.labs.userAgent.engine.isWebKit = function () {\r\n                return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\") && !goog.labs.userAgent.engine.isEdge();\r\n            };\r\n            goog.labs.userAgent.engine.isGecko = function () {\r\n                return goog.labs.userAgent.util.matchUserAgent(\"Gecko\") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();\r\n            };\r\n            goog.labs.userAgent.engine.getVersion = function () {\r\n                var a = goog.labs.userAgent.util.getUserAgent();\r\n                if (a) {\r\n                    var a = goog.labs.userAgent.util.extractVersionTuples(a),\r\n                        b = goog.labs.userAgent.engine.getEngineTuple_(a);\r\n                    if (b) return \"Gecko\" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, \"Firefox\") : b[1];\r\n                    var a = a[0], c;\r\n                    if (a && (c = a[2]) && (c = /Trident\\/([^\\s;]+)/.exec(c))) return c[1];\r\n                }\r\n                return \"\";\r\n            };\r\n            goog.labs.userAgent.engine.getEngineTuple_ = function (a) {\r\n                if (!goog.labs.userAgent.engine.isEdge()) return a[1];\r\n                for (var b = 0; b < a.length; b++) {\r\n                    var c = a[b];\r\n                    if (\"Edge\" == c[0]) return c;\r\n                }\r\n            };\r\n            goog.labs.userAgent.engine.isVersionOrHigher = function (a) {\r\n                return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);\r\n            };\r\n            goog.labs.userAgent.engine.getVersionForKey_ = function (a, b) {\r\n                var c = goog.array.find(a, function (a) {\r\n                    return b == a[0];\r\n                });\r\n                return c && c[1] || \"\";\r\n            };\r\n            goog.userAgent = {};\r\n            goog.userAgent.ASSUME_IE = !1;\r\n            goog.userAgent.ASSUME_EDGE = !1;\r\n            goog.userAgent.ASSUME_GECKO = !1;\r\n            goog.userAgent.ASSUME_WEBKIT = !1;\r\n            goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;\r\n            goog.userAgent.ASSUME_OPERA = !1;\r\n            goog.userAgent.ASSUME_ANY_VERSION = !1;\r\n            goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;\r\n            goog.userAgent.getUserAgentString = function () {\r\n                return goog.labs.userAgent.util.getUserAgent();\r\n            };\r\n            goog.userAgent.getNavigator = function () {\r\n                return goog.global.navigator || null;\r\n            };\r\n            goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();\r\n            goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();\r\n            goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();\r\n            goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\r\n            goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();\r\n            goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();\r\n            goog.userAgent.isMobile_ = function () {\r\n                return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent(\"Mobile\");\r\n            };\r\n            goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\r\n            goog.userAgent.SAFARI = goog.userAgent.WEBKIT;\r\n            goog.userAgent.determinePlatform_ = function () {\r\n                var a = goog.userAgent.getNavigator();\r\n                return a && a.platform || \"\";\r\n            };\r\n            goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\r\n            goog.userAgent.ASSUME_MAC = !1;\r\n            goog.userAgent.ASSUME_WINDOWS = !1;\r\n            goog.userAgent.ASSUME_LINUX = !1;\r\n            goog.userAgent.ASSUME_X11 = !1;\r\n            goog.userAgent.ASSUME_ANDROID = !1;\r\n            goog.userAgent.ASSUME_IPHONE = !1;\r\n            goog.userAgent.ASSUME_IPAD = !1;\r\n            goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;\r\n            goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();\r\n            goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();\r\n            goog.userAgent.isLegacyLinux_ = function () {\r\n                return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();\r\n            };\r\n            goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();\r\n            goog.userAgent.isX11_ = function () {\r\n                var a = goog.userAgent.getNavigator();\r\n                return !!a && goog.string.contains(a.appVersion || \"\", \"X11\");\r\n            };\r\n            goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();\r\n            goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();\r\n            goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();\r\n            goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\r\n            goog.userAgent.operaVersion_ = function () {\r\n                var a = goog.global.opera.version;\r\n                try {\r\n                    return a();\r\n                } catch (b) {\r\n                    return a;\r\n                }\r\n            };\r\n            goog.userAgent.determineVersion_ = function () {\r\n                if (goog.userAgent.OPERA && goog.global.opera) return goog.userAgent.operaVersion_();\r\n                var a = \"\", b = goog.userAgent.getVersionRegexResult_();\r\n                b && (a = b ? b[1] : \"\");\r\n                return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), b > parseFloat(a)) ? String(b) : a;\r\n            };\r\n            goog.userAgent.getVersionRegexResult_ = function () {\r\n                var a = goog.userAgent.getUserAgentString();\r\n                if (goog.userAgent.GECKO) return /rv\\:([^\\);]+)(\\)|;)/.exec(a);\r\n                if (goog.userAgent.EDGE) return /Edge\\/([\\d\\.]+)/.exec(a);\r\n                if (goog.userAgent.IE) return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\r\n                if (goog.userAgent.WEBKIT) return /WebKit\\/(\\S+)/.exec(a);\r\n            };\r\n            goog.userAgent.getDocumentMode_ = function () {\r\n                var a = goog.global.document;\r\n                return a ? a.documentMode : void 0;\r\n            };\r\n            goog.userAgent.VERSION = goog.userAgent.determineVersion_();\r\n            goog.userAgent.compare = function (a, b) {\r\n                return goog.string.compareVersions(a, b);\r\n            };\r\n            goog.userAgent.isVersionOrHigherCache_ = {};\r\n            goog.userAgent.isVersionOrHigher = function (a) {\r\n                return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[a] || (goog.userAgent.isVersionOrHigherCache_[a] = 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a));\r\n            };\r\n            goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\r\n            goog.userAgent.isDocumentModeOrHigher = function (a) {\r\n                return Number(goog.userAgent.DOCUMENT_MODE) >= a;\r\n            };\r\n            goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\r\n            goog.userAgent.DOCUMENT_MODE = function () {\r\n                var a = goog.global.document, b = goog.userAgent.getDocumentMode_();\r\n                return a && goog.userAgent.IE ? b || (\"CSS1Compat\" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5) : void 0;\r\n            }();\r\n            goog.userAgent.product = {};\r\n            goog.userAgent.product.ASSUME_FIREFOX = !1;\r\n            goog.userAgent.product.ASSUME_IPHONE = !1;\r\n            goog.userAgent.product.ASSUME_IPAD = !1;\r\n            goog.userAgent.product.ASSUME_ANDROID = !1;\r\n            goog.userAgent.product.ASSUME_CHROME = !1;\r\n            goog.userAgent.product.ASSUME_SAFARI = !1;\r\n            goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;\r\n            goog.userAgent.product.OPERA = goog.userAgent.OPERA;\r\n            goog.userAgent.product.IE = goog.userAgent.IE;\r\n            goog.userAgent.product.EDGE = goog.userAgent.EDGE;\r\n            goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();\r\n            goog.userAgent.product.isIphoneOrIpod_ = function () {\r\n                return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();\r\n            };\r\n            goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();\r\n            goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\r\n            goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();\r\n            goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();\r\n            goog.userAgent.product.isSafariDesktop_ = function () {\r\n                return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();\r\n            };\r\n            goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();\r\n            goog.crypt.base64 = {};\r\n            goog.crypt.base64.byteToCharMap_ = null;\r\n            goog.crypt.base64.charToByteMap_ = null;\r\n            goog.crypt.base64.byteToCharMapWebSafe_ = null;\r\n            goog.crypt.base64.ENCODED_VALS_BASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n            goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + \"+/=\";\r\n            goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + \"-_.\";\r\n            goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;\r\n            goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || \"function\" == typeof goog.global.btoa;\r\n            goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && \"function\" == typeof goog.global.atob;\r\n            goog.crypt.base64.encodeByteArray = function (a, b) {\r\n                goog.asserts.assert(goog.isArrayLike(a), \"encodeByteArray takes an array as a parameter\");\r\n                goog.crypt.base64.init_();\r\n                for (var c = b ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_, d = [], e = 0; e < a.length; e += 3) {\r\n                    var f = a[e], g = e + 1 < a.length, h = g ? a[e + 1] : 0, k = e + 2 < a.length,\r\n                        l = k ? a[e + 2] : 0, p = f >> 2, f = (f & 3) << 4 | h >> 4, h = (h & 15) << 2 | l >> 6,\r\n                        l = l & 63;\r\n                    k || (l = 64, g || (h = 64));\r\n                    d.push(c[p], c[f], c[h], c[l]);\r\n                }\r\n                return d.join(\"\");\r\n            };\r\n            goog.crypt.base64.encodeString = function (a, b) {\r\n                return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b);\r\n            };\r\n            goog.crypt.base64.decodeString = function (a, b) {\r\n                if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b) return goog.global.atob(a);\r\n                var c = \"\";\r\n                goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                    c += String.fromCharCode(a);\r\n                });\r\n                return c;\r\n            };\r\n            goog.crypt.base64.decodeStringToByteArray = function (a, b) {\r\n                var c = [];\r\n                goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                    c.push(a);\r\n                });\r\n                return c;\r\n            };\r\n            goog.crypt.base64.decodeStringToUint8Array = function (a) {\r\n                goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher(\"10\"), \"Browser does not support typed arrays\");\r\n                var b = new Uint8Array(Math.ceil(3 * a.length / 4)), c = 0;\r\n                goog.crypt.base64.decodeStringInternal_(a, function (a) {\r\n                    b[c++] = a;\r\n                });\r\n                return b.subarray(0, c);\r\n            };\r\n            goog.crypt.base64.decodeStringInternal_ = function (a, b) {\r\n                function c(b) {\r\n                    for (; d < a.length;) {\r\n                        var c = a.charAt(d++), e = goog.crypt.base64.charToByteMap_[c];\r\n                        if (null != e) return e;\r\n                        if (!goog.string.isEmptyOrWhitespace(c)) throw Error(\"Unknown base64 encoding at char: \" + c);\r\n                    }\r\n                    return b;\r\n                }\r\n\r\n                goog.crypt.base64.init_();\r\n                for (var d = 0; ;) {\r\n                    var e = c(-1), f = c(0), g = c(64), h = c(64);\r\n                    if (64 === h && -1 === e) break;\r\n                    b(e << 2 | f >> 4);\r\n                    64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));\r\n                }\r\n            };\r\n            goog.crypt.base64.init_ = function () {\r\n                if (!goog.crypt.base64.byteToCharMap_) {\r\n                    goog.crypt.base64.byteToCharMap_ = {};\r\n                    goog.crypt.base64.charToByteMap_ = {};\r\n                    goog.crypt.base64.byteToCharMapWebSafe_ = {};\r\n                    for (var a = 0; a < goog.crypt.base64.ENCODED_VALS.length; a++) goog.crypt.base64.byteToCharMap_[a] = goog.crypt.base64.ENCODED_VALS.charAt(a), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]] = a, goog.crypt.base64.byteToCharMapWebSafe_[a] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a), a >= goog.crypt.base64.ENCODED_VALS_BASE.length &&\r\n                    (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)] = a);\r\n                }\r\n            };\r\n            jspb.ExtensionFieldInfo = function (a, b, c, d, e) {\r\n                this.fieldIndex = a;\r\n                this.fieldName = b;\r\n                this.ctor = c;\r\n                this.toObjectFn = d;\r\n                this.isRepeated = e;\r\n            };\r\n            jspb.ExtensionFieldBinaryInfo = function (a, b, c, d, e, f) {\r\n                this.fieldInfo = a;\r\n                this.binaryReaderFn = b;\r\n                this.binaryWriterFn = c;\r\n                this.binaryMessageSerializeFn = d;\r\n                this.binaryMessageDeserializeFn = e;\r\n                this.isPacked = f;\r\n            };\r\n            jspb.ExtensionFieldInfo.prototype.isMessageType = function () {\r\n                return !!this.ctor;\r\n            };\r\n            jspb.Message = function () {\r\n            };\r\n            jspb.Message.GENERATE_TO_OBJECT = !0;\r\n            jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;\r\n            jspb.Message.GENERATE_TO_STRING = !0;\r\n            jspb.Message.ASSUME_LOCAL_ARRAYS = !1;\r\n            jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS = COMPILED;\r\n            jspb.Message.SUPPORTS_UINT8ARRAY_ = \"function\" == typeof Uint8Array;\r\n            jspb.Message.prototype.getJsPbMessageId = function () {\r\n                return this.messageId_;\r\n            };\r\n            jspb.Message.getIndex_ = function (a, b) {\r\n                return b + a.arrayIndexOffset_;\r\n            };\r\n            jspb.Message.initialize = function (a, b, c, d, e, f) {\r\n                a.wrappers_ = jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? null : {};\r\n                b || (b = c ? [c] : []);\r\n                a.messageId_ = c ? String(c) : void 0;\r\n                a.arrayIndexOffset_ = 0 === c ? -1 : 0;\r\n                a.array = b;\r\n                jspb.Message.initPivotAndExtensionObject_(a, d);\r\n                a.convertedFloatingPointFields_ = {};\r\n                if (e) for (b = 0; b < e.length; b++) c = e[b], c < a.pivot_ ? (c = jspb.Message.getIndex_(a, c), a.array[c] = a.array[c] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : [])) : (jspb.Message.maybeInitEmptyExtensionObject_(a),\r\n                a.extensionObject_[c] = a.extensionObject_[c] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : []));\r\n                f && f.length && goog.array.forEach(f, goog.partial(jspb.Message.computeOneofCase, a));\r\n            };\r\n            jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];\r\n            jspb.Message.isArray_ = function (a) {\r\n                return jspb.Message.ASSUME_LOCAL_ARRAYS ? a instanceof Array : goog.isArray(a);\r\n            };\r\n            jspb.Message.initPivotAndExtensionObject_ = function (a, b) {\r\n                if (a.array.length) {\r\n                    var c = a.array.length - 1, d = a.array[c];\r\n                    if (d && \"object\" == typeof d && !jspb.Message.isArray_(d) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && d instanceof Uint8Array)) {\r\n                        a.pivot_ = c - a.arrayIndexOffset_;\r\n                        a.extensionObject_ = d;\r\n                        return;\r\n                    }\r\n                }\r\n                -1 < b ? (a.pivot_ = b, a.extensionObject_ = null) : a.pivot_ = Number.MAX_VALUE;\r\n            };\r\n            jspb.Message.maybeInitEmptyExtensionObject_ = function (a) {\r\n                var b = jspb.Message.getIndex_(a, a.pivot_);\r\n                a.array[b] || (a.extensionObject_ = a.array[b] = {});\r\n            };\r\n            jspb.Message.toObjectList = function (a, b, c) {\r\n                for (var d = [], e = 0; e < a.length; e++) d[e] = b.call(a[e], c, a[e]);\r\n                return d;\r\n            };\r\n            jspb.Message.toObjectExtension = function (a, b, c, d, e) {\r\n                for (var f in c) {\r\n                    var g = c[f], h = d.call(a, g);\r\n                    if (null != h) {\r\n                        for (var k in g.fieldName) if (g.fieldName.hasOwnProperty(k)) break;\r\n                        b[k] = g.toObjectFn ? g.isRepeated ? jspb.Message.toObjectList(h, g.toObjectFn, e) : g.toObjectFn(e, h) : h;\r\n                    }\r\n                }\r\n            };\r\n            jspb.Message.serializeBinaryExtensions = function (a, b, c, d) {\r\n                for (var e in c) {\r\n                    var f = c[e], g = f.fieldInfo;\r\n                    if (!f.binaryWriterFn) throw Error(\"Message extension present that was generated without binary serialization support\");\r\n                    var h = d.call(a, g);\r\n                    if (null != h) if (g.isMessageType()) if (f.binaryMessageSerializeFn) f.binaryWriterFn.call(b, g.fieldIndex, h, f.binaryMessageSerializeFn); else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");\r\n                    else f.binaryWriterFn.call(b, g.fieldIndex, h);\r\n                }\r\n            };\r\n            jspb.Message.readBinaryExtension = function (a, b, c, d, e) {\r\n                var f = c[b.getFieldNumber()];\r\n                if (f) {\r\n                    c = f.fieldInfo;\r\n                    if (!f.binaryReaderFn) throw Error(\"Deserializing extension whose generated code does not support binary format\");\r\n                    var g;\r\n                    c.isMessageType() ? (g = new c.ctor, f.binaryReaderFn.call(b, g, f.binaryMessageDeserializeFn)) : g = f.binaryReaderFn.call(b);\r\n                    c.isRepeated && !f.isPacked ? (b = d.call(a, c)) ? b.push(g) : e.call(a, c, [g]) : e.call(a, c, g);\r\n                } else b.skipField();\r\n            };\r\n            jspb.Message.getField = function (a, b) {\r\n                if (b < a.pivot_) {\r\n                    var c = jspb.Message.getIndex_(a, b), d = a.array[c];\r\n                    return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[c] = [] : d;\r\n                }\r\n                if (a.extensionObject_) return d = a.extensionObject_[b], d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : d;\r\n            };\r\n            jspb.Message.getRepeatedField = function (a, b) {\r\n                if (b < a.pivot_) {\r\n                    var c = jspb.Message.getIndex_(a, b), d = a.array[c];\r\n                    return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[c] = [] : d;\r\n                }\r\n                d = a.extensionObject_[b];\r\n                return d === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : d;\r\n            };\r\n            jspb.Message.getOptionalFloatingPointField = function (a, b) {\r\n                var c = jspb.Message.getField(a, b);\r\n                return null == c ? c : +c;\r\n            };\r\n            jspb.Message.getRepeatedFloatingPointField = function (a, b) {\r\n                var c = jspb.Message.getRepeatedField(a, b);\r\n                a.convertedFloatingPointFields_ || (a.convertedFloatingPointFields_ = {});\r\n                if (!a.convertedFloatingPointFields_[b]) {\r\n                    for (var d = 0; d < c.length; d++) c[d] = +c[d];\r\n                    a.convertedFloatingPointFields_[b] = !0;\r\n                }\r\n                return c;\r\n            };\r\n            jspb.Message.bytesAsB64 = function (a) {\r\n                if (null == a || goog.isString(a)) return a;\r\n                if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array) return goog.crypt.base64.encodeByteArray(a);\r\n                goog.asserts.fail(\"Cannot coerce to b64 string: \" + goog.typeOf(a));\r\n                return null;\r\n            };\r\n            jspb.Message.bytesAsU8 = function (a) {\r\n                if (null == a || a instanceof Uint8Array) return a;\r\n                if (goog.isString(a)) return goog.crypt.base64.decodeStringToUint8Array(a);\r\n                goog.asserts.fail(\"Cannot coerce to Uint8Array: \" + goog.typeOf(a));\r\n                return null;\r\n            };\r\n            jspb.Message.bytesListAsB64 = function (a) {\r\n                jspb.Message.assertConsistentTypes_(a);\r\n                return !a.length || goog.isString(a[0]) ? a : goog.array.map(a, jspb.Message.bytesAsB64);\r\n            };\r\n            jspb.Message.bytesListAsU8 = function (a) {\r\n                jspb.Message.assertConsistentTypes_(a);\r\n                return !a.length || a[0] instanceof Uint8Array ? a : goog.array.map(a, jspb.Message.bytesAsU8);\r\n            };\r\n            jspb.Message.assertConsistentTypes_ = function (a) {\r\n                if (goog.DEBUG && a && 1 < a.length) {\r\n                    var b = goog.typeOf(a[0]);\r\n                    goog.array.forEach(a, function (a) {\r\n                        goog.typeOf(a) != b && goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \" + goog.typeOf(a) + \" expected \" + b);\r\n                    });\r\n                }\r\n            };\r\n            jspb.Message.getFieldWithDefault = function (a, b, c) {\r\n                a = jspb.Message.getField(a, b);\r\n                return null == a ? c : a;\r\n            };\r\n            jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;\r\n            jspb.Message.getMapField = function (a, b, c, d) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                if (b in a.wrappers_) return a.wrappers_[b];\r\n                if (!c) return c = jspb.Message.getField(a, b), c || (c = [], jspb.Message.setField(a, b, c)), a.wrappers_[b] = new jspb.Map(c, d);\r\n            };\r\n            jspb.Message.setField = function (a, b, c) {\r\n                b < a.pivot_ ? a.array[jspb.Message.getIndex_(a, b)] = c : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[b] = c);\r\n            };\r\n            jspb.Message.setProto3IntField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n            };\r\n            jspb.Message.setProto3FloatField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n            };\r\n            jspb.Message.setProto3BooleanField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, !1);\r\n            };\r\n            jspb.Message.setProto3StringField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n            };\r\n            jspb.Message.setProto3StringIntField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n            };\r\n            jspb.Message.setProto3BytesField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\r\n            };\r\n            jspb.Message.setProto3EnumField = function (a, b, c) {\r\n                jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\r\n            };\r\n            jspb.Message.setFieldIgnoringDefault_ = function (a, b, c, d) {\r\n                c != d ? jspb.Message.setField(a, b, c) : a.array[jspb.Message.getIndex_(a, b)] = null;\r\n            };\r\n            jspb.Message.addToRepeatedField = function (a, b, c, d) {\r\n                a = jspb.Message.getRepeatedField(a, b);\r\n                void 0 != d ? a.splice(d, 0, c) : a.push(c);\r\n            };\r\n            jspb.Message.setOneofField = function (a, b, c, d) {\r\n                (c = jspb.Message.computeOneofCase(a, c)) && c !== b && void 0 !== d && (a.wrappers_ && c in a.wrappers_ && (a.wrappers_[c] = void 0), jspb.Message.setField(a, c, void 0));\r\n                jspb.Message.setField(a, b, d);\r\n            };\r\n            jspb.Message.computeOneofCase = function (a, b) {\r\n                var c, d;\r\n                goog.array.forEach(b, function (b) {\r\n                    var f = jspb.Message.getField(a, b);\r\n                    goog.isDefAndNotNull(f) && (c = b, d = f, jspb.Message.setField(a, b, void 0));\r\n                });\r\n                return c ? (jspb.Message.setField(a, c, d), c) : 0;\r\n            };\r\n            jspb.Message.getWrapperField = function (a, b, c, d) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                if (!a.wrappers_[c]) {\r\n                    var e = jspb.Message.getField(a, c);\r\n                    if (d || e) a.wrappers_[c] = new b(e);\r\n                }\r\n                return a.wrappers_[c];\r\n            };\r\n            jspb.Message.getRepeatedWrapperField = function (a, b, c) {\r\n                jspb.Message.wrapRepeatedField_(a, b, c);\r\n                b = a.wrappers_[c];\r\n                b == jspb.Message.EMPTY_LIST_SENTINEL_ && (b = a.wrappers_[c] = []);\r\n                return b;\r\n            };\r\n            jspb.Message.wrapRepeatedField_ = function (a, b, c) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                if (!a.wrappers_[c]) {\r\n                    for (var d = jspb.Message.getRepeatedField(a, c), e = [], f = 0; f < d.length; f++) e[f] = new b(d[f]);\r\n                    a.wrappers_[c] = e;\r\n                }\r\n            };\r\n            jspb.Message.setWrapperField = function (a, b, c) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                var d = c ? c.toArray() : c;\r\n                a.wrappers_[b] = c;\r\n                jspb.Message.setField(a, b, d);\r\n            };\r\n            jspb.Message.setOneofWrapperField = function (a, b, c, d) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                var e = d ? d.toArray() : d;\r\n                a.wrappers_[b] = d;\r\n                jspb.Message.setOneofField(a, b, c, e);\r\n            };\r\n            jspb.Message.setRepeatedWrapperField = function (a, b, c) {\r\n                a.wrappers_ || (a.wrappers_ = {});\r\n                c = c || [];\r\n                for (var d = [], e = 0; e < c.length; e++) d[e] = c[e].toArray();\r\n                a.wrappers_[b] = c;\r\n                jspb.Message.setField(a, b, d);\r\n            };\r\n            jspb.Message.addToRepeatedWrapperField = function (a, b, c, d, e) {\r\n                jspb.Message.wrapRepeatedField_(a, d, b);\r\n                var f = a.wrappers_[b];\r\n                f || (f = a.wrappers_[b] = []);\r\n                c = c ? c : new d;\r\n                a = jspb.Message.getRepeatedField(a, b);\r\n                void 0 != e ? (f.splice(e, 0, c), a.splice(e, 0, c.toArray())) : (f.push(c), a.push(c.toArray()));\r\n                return c;\r\n            };\r\n            jspb.Message.toMap = function (a, b, c, d) {\r\n                for (var e = {}, f = 0; f < a.length; f++) e[b.call(a[f])] = c ? c.call(a[f], d, a[f]) : a[f];\r\n                return e;\r\n            };\r\n            jspb.Message.prototype.syncMapFields_ = function () {\r\n                if (this.wrappers_) for (var a in this.wrappers_) {\r\n                    var b = this.wrappers_[a];\r\n                    if (goog.isArray(b)) for (var c = 0; c < b.length; c++) b[c] && b[c].toArray(); else b && b.toArray();\r\n                }\r\n            };\r\n            jspb.Message.prototype.toArray = function () {\r\n                this.syncMapFields_();\r\n                return this.array;\r\n            };\r\n            jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function () {\r\n                this.syncMapFields_();\r\n                return this.array.toString();\r\n            });\r\n            jspb.Message.prototype.getExtension = function (a) {\r\n                if (this.extensionObject_) {\r\n                    this.wrappers_ || (this.wrappers_ = {});\r\n                    var b = a.fieldIndex;\r\n                    if (a.isRepeated) {\r\n                        if (a.isMessageType()) return this.wrappers_[b] || (this.wrappers_[b] = goog.array.map(this.extensionObject_[b] || [], function (b) {\r\n                            return new a.ctor(b);\r\n                        })), this.wrappers_[b];\r\n                    } else if (a.isMessageType()) return !this.wrappers_[b] && this.extensionObject_[b] && (this.wrappers_[b] = new a.ctor(this.extensionObject_[b])), this.wrappers_[b];\r\n                    return this.extensionObject_[b];\r\n                }\r\n            };\r\n            jspb.Message.prototype.setExtension = function (a, b) {\r\n                this.wrappers_ || (this.wrappers_ = {});\r\n                jspb.Message.maybeInitEmptyExtensionObject_(this);\r\n                var c = a.fieldIndex;\r\n                a.isRepeated ? (b = b || [], a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = goog.array.map(b, function (a) {\r\n                    return a.toArray();\r\n                })) : this.extensionObject_[c] = b) : a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = b ? b.toArray() : b) : this.extensionObject_[c] = b;\r\n                return this;\r\n            };\r\n            jspb.Message.difference = function (a, b) {\r\n                if (!(a instanceof b.constructor)) throw Error(\"Messages have different types.\");\r\n                var c = a.toArray(), d = b.toArray(), e = [], f = 0, g = c.length > d.length ? c.length : d.length;\r\n                a.getJsPbMessageId() && (e[0] = a.getJsPbMessageId(), f = 1);\r\n                for (; f < g; f++) jspb.Message.compareFields(c[f], d[f]) || (e[f] = d[f]);\r\n                return new a.constructor(e);\r\n            };\r\n            jspb.Message.equals = function (a, b) {\r\n                return a == b || !(!a || !b) && a instanceof b.constructor && jspb.Message.compareFields(a.toArray(), b.toArray());\r\n            };\r\n            jspb.Message.compareExtensions = function (a, b) {\r\n                a = a || {};\r\n                b = b || {};\r\n                var c = {}, d;\r\n                for (d in a) c[d] = 0;\r\n                for (d in b) c[d] = 0;\r\n                for (d in c) if (!jspb.Message.compareFields(a[d], b[d])) return !1;\r\n                return !0;\r\n            };\r\n            jspb.Message.compareFields = function (a, b) {\r\n                if (a == b) return !0;\r\n                if (!goog.isObject(a) || !goog.isObject(b) || a.constructor != b.constructor) return !1;\r\n                if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a.constructor === Uint8Array) {\r\n                    if (a.length != b.length) return !1;\r\n                    for (var c = 0; c < a.length; c++) if (a[c] != b[c]) return !1;\r\n                    return !0;\r\n                }\r\n                if (a.constructor === Array) {\r\n                    for (var d = void 0, e = void 0, f = Math.max(a.length, b.length), c = 0; c < f; c++) {\r\n                        var g = a[c], h = b[c];\r\n                        g && g.constructor == Object && (goog.asserts.assert(void 0 === d), goog.asserts.assert(c === a.length - 1),\r\n                        d = g, g = void 0);\r\n                        h && h.constructor == Object && (goog.asserts.assert(void 0 === e), goog.asserts.assert(c === b.length - 1), e = h, h = void 0);\r\n                        if (!jspb.Message.compareFields(g, h)) return !1;\r\n                    }\r\n                    return d || e ? (d = d || {}, e = e || {}, jspb.Message.compareExtensions(d, e)) : !0;\r\n                }\r\n                if (a.constructor === Object) return jspb.Message.compareExtensions(a, b);\r\n                throw Error(\"Invalid type in JSPB array\");\r\n            };\r\n            jspb.Message.prototype.cloneMessage = function () {\r\n                return jspb.Message.cloneMessage(this);\r\n            };\r\n            jspb.Message.prototype.clone = function () {\r\n                return jspb.Message.cloneMessage(this);\r\n            };\r\n            jspb.Message.clone = function (a) {\r\n                return jspb.Message.cloneMessage(a);\r\n            };\r\n            jspb.Message.cloneMessage = function (a) {\r\n                return new a.constructor(jspb.Message.clone_(a.toArray()));\r\n            };\r\n            jspb.Message.copyInto = function (a, b) {\r\n                goog.asserts.assertInstanceof(a, jspb.Message);\r\n                goog.asserts.assertInstanceof(b, jspb.Message);\r\n                goog.asserts.assert(a.constructor == b.constructor, \"Copy source and target message should have the same type.\");\r\n                for (var c = jspb.Message.clone(a), d = b.toArray(), e = c.toArray(), f = d.length = 0; f < e.length; f++) d[f] = e[f];\r\n                b.wrappers_ = c.wrappers_;\r\n                b.extensionObject_ = c.extensionObject_;\r\n            };\r\n            jspb.Message.clone_ = function (a) {\r\n                var b;\r\n                if (goog.isArray(a)) {\r\n                    for (var c = Array(a.length), d = 0; d < a.length; d++) null != (b = a[d]) && (c[d] = \"object\" == typeof b ? jspb.Message.clone_(b) : b);\r\n                    return c;\r\n                }\r\n                if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array) return new Uint8Array(a);\r\n                c = {};\r\n                for (d in a) null != (b = a[d]) && (c[d] = \"object\" == typeof b ? jspb.Message.clone_(b) : b);\r\n                return c;\r\n            };\r\n            jspb.Message.registerMessageType = function (a, b) {\r\n                jspb.Message.registry_[a] = b;\r\n                b.messageId = a;\r\n            };\r\n            jspb.Message.registry_ = {};\r\n            jspb.Message.messageSetExtensions = {};\r\n            jspb.Message.messageSetExtensionsBinary = {};\r\n            jspb.arith = {};\r\n            jspb.arith.UInt64 = function (a, b) {\r\n                this.lo = a;\r\n                this.hi = b;\r\n            };\r\n            jspb.arith.UInt64.prototype.cmp = function (a) {\r\n                return this.hi < a.hi || this.hi == a.hi && this.lo < a.lo ? -1 : this.hi == a.hi && this.lo == a.lo ? 0 : 1;\r\n            };\r\n            jspb.arith.UInt64.prototype.rightShift = function () {\r\n                return new jspb.arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0);\r\n            };\r\n            jspb.arith.UInt64.prototype.leftShift = function () {\r\n                return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);\r\n            };\r\n            jspb.arith.UInt64.prototype.msb = function () {\r\n                return !!(this.hi & 2147483648);\r\n            };\r\n            jspb.arith.UInt64.prototype.lsb = function () {\r\n                return !!(this.lo & 1);\r\n            };\r\n            jspb.arith.UInt64.prototype.zero = function () {\r\n                return 0 == this.lo && 0 == this.hi;\r\n            };\r\n            jspb.arith.UInt64.prototype.add = function (a) {\r\n                return new jspb.arith.UInt64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\r\n            };\r\n            jspb.arith.UInt64.prototype.sub = function (a) {\r\n                return new jspb.arith.UInt64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\r\n            };\r\n            jspb.arith.UInt64.mul32x32 = function (a, b) {\r\n                for (var c = a & 65535, d = a >>> 16, e = b & 65535, f = b >>> 16, g = c * e + 65536 * (c * f & 65535) + 65536 * (d * e & 65535), c = d * f + (c * f >>> 16) + (d * e >>> 16); 4294967296 <= g;) g -= 4294967296, c += 1;\r\n                return new jspb.arith.UInt64(g >>> 0, c >>> 0);\r\n            };\r\n            jspb.arith.UInt64.prototype.mul = function (a) {\r\n                var b = jspb.arith.UInt64.mul32x32(this.lo, a);\r\n                a = jspb.arith.UInt64.mul32x32(this.hi, a);\r\n                a.hi = a.lo;\r\n                a.lo = 0;\r\n                return b.add(a);\r\n            };\r\n            jspb.arith.UInt64.prototype.div = function (a) {\r\n                if (0 == a) return [];\r\n                var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(this.lo, this.hi);\r\n                a = new jspb.arith.UInt64(a, 0);\r\n                for (var d = new jspb.arith.UInt64(1, 0); !a.msb();) a = a.leftShift(), d = d.leftShift();\r\n                for (; !d.zero();) 0 >= a.cmp(c) && (b = b.add(d), c = c.sub(a)), a = a.rightShift(), d = d.rightShift();\r\n                return [b, c];\r\n            };\r\n            jspb.arith.UInt64.prototype.toString = function () {\r\n                for (var a = \"\", b = this; !b.zero();) var b = b.div(10), c = b[0], a = b[1].lo + a, b = c;\r\n                \"\" == a && (a = \"0\");\r\n                return a;\r\n            };\r\n            jspb.arith.UInt64.fromString = function (a) {\r\n                for (var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(0, 0), d = 0; d < a.length; d++) {\r\n                    if (\"0\" > a[d] || \"9\" < a[d]) return null;\r\n                    var e = parseInt(a[d], 10);\r\n                    c.lo = e;\r\n                    b = b.mul(10).add(c);\r\n                }\r\n                return b;\r\n            };\r\n            jspb.arith.UInt64.prototype.clone = function () {\r\n                return new jspb.arith.UInt64(this.lo, this.hi);\r\n            };\r\n            jspb.arith.Int64 = function (a, b) {\r\n                this.lo = a;\r\n                this.hi = b;\r\n            };\r\n            jspb.arith.Int64.prototype.add = function (a) {\r\n                return new jspb.arith.Int64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\r\n            };\r\n            jspb.arith.Int64.prototype.sub = function (a) {\r\n                return new jspb.arith.Int64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\r\n            };\r\n            jspb.arith.Int64.prototype.clone = function () {\r\n                return new jspb.arith.Int64(this.lo, this.hi);\r\n            };\r\n            jspb.arith.Int64.prototype.toString = function () {\r\n                var a = 0 != (this.hi & 2147483648), b = new jspb.arith.UInt64(this.lo, this.hi);\r\n                a && (b = (new jspb.arith.UInt64(0, 0)).sub(b));\r\n                return (a ? \"-\" : \"\") + b.toString();\r\n            };\r\n            jspb.arith.Int64.fromString = function (a) {\r\n                var b = 0 < a.length && \"-\" == a[0];\r\n                b && (a = a.substring(1));\r\n                a = jspb.arith.UInt64.fromString(a);\r\n                if (null === a) return null;\r\n                b && (a = (new jspb.arith.UInt64(0, 0)).sub(a));\r\n                return new jspb.arith.Int64(a.lo, a.hi);\r\n            };\r\n            jspb.BinaryConstants = {};\r\n            jspb.ConstBinaryMessage = function () {\r\n            };\r\n            jspb.BinaryMessage = function () {\r\n            };\r\n            jspb.BinaryConstants.FieldType = {\r\n                INVALID: -1,\r\n                DOUBLE: 1,\r\n                FLOAT: 2,\r\n                INT64: 3,\r\n                UINT64: 4,\r\n                INT32: 5,\r\n                FIXED64: 6,\r\n                FIXED32: 7,\r\n                BOOL: 8,\r\n                STRING: 9,\r\n                GROUP: 10,\r\n                MESSAGE: 11,\r\n                BYTES: 12,\r\n                UINT32: 13,\r\n                ENUM: 14,\r\n                SFIXED32: 15,\r\n                SFIXED64: 16,\r\n                SINT32: 17,\r\n                SINT64: 18,\r\n                FHASH64: 30,\r\n                VHASH64: 31\r\n            };\r\n            jspb.BinaryConstants.WireType = {\r\n                INVALID: -1,\r\n                VARINT: 0,\r\n                FIXED64: 1,\r\n                DELIMITED: 2,\r\n                START_GROUP: 3,\r\n                END_GROUP: 4,\r\n                FIXED32: 5\r\n            };\r\n            jspb.BinaryConstants.FieldTypeToWireType = function (a) {\r\n                var b = jspb.BinaryConstants.FieldType, c = jspb.BinaryConstants.WireType;\r\n                switch (a) {\r\n                case b.INT32:\r\n                case b.INT64:\r\n                case b.UINT32:\r\n                case b.UINT64:\r\n                case b.SINT32:\r\n                case b.SINT64:\r\n                case b.BOOL:\r\n                case b.ENUM:\r\n                case b.VHASH64:\r\n                    return c.VARINT;\r\n                case b.DOUBLE:\r\n                case b.FIXED64:\r\n                case b.SFIXED64:\r\n                case b.FHASH64:\r\n                    return c.FIXED64;\r\n                case b.STRING:\r\n                case b.MESSAGE:\r\n                case b.BYTES:\r\n                    return c.DELIMITED;\r\n                case b.FLOAT:\r\n                case b.FIXED32:\r\n                case b.SFIXED32:\r\n                    return c.FIXED32;\r\n                default:\r\n                    return c.INVALID;\r\n                }\r\n            };\r\n            jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;\r\n            jspb.BinaryConstants.FLOAT32_EPS = 1.401298464324817E-45;\r\n            jspb.BinaryConstants.FLOAT32_MIN = 1.1754943508222875E-38;\r\n            jspb.BinaryConstants.FLOAT32_MAX = 3.4028234663852886E38;\r\n            jspb.BinaryConstants.FLOAT64_EPS = 4.9E-324;\r\n            jspb.BinaryConstants.FLOAT64_MIN = 2.2250738585072014E-308;\r\n            jspb.BinaryConstants.FLOAT64_MAX = 1.7976931348623157E308;\r\n            jspb.BinaryConstants.TWO_TO_20 = 1048576;\r\n            jspb.BinaryConstants.TWO_TO_23 = 8388608;\r\n            jspb.BinaryConstants.TWO_TO_31 = 2147483648;\r\n            jspb.BinaryConstants.TWO_TO_32 = 4294967296;\r\n            jspb.BinaryConstants.TWO_TO_52 = 4503599627370496;\r\n            jspb.BinaryConstants.TWO_TO_63 = 0x7fffffffffffffff;\r\n            jspb.BinaryConstants.TWO_TO_64 = 1.8446744073709552E19;\r\n            jspb.BinaryConstants.ZERO_HASH = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\r\n            jspb.utils = {};\r\n            jspb.utils.split64Low = 0;\r\n            jspb.utils.split64High = 0;\r\n            jspb.utils.splitUint64 = function (a) {\r\n                var b = a >>> 0;\r\n                a = Math.floor((a - b) / jspb.BinaryConstants.TWO_TO_32) >>> 0;\r\n                jspb.utils.split64Low = b;\r\n                jspb.utils.split64High = a;\r\n            };\r\n            jspb.utils.splitInt64 = function (a) {\r\n                var b = 0 > a;\r\n                a = Math.abs(a);\r\n                var c = a >>> 0;\r\n                a = Math.floor((a - c) / jspb.BinaryConstants.TWO_TO_32);\r\n                a >>>= 0;\r\n                b && (a = ~a >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a++, 4294967295 < a && (a = 0)));\r\n                jspb.utils.split64Low = c;\r\n                jspb.utils.split64High = a;\r\n            };\r\n            jspb.utils.splitZigzag64 = function (a) {\r\n                var b = 0 > a;\r\n                a = 2 * Math.abs(a);\r\n                jspb.utils.splitUint64(a);\r\n                a = jspb.utils.split64Low;\r\n                var c = jspb.utils.split64High;\r\n                b && (0 == a ? 0 == c ? c = a = 4294967295 : (c--, a = 4294967295) : a--);\r\n                jspb.utils.split64Low = a;\r\n                jspb.utils.split64High = c;\r\n            };\r\n            jspb.utils.splitFloat32 = function (a) {\r\n                var b = 0 > a ? 1 : 0;\r\n                a = b ? -a : a;\r\n                var c;\r\n                0 === a ? 0 < 1 / a ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648) : isNaN(a) ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647) : a > jspb.BinaryConstants.FLOAT32_MAX ? (jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | 2139095040) >>> 0) : a < jspb.BinaryConstants.FLOAT32_MIN ? (a = Math.round(a / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | a) >>> 0) : (c = Math.floor(Math.log(a) /\r\n                    Math.LN2), a *= Math.pow(2, -c), a = Math.round(a * jspb.BinaryConstants.TWO_TO_23) & 8388607, jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | c + 127 << 23 | a) >>> 0);\r\n            };\r\n            jspb.utils.splitFloat64 = function (a) {\r\n                var b = 0 > a ? 1 : 0;\r\n                a = b ? -a : a;\r\n                if (0 === a) jspb.utils.split64High = 0 < 1 / a ? 0 : 2147483648, jspb.utils.split64Low = 0; else if (isNaN(a)) jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295; else if (a > jspb.BinaryConstants.FLOAT64_MAX) jspb.utils.split64High = (b << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0; else if (a < jspb.BinaryConstants.FLOAT64_MIN) {\r\n                    var c = a / Math.pow(2, -1074);\r\n                    a = c / jspb.BinaryConstants.TWO_TO_32;\r\n                    jspb.utils.split64High = (b << 31 | a) >>> 0;\r\n                    jspb.utils.split64Low = c >>> 0;\r\n                } else {\r\n                    var d =\r\n                        Math.floor(Math.log(a) / Math.LN2);\r\n                    1024 == d && (d = 1023);\r\n                    c = a * Math.pow(2, -d);\r\n                    a = c * jspb.BinaryConstants.TWO_TO_20 & 1048575;\r\n                    c = c * jspb.BinaryConstants.TWO_TO_52 >>> 0;\r\n                    jspb.utils.split64High = (b << 31 | d + 1023 << 20 | a) >>> 0;\r\n                    jspb.utils.split64Low = c;\r\n                }\r\n            };\r\n            jspb.utils.splitHash64 = function (a) {\r\n                var b = a.charCodeAt(0), c = a.charCodeAt(1), d = a.charCodeAt(2), e = a.charCodeAt(3),\r\n                    f = a.charCodeAt(4), g = a.charCodeAt(5), h = a.charCodeAt(6);\r\n                a = a.charCodeAt(7);\r\n                jspb.utils.split64Low = b + (c << 8) + (d << 16) + (e << 24) >>> 0;\r\n                jspb.utils.split64High = f + (g << 8) + (h << 16) + (a << 24) >>> 0;\r\n            };\r\n            jspb.utils.joinUint64 = function (a, b) {\r\n                return b * jspb.BinaryConstants.TWO_TO_32 + a;\r\n            };\r\n            jspb.utils.joinInt64 = function (a, b) {\r\n                var c = b & 2147483648;\r\n                c && (a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0));\r\n                var d = jspb.utils.joinUint64(a, b);\r\n                return c ? -d : d;\r\n            };\r\n            jspb.utils.joinZigzag64 = function (a, b) {\r\n                var c = a & 1;\r\n                a = (a >>> 1 | b << 31) >>> 0;\r\n                b >>>= 1;\r\n                c && (a = a + 1 >>> 0, 0 == a && (b = b + 1 >>> 0));\r\n                var d = jspb.utils.joinUint64(a, b);\r\n                return c ? -d : d;\r\n            };\r\n            jspb.utils.joinFloat32 = function (a, b) {\r\n                var c = 2 * (a >> 31) + 1, d = a >>> 23 & 255, e = a & 8388607;\r\n                return 255 == d ? e ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -149) * e : c * Math.pow(2, d - 150) * (e + Math.pow(2, 23));\r\n            };\r\n            jspb.utils.joinFloat64 = function (a, b) {\r\n                var c = 2 * (b >> 31) + 1, d = b >>> 20 & 2047, e = jspb.BinaryConstants.TWO_TO_32 * (b & 1048575) + a;\r\n                return 2047 == d ? e ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -1074) * e : c * Math.pow(2, d - 1075) * (e + jspb.BinaryConstants.TWO_TO_52);\r\n            };\r\n            jspb.utils.joinHash64 = function (a, b) {\r\n                return String.fromCharCode(a >>> 0 & 255, a >>> 8 & 255, a >>> 16 & 255, a >>> 24 & 255, b >>> 0 & 255, b >>> 8 & 255, b >>> 16 & 255, b >>> 24 & 255);\r\n            };\r\n            jspb.utils.DIGITS = \"0123456789abcdef\".split(\"\");\r\n            jspb.utils.joinUnsignedDecimalString = function (a, b) {\r\n                function c(a) {\r\n                    for (var b = 1E7, c = 0; 7 > c; c++) {\r\n                        var b = b / 10, d = a / b % 10 >>> 0;\r\n                        if (0 != d || h) h = !0, k += g[d];\r\n                    }\r\n                }\r\n\r\n                if (2097151 >= b) return \"\" + (jspb.BinaryConstants.TWO_TO_32 * b + a);\r\n                var d = (a >>> 24 | b << 8) >>> 0 & 16777215, e = b >> 16 & 65535,\r\n                    f = (a & 16777215) + 6777216 * d + 6710656 * e, d = d + 8147497 * e, e = 2 * e;\r\n                1E7 <= f && (d += Math.floor(f / 1E7), f %= 1E7);\r\n                1E7 <= d && (e += Math.floor(d / 1E7), d %= 1E7);\r\n                var g = jspb.utils.DIGITS, h = !1, k = \"\";\r\n                (e || h) && c(e);\r\n                (d || h) && c(d);\r\n                (f || h) && c(f);\r\n                return k;\r\n            };\r\n            jspb.utils.joinSignedDecimalString = function (a, b) {\r\n                var c = b & 2147483648;\r\n                c && (a = ~a + 1 >>> 0, b = ~b + (0 == a ? 1 : 0) >>> 0);\r\n                var d = jspb.utils.joinUnsignedDecimalString(a, b);\r\n                return c ? \"-\" + d : d;\r\n            };\r\n            jspb.utils.hash64ToDecimalString = function (a, b) {\r\n                jspb.utils.splitHash64(a);\r\n                var c = jspb.utils.split64Low, d = jspb.utils.split64High;\r\n                return b ? jspb.utils.joinSignedDecimalString(c, d) : jspb.utils.joinUnsignedDecimalString(c, d);\r\n            };\r\n            jspb.utils.hash64ArrayToDecimalStrings = function (a, b) {\r\n                for (var c = Array(a.length), d = 0; d < a.length; d++) c[d] = jspb.utils.hash64ToDecimalString(a[d], b);\r\n                return c;\r\n            };\r\n            jspb.utils.decimalStringToHash64 = function (a) {\r\n                function b(a, b) {\r\n                    for (var c = 0; 8 > c && (1 !== a || 0 < b); c++) {\r\n                        var d = a * e[c] + b;\r\n                        e[c] = d & 255;\r\n                        b = d >>> 8;\r\n                    }\r\n                }\r\n\r\n                function c() {\r\n                    for (var a = 0; 8 > a; a++) e[a] = ~e[a] & 255;\r\n                }\r\n\r\n                goog.asserts.assert(0 < a.length);\r\n                var d = !1;\r\n                \"-\" === a[0] && (d = !0, a = a.slice(1));\r\n                for (var e = [0, 0, 0, 0, 0, 0, 0, 0], f = 0; f < a.length; f++) b(10, jspb.utils.DIGITS.indexOf(a[f]));\r\n                d && (c(), b(1, 1));\r\n                return goog.crypt.byteArrayToString(e);\r\n            };\r\n            jspb.utils.splitDecimalString = function (a) {\r\n                jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\r\n            };\r\n            jspb.utils.hash64ToHexString = function (a) {\r\n                var b = Array(18);\r\n                b[0] = \"0\";\r\n                b[1] = \"x\";\r\n                for (var c = 0; 8 > c; c++) {\r\n                    var d = a.charCodeAt(7 - c);\r\n                    b[2 * c + 2] = jspb.utils.DIGITS[d >> 4];\r\n                    b[2 * c + 3] = jspb.utils.DIGITS[d & 15];\r\n                }\r\n                return b.join(\"\");\r\n            };\r\n            jspb.utils.hexStringToHash64 = function (a) {\r\n                a = a.toLowerCase();\r\n                goog.asserts.assert(18 == a.length);\r\n                goog.asserts.assert(\"0\" == a[0]);\r\n                goog.asserts.assert(\"x\" == a[1]);\r\n                for (var b = \"\", c = 0; 8 > c; c++) var d = jspb.utils.DIGITS.indexOf(a[2 * c + 2]), e = jspb.utils.DIGITS.indexOf(a[2 * c + 3]), b = String.fromCharCode(16 * d + e) + b;\r\n                return b;\r\n            };\r\n            jspb.utils.hash64ToNumber = function (a, b) {\r\n                jspb.utils.splitHash64(a);\r\n                var c = jspb.utils.split64Low, d = jspb.utils.split64High;\r\n                return b ? jspb.utils.joinInt64(c, d) : jspb.utils.joinUint64(c, d);\r\n            };\r\n            jspb.utils.numberToHash64 = function (a) {\r\n                jspb.utils.splitInt64(a);\r\n                return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.utils.countVarints = function (a, b, c) {\r\n                for (var d = 0, e = b; e < c; e++) d += a[e] >> 7;\r\n                return c - b - d;\r\n            };\r\n            jspb.utils.countVarintFields = function (a, b, c, d) {\r\n                var e = 0;\r\n                d = 8 * d + jspb.BinaryConstants.WireType.VARINT;\r\n                if (128 > d) for (; b < c && a[b++] == d;) for (e++; ;) {\r\n                    var f = a[b++];\r\n                    if (0 == (f & 128)) break;\r\n                } else for (; b < c;) {\r\n                    for (f = d; 128 < f;) {\r\n                        if (a[b] != (f & 127 | 128)) return e;\r\n                        b++;\r\n                        f >>= 7;\r\n                    }\r\n                    if (a[b++] != f) break;\r\n                    for (e++; f = a[b++], 0 != (f & 128);) ;\r\n                }\r\n                return e;\r\n            };\r\n            jspb.utils.countFixedFields_ = function (a, b, c, d, e) {\r\n                var f = 0;\r\n                if (128 > d) for (; b < c && a[b++] == d;) f++, b += e; else for (; b < c;) {\r\n                    for (var g = d; 128 < g;) {\r\n                        if (a[b++] != (g & 127 | 128)) return f;\r\n                        g >>= 7;\r\n                    }\r\n                    if (a[b++] != g) break;\r\n                    f++;\r\n                    b += e;\r\n                }\r\n                return f;\r\n            };\r\n            jspb.utils.countFixed32Fields = function (a, b, c, d) {\r\n                return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED32, 4);\r\n            };\r\n            jspb.utils.countFixed64Fields = function (a, b, c, d) {\r\n                return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED64, 8);\r\n            };\r\n            jspb.utils.countDelimitedFields = function (a, b, c, d) {\r\n                var e = 0;\r\n                for (d = 8 * d + jspb.BinaryConstants.WireType.DELIMITED; b < c;) {\r\n                    for (var f = d; 128 < f;) {\r\n                        if (a[b++] != (f & 127 | 128)) return e;\r\n                        f >>= 7;\r\n                    }\r\n                    if (a[b++] != f) break;\r\n                    e++;\r\n                    for (var g = 0, h = 1; f = a[b++], g += (f & 127) * h, h *= 128, 0 != (f & 128);) ;\r\n                    b += g;\r\n                }\r\n                return e;\r\n            };\r\n            jspb.utils.debugBytesToTextFormat = function (a) {\r\n                var b = \"\\\"\";\r\n                if (a) {\r\n                    a = jspb.utils.byteSourceToUint8Array(a);\r\n                    for (var c = 0; c < a.length; c++) b += \"\\\\x\", 16 > a[c] && (b += \"0\"), b += a[c].toString(16);\r\n                }\r\n                return b + \"\\\"\";\r\n            };\r\n            jspb.utils.debugScalarToTextFormat = function (a) {\r\n                return goog.isString(a) ? goog.string.quote(a) : a.toString();\r\n            };\r\n            jspb.utils.stringToByteArray = function (a) {\r\n                for (var b = new Uint8Array(a.length), c = 0; c < a.length; c++) {\r\n                    var d = a.charCodeAt(c);\r\n                    if (255 < d) throw Error(\"Conversion error: string contains codepoint outside of byte range\");\r\n                    b[c] = d;\r\n                }\r\n                return b;\r\n            };\r\n            jspb.utils.byteSourceToUint8Array = function (a) {\r\n                if (a.constructor === Uint8Array) return a;\r\n                if (a.constructor === ArrayBuffer || a.constructor === Array) return new Uint8Array(a);\r\n                if (a.constructor === String) return goog.crypt.base64.decodeStringToUint8Array(a);\r\n                goog.asserts.fail(\"Type not convertible to Uint8Array.\");\r\n                return new Uint8Array(0);\r\n            };\r\n            jspb.BinaryEncoder = function () {\r\n                this.buffer_ = [];\r\n            };\r\n            jspb.BinaryEncoder.prototype.length = function () {\r\n                return this.buffer_.length;\r\n            };\r\n            jspb.BinaryEncoder.prototype.end = function () {\r\n                var a = this.buffer_;\r\n                this.buffer_ = [];\r\n                return a;\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeSplitVarint64 = function (a, b) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(b == Math.floor(b));\r\n                goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                for (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32); 0 < b || 127 < a;) this.buffer_.push(a & 127 | 128), a = (a >>> 7 | b << 25) >>> 0, b >>>= 7;\r\n                this.buffer_.push(a);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeSplitFixed64 = function (a, b) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(b == Math.floor(b));\r\n                goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32);\r\n                this.writeUint32(a);\r\n                this.writeUint32(b);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                for (goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); 127 < a;) this.buffer_.push(a & 127 | 128), a >>>= 7;\r\n                this.buffer_.push(a);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeSignedVarint32 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                if (0 <= a) this.writeUnsignedVarint32(a); else {\r\n                    for (var b = 0; 9 > b; b++) this.buffer_.push(a & 127 | 128), a >>= 7;\r\n                    this.buffer_.push(1);\r\n                }\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\r\n                jspb.utils.splitInt64(a);\r\n                this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeSignedVarint64 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                jspb.utils.splitInt64(a);\r\n                this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeZigzagVarint32 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                this.writeUnsignedVarint32((a << 1 ^ a >> 31) >>> 0);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeZigzagVarint64 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                jspb.utils.splitZigzag64(a);\r\n                this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeZigzagVarint64String = function (a) {\r\n                this.writeZigzagVarint64(parseInt(a, 10));\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUint8 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(0 <= a && 256 > a);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUint16 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(0 <= a && 65536 > a);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n                this.buffer_.push(a >>> 8 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUint32 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n                this.buffer_.push(a >>> 8 & 255);\r\n                this.buffer_.push(a >>> 16 & 255);\r\n                this.buffer_.push(a >>> 24 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeUint64 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\r\n                jspb.utils.splitUint64(a);\r\n                this.writeUint32(jspb.utils.split64Low);\r\n                this.writeUint32(jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeInt8 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(-128 <= a && 128 > a);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeInt16 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(-32768 <= a && 32768 > a);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n                this.buffer_.push(a >>> 8 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeInt32 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                this.buffer_.push(a >>> 0 & 255);\r\n                this.buffer_.push(a >>> 8 & 255);\r\n                this.buffer_.push(a >>> 16 & 255);\r\n                this.buffer_.push(a >>> 24 & 255);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeInt64 = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\r\n                jspb.utils.splitInt64(a);\r\n                this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeInt64String = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(+a >= -jspb.BinaryConstants.TWO_TO_63 && +a < jspb.BinaryConstants.TWO_TO_63);\r\n                jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\r\n                this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeFloat = function (a) {\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT32_MAX && a <= jspb.BinaryConstants.FLOAT32_MAX);\r\n                jspb.utils.splitFloat32(a);\r\n                this.writeUint32(jspb.utils.split64Low);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeDouble = function (a) {\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT64_MAX && a <= jspb.BinaryConstants.FLOAT64_MAX);\r\n                jspb.utils.splitFloat64(a);\r\n                this.writeUint32(jspb.utils.split64Low);\r\n                this.writeUint32(jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeBool = function (a) {\r\n                goog.asserts.assert(goog.isBoolean(a) || goog.isNumber(a));\r\n                this.buffer_.push(a ? 1 : 0);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeEnum = function (a) {\r\n                goog.asserts.assert(a == Math.floor(a));\r\n                goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\r\n                this.writeSignedVarint32(a);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeBytes = function (a) {\r\n                this.buffer_.push.apply(this.buffer_, a);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeVarintHash64 = function (a) {\r\n                jspb.utils.splitHash64(a);\r\n                this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeFixedHash64 = function (a) {\r\n                jspb.utils.splitHash64(a);\r\n                this.writeUint32(jspb.utils.split64Low);\r\n                this.writeUint32(jspb.utils.split64High);\r\n            };\r\n            jspb.BinaryEncoder.prototype.writeString = function (a) {\r\n                for (var b = this.buffer_.length, c = 0; c < a.length; c++) {\r\n                    var d = a.charCodeAt(c);\r\n                    if (128 > d) this.buffer_.push(d); else if (2048 > d) this.buffer_.push(d >> 6 | 192), this.buffer_.push(d & 63 | 128); else if (65536 > d) if (55296 <= d && 56319 >= d && c + 1 < a.length) {\r\n                        var e = a.charCodeAt(c + 1);\r\n                        56320 <= e && 57343 >= e && (d = 1024 * (d - 55296) + e - 56320 + 65536, this.buffer_.push(d >> 18 | 240), this.buffer_.push(d >> 12 & 63 | 128), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128), c++);\r\n                    } else this.buffer_.push(d >>\r\n                        12 | 224), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128);\r\n                }\r\n                return this.buffer_.length - b;\r\n            };\r\n            jspb.BinaryWriter = function () {\r\n                this.blocks_ = [];\r\n                this.totalLength_ = 0;\r\n                this.encoder_ = new jspb.BinaryEncoder;\r\n                this.bookmarks_ = [];\r\n            };\r\n            jspb.BinaryWriter.prototype.appendUint8Array_ = function (a) {\r\n                var b = this.encoder_.end();\r\n                this.blocks_.push(b);\r\n                this.blocks_.push(a);\r\n                this.totalLength_ += b.length + a.length;\r\n            };\r\n            jspb.BinaryWriter.prototype.beginDelimited_ = function (a) {\r\n                this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                a = this.encoder_.end();\r\n                this.blocks_.push(a);\r\n                this.totalLength_ += a.length;\r\n                a.push(this.totalLength_);\r\n                return a;\r\n            };\r\n            jspb.BinaryWriter.prototype.endDelimited_ = function (a) {\r\n                var b = a.pop(), b = this.totalLength_ + this.encoder_.length() - b;\r\n                for (goog.asserts.assert(0 <= b); 127 < b;) a.push(b & 127 | 128), b >>>= 7, this.totalLength_++;\r\n                a.push(b);\r\n                this.totalLength_++;\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSerializedMessage = function (a, b, c) {\r\n                this.appendUint8Array_(a.subarray(b, c));\r\n            };\r\n            jspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function (a, b, c) {\r\n                null != a && null != b && null != c && this.writeSerializedMessage(a, b, c);\r\n            };\r\n            jspb.BinaryWriter.prototype.reset = function () {\r\n                this.blocks_ = [];\r\n                this.encoder_.end();\r\n                this.totalLength_ = 0;\r\n                this.bookmarks_ = [];\r\n            };\r\n            jspb.BinaryWriter.prototype.getResultBuffer = function () {\r\n                goog.asserts.assert(0 == this.bookmarks_.length);\r\n                for (var a = new Uint8Array(this.totalLength_ + this.encoder_.length()), b = this.blocks_, c = b.length, d = 0, e = 0; e < c; e++) {\r\n                    var f = b[e];\r\n                    a.set(f, d);\r\n                    d += f.length;\r\n                }\r\n                b = this.encoder_.end();\r\n                a.set(b, d);\r\n                d += b.length;\r\n                goog.asserts.assert(d == a.length);\r\n                this.blocks_ = [a];\r\n                return a;\r\n            };\r\n            jspb.BinaryWriter.prototype.getResultBase64String = function () {\r\n                return goog.crypt.base64.encodeByteArray(this.getResultBuffer());\r\n            };\r\n            jspb.BinaryWriter.prototype.beginSubMessage = function (a) {\r\n                this.bookmarks_.push(this.beginDelimited_(a));\r\n            };\r\n            jspb.BinaryWriter.prototype.endSubMessage = function () {\r\n                goog.asserts.assert(0 <= this.bookmarks_.length);\r\n                this.endDelimited_(this.bookmarks_.pop());\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFieldHeader_ = function (a, b) {\r\n                goog.asserts.assert(1 <= a && a == Math.floor(a));\r\n                this.encoder_.writeUnsignedVarint32(8 * a + b);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeAny = function (a, b, c) {\r\n                var d = jspb.BinaryConstants.FieldType;\r\n                switch (a) {\r\n                case d.DOUBLE:\r\n                    this.writeDouble(b, c);\r\n                    break;\r\n                case d.FLOAT:\r\n                    this.writeFloat(b, c);\r\n                    break;\r\n                case d.INT64:\r\n                    this.writeInt64(b, c);\r\n                    break;\r\n                case d.UINT64:\r\n                    this.writeUint64(b, c);\r\n                    break;\r\n                case d.INT32:\r\n                    this.writeInt32(b, c);\r\n                    break;\r\n                case d.FIXED64:\r\n                    this.writeFixed64(b, c);\r\n                    break;\r\n                case d.FIXED32:\r\n                    this.writeFixed32(b, c);\r\n                    break;\r\n                case d.BOOL:\r\n                    this.writeBool(b, c);\r\n                    break;\r\n                case d.STRING:\r\n                    this.writeString(b, c);\r\n                    break;\r\n                case d.GROUP:\r\n                    goog.asserts.fail(\"Group field type not supported in writeAny()\");\r\n                    break;\r\n                case d.MESSAGE:\r\n                    goog.asserts.fail(\"Message field type not supported in writeAny()\");\r\n                    break;\r\n                case d.BYTES:\r\n                    this.writeBytes(b, c);\r\n                    break;\r\n                case d.UINT32:\r\n                    this.writeUint32(b, c);\r\n                    break;\r\n                case d.ENUM:\r\n                    this.writeEnum(b, c);\r\n                    break;\r\n                case d.SFIXED32:\r\n                    this.writeSfixed32(b, c);\r\n                    break;\r\n                case d.SFIXED64:\r\n                    this.writeSfixed64(b, c);\r\n                    break;\r\n                case d.SINT32:\r\n                    this.writeSint32(b, c);\r\n                    break;\r\n                case d.SINT64:\r\n                    this.writeSint64(b, c);\r\n                    break;\r\n                case d.FHASH64:\r\n                    this.writeFixedHash64(b, c);\r\n                    break;\r\n                case d.VHASH64:\r\n                    this.writeVarintHash64(b, c);\r\n                    break;\r\n                default:\r\n                    goog.asserts.fail(\"Invalid field type in writeAny()\");\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSignedVarint32_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSignedVarint64_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeZigzagVarint32_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeZigzagVarint64_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeInt32 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeInt32String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = parseInt(b, 10);\r\n                    goog.asserts.assert(c >= -jspb.BinaryConstants.TWO_TO_31 && c < jspb.BinaryConstants.TWO_TO_31);\r\n                    this.writeSignedVarint32_(a, c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeInt64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeInt64String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = jspb.arith.Int64.fromString(b);\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT);\r\n                    this.encoder_.writeSplitVarint64(c.lo, c.hi);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUint32 = function (a, b) {\r\n                null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUint32String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = parseInt(b, 10);\r\n                    goog.asserts.assert(0 <= c && c < jspb.BinaryConstants.TWO_TO_32);\r\n                    this.writeUnsignedVarint32_(a, c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUint64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeUint64String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = jspb.arith.UInt64.fromString(b);\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT);\r\n                    this.encoder_.writeSplitVarint64(c.lo, c.hi);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSint32 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSint64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSint64String = function (a, b) {\r\n                null != b && (goog.asserts.assert(+b >= -jspb.BinaryConstants.TWO_TO_63 && +b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64String_(a, b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFixed32 = function (a, b) {\r\n                null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFixed64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFixed64String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = jspb.arith.UInt64.fromString(b);\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64);\r\n                    this.encoder_.writeSplitFixed64(c.lo, c.hi);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSfixed32 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSfixed64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeSfixed64String = function (a, b) {\r\n                if (null != b) {\r\n                    var c = jspb.arith.Int64.fromString(b);\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64);\r\n                    this.encoder_.writeSplitFixed64(c.lo, c.hi);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFloat = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeDouble = function (a, b) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeBool = function (a, b) {\r\n                null != b && (goog.asserts.assert(goog.isBoolean(b) || goog.isNumber(b)), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeEnum = function (a, b) {\r\n                null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeString = function (a, b) {\r\n                if (null != b) {\r\n                    var c = this.beginDelimited_(a);\r\n                    this.encoder_.writeString(b);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeBytes = function (a, b) {\r\n                if (null != b) {\r\n                    var c = jspb.utils.byteSourceToUint8Array(b);\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(c.length);\r\n                    this.appendUint8Array_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeMessage = function (a, b, c) {\r\n                null != b && (a = this.beginDelimited_(a), c(b, this), this.endDelimited_(a));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeGroup = function (a, b, c) {\r\n                null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b, this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeFixedHash64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeVarintHash64 = function (a, b) {\r\n                null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(b));\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedInt32 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeSignedVarint32_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedInt32String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeInt32String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedInt64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeSignedVarint64_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedInt64String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeInt64String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedUint32 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeUnsignedVarint32_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedUint32String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeUint32String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedUint64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeUnsignedVarint64_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedUint64String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeUint64String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSint32 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint32_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSint64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint64_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSint64String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint64String_(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedFixed32 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed32(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedFixed64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed64(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedFixed64String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed64String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed32(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed64(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed64String(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedFloat = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeFloat(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedDouble = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeDouble(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedBool = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeBool(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedEnum = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeEnum(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedString = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeString(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedBytes = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeBytes(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedMessage = function (a, b, c) {\r\n                if (null != b) for (var d = 0; d < b.length; d++) {\r\n                    var e = this.beginDelimited_(a);\r\n                    c(b[d], this);\r\n                    this.endDelimited_(e);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedGroup = function (a, b, c) {\r\n                if (null != b) for (var d = 0; d < b.length; d++) this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b[d], this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeFixedHash64(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function (a, b) {\r\n                if (null != b) for (var c = 0; c < b.length; c++) this.writeVarintHash64(a, b[c]);\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedInt32 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeSignedVarint32(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedInt32String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeSignedVarint32(parseInt(b[d], 10));\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedInt64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeSignedVarint64(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedInt64String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) {\r\n                        var e = jspb.arith.Int64.fromString(b[d]);\r\n                        this.encoder_.writeSplitVarint64(e.lo, e.hi);\r\n                    }\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedUint32 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeUnsignedVarint32(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedUint32String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeUnsignedVarint32(parseInt(b[d], 10));\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedUint64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeUnsignedVarint64(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedUint64String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) {\r\n                        var e = jspb.arith.UInt64.fromString(b[d]);\r\n                        this.encoder_.writeSplitVarint64(e.lo, e.hi);\r\n                    }\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSint32 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeZigzagVarint32(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSint64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeZigzagVarint64(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSint64String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeZigzagVarint64(parseInt(b[d], 10));\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedFixed32 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeUint32(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedFixed64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeUint64(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedFixed64String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) {\r\n                        var d = jspb.arith.UInt64.fromString(b[c]);\r\n                        this.encoder_.writeSplitFixed64(d.lo, d.hi);\r\n                    }\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSfixed32 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeInt32(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSfixed64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeInt64(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedSfixed64String = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeInt64String(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedFloat = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(4 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeFloat(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedDouble = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeDouble(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedBool = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeBool(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedEnum = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeEnum(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedFixedHash64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\r\n                    this.encoder_.writeUnsignedVarint32(8 * b.length);\r\n                    for (var c = 0; c < b.length; c++) this.encoder_.writeFixedHash64(b[c]);\r\n                }\r\n            };\r\n            jspb.BinaryWriter.prototype.writePackedVarintHash64 = function (a, b) {\r\n                if (null != b && b.length) {\r\n                    for (var c = this.beginDelimited_(a), d = 0; d < b.length; d++) this.encoder_.writeVarintHash64(b[d]);\r\n                    this.endDelimited_(c);\r\n                }\r\n            };\r\n            jspb.BinaryIterator = function (a, b, c) {\r\n                this.elements_ = this.nextMethod_ = this.decoder_ = null;\r\n                this.cursor_ = 0;\r\n                this.nextValue_ = null;\r\n                this.atEnd_ = !0;\r\n                this.init_(a, b, c);\r\n            };\r\n            jspb.BinaryIterator.prototype.init_ = function (a, b, c) {\r\n                a && b && (this.decoder_ = a, this.nextMethod_ = b);\r\n                this.elements_ = c || null;\r\n                this.cursor_ = 0;\r\n                this.nextValue_ = null;\r\n                this.atEnd_ = !this.decoder_ && !this.elements_;\r\n                this.next();\r\n            };\r\n            jspb.BinaryIterator.instanceCache_ = [];\r\n            jspb.BinaryIterator.alloc = function (a, b, c) {\r\n                if (jspb.BinaryIterator.instanceCache_.length) {\r\n                    var d = jspb.BinaryIterator.instanceCache_.pop();\r\n                    d.init_(a, b, c);\r\n                    return d;\r\n                }\r\n                return new jspb.BinaryIterator(a, b, c);\r\n            };\r\n            jspb.BinaryIterator.prototype.free = function () {\r\n                this.clear();\r\n                100 > jspb.BinaryIterator.instanceCache_.length && jspb.BinaryIterator.instanceCache_.push(this);\r\n            };\r\n            jspb.BinaryIterator.prototype.clear = function () {\r\n                this.decoder_ && this.decoder_.free();\r\n                this.elements_ = this.nextMethod_ = this.decoder_ = null;\r\n                this.cursor_ = 0;\r\n                this.nextValue_ = null;\r\n                this.atEnd_ = !0;\r\n            };\r\n            jspb.BinaryIterator.prototype.get = function () {\r\n                return this.nextValue_;\r\n            };\r\n            jspb.BinaryIterator.prototype.atEnd = function () {\r\n                return this.atEnd_;\r\n            };\r\n            jspb.BinaryIterator.prototype.next = function () {\r\n                var a = this.nextValue_;\r\n                this.decoder_ ? this.decoder_.atEnd() ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.nextMethod_.call(this.decoder_) : this.elements_ && (this.cursor_ == this.elements_.length ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.elements_[this.cursor_++]);\r\n                return a;\r\n            };\r\n            jspb.BinaryDecoder = function (a, b, c) {\r\n                this.bytes_ = null;\r\n                this.tempHigh_ = this.tempLow_ = this.cursor_ = this.end_ = this.start_ = 0;\r\n                this.error_ = !1;\r\n                a && this.setBlock(a, b, c);\r\n            };\r\n            jspb.BinaryDecoder.instanceCache_ = [];\r\n            jspb.BinaryDecoder.alloc = function (a, b, c) {\r\n                if (jspb.BinaryDecoder.instanceCache_.length) {\r\n                    var d = jspb.BinaryDecoder.instanceCache_.pop();\r\n                    a && d.setBlock(a, b, c);\r\n                    return d;\r\n                }\r\n                return new jspb.BinaryDecoder(a, b, c);\r\n            };\r\n            jspb.BinaryDecoder.prototype.free = function () {\r\n                this.clear();\r\n                100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);\r\n            };\r\n            jspb.BinaryDecoder.prototype.clone = function () {\r\n                return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.clear = function () {\r\n                this.bytes_ = null;\r\n                this.cursor_ = this.end_ = this.start_ = 0;\r\n                this.error_ = !1;\r\n            };\r\n            jspb.BinaryDecoder.prototype.getBuffer = function () {\r\n                return this.bytes_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.setBlock = function (a, b, c) {\r\n                this.bytes_ = jspb.utils.byteSourceToUint8Array(a);\r\n                this.start_ = goog.isDef(b) ? b : 0;\r\n                this.end_ = goog.isDef(c) ? this.start_ + c : this.bytes_.length;\r\n                this.cursor_ = this.start_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.getEnd = function () {\r\n                return this.end_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.setEnd = function (a) {\r\n                this.end_ = a;\r\n            };\r\n            jspb.BinaryDecoder.prototype.reset = function () {\r\n                this.cursor_ = this.start_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.getCursor = function () {\r\n                return this.cursor_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.setCursor = function (a) {\r\n                this.cursor_ = a;\r\n            };\r\n            jspb.BinaryDecoder.prototype.advance = function (a) {\r\n                this.cursor_ += a;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.atEnd = function () {\r\n                return this.cursor_ == this.end_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.pastEnd = function () {\r\n                return this.cursor_ > this.end_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.getError = function () {\r\n                return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readSplitVarint64_ = function () {\r\n                for (var a, b = 0, c, d = 0; 4 > d; d++) if (a = this.bytes_[this.cursor_++], b |= (a & 127) << 7 * d, 128 > a) {\r\n                    this.tempLow_ = b >>> 0;\r\n                    this.tempHigh_ = 0;\r\n                    return;\r\n                }\r\n                a = this.bytes_[this.cursor_++];\r\n                b |= (a & 127) << 28;\r\n                c = 0 | (a & 127) >> 4;\r\n                if (128 > a) this.tempLow_ = b >>> 0, this.tempHigh_ = c >>> 0; else {\r\n                    for (d = 0; 5 > d; d++) if (a = this.bytes_[this.cursor_++], c |= (a & 127) << 7 * d + 3, 128 > a) {\r\n                        this.tempLow_ = b >>> 0;\r\n                        this.tempHigh_ = c >>> 0;\r\n                        return;\r\n                    }\r\n                    goog.asserts.fail(\"Failed to read varint, encoding is invalid.\");\r\n                    this.error_ =\r\n                        !0;\r\n                }\r\n            };\r\n            jspb.BinaryDecoder.prototype.skipVarint = function () {\r\n                for (; this.bytes_[this.cursor_] & 128;) this.cursor_++;\r\n                this.cursor_++;\r\n            };\r\n            jspb.BinaryDecoder.prototype.unskipVarint = function (a) {\r\n                for (; 128 < a;) this.cursor_--, a >>>= 7;\r\n                this.cursor_--;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function () {\r\n                var a, b = this.bytes_;\r\n                a = b[this.cursor_ + 0];\r\n                var c = a & 127;\r\n                if (128 > a) return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                a = b[this.cursor_ + 1];\r\n                c |= (a & 127) << 7;\r\n                if (128 > a) return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                a = b[this.cursor_ + 2];\r\n                c |= (a & 127) << 14;\r\n                if (128 > a) return this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), c;\r\n                a = b[this.cursor_ + 3];\r\n                c |= (a & 127) << 21;\r\n                if (128 > a) return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <=\r\n                    this.end_), c;\r\n                a = b[this.cursor_ + 4];\r\n                c |= (a & 15) << 28;\r\n                if (128 > a) return this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), c >>> 0;\r\n                this.cursor_ += 5;\r\n                128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && 128 <= b[this.cursor_++] && goog.asserts.assert(!1);\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return c;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32;\r\n            jspb.BinaryDecoder.prototype.readUnsignedVarint32String = function () {\r\n                return this.readUnsignedVarint32().toString();\r\n            };\r\n            jspb.BinaryDecoder.prototype.readSignedVarint32String = function () {\r\n                return this.readSignedVarint32().toString();\r\n            };\r\n            jspb.BinaryDecoder.prototype.readZigzagVarint32 = function () {\r\n                var a = this.readUnsignedVarint32();\r\n                return a >>> 1 ^ -(a & 1);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUnsignedVarint64 = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinUint64(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUnsignedVarint64String = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinUnsignedDecimalString(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readSignedVarint64 = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinInt64(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readSignedVarint64String = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinSignedDecimalString(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readZigzagVarint64 = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinZigzag64(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readZigzagVarint64String = function () {\r\n                return this.readZigzagVarint64().toString();\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUint8 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0];\r\n                this.cursor_ += 1;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return a;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUint16 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1];\r\n                this.cursor_ += 2;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return a << 0 | b << 8;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUint32 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1],\r\n                    c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];\r\n                this.cursor_ += 4;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return (a << 0 | b << 8 | c << 16 | d << 24) >>> 0;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUint64 = function () {\r\n                var a = this.readUint32(), b = this.readUint32();\r\n                return jspb.utils.joinUint64(a, b);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readUint64String = function () {\r\n                var a = this.readUint32(), b = this.readUint32();\r\n                return jspb.utils.joinUnsignedDecimalString(a, b);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readInt8 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0];\r\n                this.cursor_ += 1;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return a << 24 >> 24;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readInt16 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1];\r\n                this.cursor_ += 2;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return (a << 0 | b << 8) << 16 >> 16;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readInt32 = function () {\r\n                var a = this.bytes_[this.cursor_ + 0], b = this.bytes_[this.cursor_ + 1],\r\n                    c = this.bytes_[this.cursor_ + 2], d = this.bytes_[this.cursor_ + 3];\r\n                this.cursor_ += 4;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return a << 0 | b << 8 | c << 16 | d << 24;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readInt64 = function () {\r\n                var a = this.readUint32(), b = this.readUint32();\r\n                return jspb.utils.joinInt64(a, b);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readInt64String = function () {\r\n                var a = this.readUint32(), b = this.readUint32();\r\n                return jspb.utils.joinSignedDecimalString(a, b);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readFloat = function () {\r\n                var a = this.readUint32();\r\n                return jspb.utils.joinFloat32(a, 0);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readDouble = function () {\r\n                var a = this.readUint32(), b = this.readUint32();\r\n                return jspb.utils.joinFloat64(a, b);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readBool = function () {\r\n                return !!this.bytes_[this.cursor_++];\r\n            };\r\n            jspb.BinaryDecoder.prototype.readEnum = function () {\r\n                return this.readSignedVarint32();\r\n            };\r\n            jspb.BinaryDecoder.prototype.readString = function (a) {\r\n                var b = this.bytes_, c = this.cursor_;\r\n                a = c + a;\r\n                for (var d = [], e = \"\"; c < a;) {\r\n                    var f = b[c++];\r\n                    if (128 > f) d.push(f); else if (192 > f) continue; else if (224 > f) {\r\n                        var g = b[c++];\r\n                        d.push((f & 31) << 6 | g & 63);\r\n                    } else if (240 > f) {\r\n                        var g = b[c++], h = b[c++];\r\n                        d.push((f & 15) << 12 | (g & 63) << 6 | h & 63);\r\n                    } else if (248 > f) {\r\n                        var g = b[c++], h = b[c++], k = b[c++],\r\n                            f = (f & 7) << 18 | (g & 63) << 12 | (h & 63) << 6 | k & 63, f = f - 65536;\r\n                        d.push((f >> 10 & 1023) + 55296, (f & 1023) + 56320);\r\n                    }\r\n                    8192 <= d.length && (e += String.fromCharCode.apply(null, d), d.length = 0);\r\n                }\r\n                e += goog.crypt.byteArrayToString(d);\r\n                this.cursor_ = c;\r\n                return e;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readStringWithLength = function () {\r\n                var a = this.readUnsignedVarint32();\r\n                return this.readString(a);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readBytes = function (a) {\r\n                if (0 > a || this.cursor_ + a > this.bytes_.length) return this.error_ = !0, goog.asserts.fail(\"Invalid byte length!\"), new Uint8Array(0);\r\n                var b = this.bytes_.subarray(this.cursor_, this.cursor_ + a);\r\n                this.cursor_ += a;\r\n                goog.asserts.assert(this.cursor_ <= this.end_);\r\n                return b;\r\n            };\r\n            jspb.BinaryDecoder.prototype.readVarintHash64 = function () {\r\n                this.readSplitVarint64_();\r\n                return jspb.utils.joinHash64(this.tempLow_, this.tempHigh_);\r\n            };\r\n            jspb.BinaryDecoder.prototype.readFixedHash64 = function () {\r\n                var a = this.bytes_, b = this.cursor_, c = a[b + 0], d = a[b + 1], e = a[b + 2], f = a[b + 3],\r\n                    g = a[b + 4], h = a[b + 5], k = a[b + 6], a = a[b + 7];\r\n                this.cursor_ += 8;\r\n                return String.fromCharCode(c, d, e, f, g, h, k, a);\r\n            };\r\n            jspb.BinaryReader = function (a, b, c) {\r\n                this.decoder_ = jspb.BinaryDecoder.alloc(a, b, c);\r\n                this.fieldCursor_ = this.decoder_.getCursor();\r\n                this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                this.error_ = !1;\r\n                this.readCallbacks_ = null;\r\n            };\r\n            jspb.BinaryReader.instanceCache_ = [];\r\n            jspb.BinaryReader.alloc = function (a, b, c) {\r\n                if (jspb.BinaryReader.instanceCache_.length) {\r\n                    var d = jspb.BinaryReader.instanceCache_.pop();\r\n                    a && d.decoder_.setBlock(a, b, c);\r\n                    return d;\r\n                }\r\n                return new jspb.BinaryReader(a, b, c);\r\n            };\r\n            jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;\r\n            jspb.BinaryReader.prototype.free = function () {\r\n                this.decoder_.clear();\r\n                this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n                this.error_ = !1;\r\n                this.readCallbacks_ = null;\r\n                100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);\r\n            };\r\n            jspb.BinaryReader.prototype.getFieldCursor = function () {\r\n                return this.fieldCursor_;\r\n            };\r\n            jspb.BinaryReader.prototype.getCursor = function () {\r\n                return this.decoder_.getCursor();\r\n            };\r\n            jspb.BinaryReader.prototype.getBuffer = function () {\r\n                return this.decoder_.getBuffer();\r\n            };\r\n            jspb.BinaryReader.prototype.getFieldNumber = function () {\r\n                return this.nextField_;\r\n            };\r\n            jspb.BinaryReader.prototype.getWireType = function () {\r\n                return this.nextWireType_;\r\n            };\r\n            jspb.BinaryReader.prototype.isEndGroup = function () {\r\n                return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;\r\n            };\r\n            jspb.BinaryReader.prototype.getError = function () {\r\n                return this.error_ || this.decoder_.getError();\r\n            };\r\n            jspb.BinaryReader.prototype.setBlock = function (a, b, c) {\r\n                this.decoder_.setBlock(a, b, c);\r\n                this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n            };\r\n            jspb.BinaryReader.prototype.reset = function () {\r\n                this.decoder_.reset();\r\n                this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\r\n                this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\r\n            };\r\n            jspb.BinaryReader.prototype.advance = function (a) {\r\n                this.decoder_.advance(a);\r\n            };\r\n            jspb.BinaryReader.prototype.nextField = function () {\r\n                if (this.decoder_.atEnd()) return !1;\r\n                if (this.getError()) return goog.asserts.fail(\"Decoder hit an error\"), !1;\r\n                this.fieldCursor_ = this.decoder_.getCursor();\r\n                var a = this.decoder_.readUnsignedVarint32(), b = a >>> 3, a = a & 7;\r\n                if (a != jspb.BinaryConstants.WireType.VARINT && a != jspb.BinaryConstants.WireType.FIXED32 && a != jspb.BinaryConstants.WireType.FIXED64 && a != jspb.BinaryConstants.WireType.DELIMITED && a != jspb.BinaryConstants.WireType.START_GROUP && a != jspb.BinaryConstants.WireType.END_GROUP) return goog.asserts.fail(\"Invalid wire type\"),\r\n                this.error_ = !0, !1;\r\n                this.nextField_ = b;\r\n                this.nextWireType_ = a;\r\n                return !0;\r\n            };\r\n            jspb.BinaryReader.prototype.unskipHeader = function () {\r\n                this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);\r\n            };\r\n            jspb.BinaryReader.prototype.skipMatchingFields = function () {\r\n                var a = this.nextField_;\r\n                for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == a;) this.skipField();\r\n                this.decoder_.atEnd() || this.unskipHeader();\r\n            };\r\n            jspb.BinaryReader.prototype.skipVarintField = function () {\r\n                this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail(\"Invalid wire type for skipVarintField\"), this.skipField()) : this.decoder_.skipVarint();\r\n            };\r\n            jspb.BinaryReader.prototype.skipDelimitedField = function () {\r\n                if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED) goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"), this.skipField(); else {\r\n                    var a = this.decoder_.readUnsignedVarint32();\r\n                    this.decoder_.advance(a);\r\n                }\r\n            };\r\n            jspb.BinaryReader.prototype.skipFixed32Field = function () {\r\n                this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"), this.skipField()) : this.decoder_.advance(4);\r\n            };\r\n            jspb.BinaryReader.prototype.skipFixed64Field = function () {\r\n                this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"), this.skipField()) : this.decoder_.advance(8);\r\n            };\r\n            jspb.BinaryReader.prototype.skipGroup = function () {\r\n                var a = [this.nextField_];\r\n                do {\r\n                    if (!this.nextField()) {\r\n                        goog.asserts.fail(\"Unmatched start-group tag: stream EOF\");\r\n                        this.error_ = !0;\r\n                        break;\r\n                    }\r\n                    if (this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP) a.push(this.nextField_); else if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP && this.nextField_ != a.pop()) {\r\n                        goog.asserts.fail(\"Unmatched end-group tag\");\r\n                        this.error_ = !0;\r\n                        break;\r\n                    }\r\n                } while (0 < a.length);\r\n            };\r\n            jspb.BinaryReader.prototype.skipField = function () {\r\n                switch (this.nextWireType_) {\r\n                case jspb.BinaryConstants.WireType.VARINT:\r\n                    this.skipVarintField();\r\n                    break;\r\n                case jspb.BinaryConstants.WireType.FIXED64:\r\n                    this.skipFixed64Field();\r\n                    break;\r\n                case jspb.BinaryConstants.WireType.DELIMITED:\r\n                    this.skipDelimitedField();\r\n                    break;\r\n                case jspb.BinaryConstants.WireType.FIXED32:\r\n                    this.skipFixed32Field();\r\n                    break;\r\n                case jspb.BinaryConstants.WireType.START_GROUP:\r\n                    this.skipGroup();\r\n                    break;\r\n                default:\r\n                    goog.asserts.fail(\"Invalid wire encoding for field.\");\r\n                }\r\n            };\r\n            jspb.BinaryReader.prototype.registerReadCallback = function (a, b) {\r\n                goog.isNull(this.readCallbacks_) && (this.readCallbacks_ = {});\r\n                goog.asserts.assert(!this.readCallbacks_[a]);\r\n                this.readCallbacks_[a] = b;\r\n            };\r\n            jspb.BinaryReader.prototype.runReadCallback = function (a) {\r\n                goog.asserts.assert(!goog.isNull(this.readCallbacks_));\r\n                a = this.readCallbacks_[a];\r\n                goog.asserts.assert(a);\r\n                return a(this);\r\n            };\r\n            jspb.BinaryReader.prototype.readAny = function (a) {\r\n                this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(a);\r\n                var b = jspb.BinaryConstants.FieldType;\r\n                switch (a) {\r\n                case b.DOUBLE:\r\n                    return this.readDouble();\r\n                case b.FLOAT:\r\n                    return this.readFloat();\r\n                case b.INT64:\r\n                    return this.readInt64();\r\n                case b.UINT64:\r\n                    return this.readUint64();\r\n                case b.INT32:\r\n                    return this.readInt32();\r\n                case b.FIXED64:\r\n                    return this.readFixed64();\r\n                case b.FIXED32:\r\n                    return this.readFixed32();\r\n                case b.BOOL:\r\n                    return this.readBool();\r\n                case b.STRING:\r\n                    return this.readString();\r\n                case b.GROUP:\r\n                    goog.asserts.fail(\"Group field type not supported in readAny()\");\r\n                case b.MESSAGE:\r\n                    goog.asserts.fail(\"Message field type not supported in readAny()\");\r\n                case b.BYTES:\r\n                    return this.readBytes();\r\n                case b.UINT32:\r\n                    return this.readUint32();\r\n                case b.ENUM:\r\n                    return this.readEnum();\r\n                case b.SFIXED32:\r\n                    return this.readSfixed32();\r\n                case b.SFIXED64:\r\n                    return this.readSfixed64();\r\n                case b.SINT32:\r\n                    return this.readSint32();\r\n                case b.SINT64:\r\n                    return this.readSint64();\r\n                case b.FHASH64:\r\n                    return this.readFixedHash64();\r\n                case b.VHASH64:\r\n                    return this.readVarintHash64();\r\n                default:\r\n                    goog.asserts.fail(\"Invalid field type in readAny()\");\r\n                }\r\n                return 0;\r\n            };\r\n            jspb.BinaryReader.prototype.readMessage = function (a, b) {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                var c = this.decoder_.getEnd(), d = this.decoder_.readUnsignedVarint32(),\r\n                    d = this.decoder_.getCursor() + d;\r\n                this.decoder_.setEnd(d);\r\n                b(a, this);\r\n                this.decoder_.setCursor(d);\r\n                this.decoder_.setEnd(c);\r\n            };\r\n            jspb.BinaryReader.prototype.readGroup = function (a, b, c) {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP);\r\n                goog.asserts.assert(this.nextField_ == a);\r\n                c(b, this);\r\n                this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"), this.error_ = !0);\r\n            };\r\n            jspb.BinaryReader.prototype.getFieldDecoder = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                var a = this.decoder_.readUnsignedVarint32(), b = this.decoder_.getCursor(), c = b + a,\r\n                    a = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), b, a);\r\n                this.decoder_.setCursor(c);\r\n                return a;\r\n            };\r\n            jspb.BinaryReader.prototype.readInt32 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readSignedVarint32();\r\n            };\r\n            jspb.BinaryReader.prototype.readInt32String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readSignedVarint32String();\r\n            };\r\n            jspb.BinaryReader.prototype.readInt64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readSignedVarint64();\r\n            };\r\n            jspb.BinaryReader.prototype.readInt64String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readSignedVarint64String();\r\n            };\r\n            jspb.BinaryReader.prototype.readUint32 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readUnsignedVarint32();\r\n            };\r\n            jspb.BinaryReader.prototype.readUint32String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readUnsignedVarint32String();\r\n            };\r\n            jspb.BinaryReader.prototype.readUint64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readUnsignedVarint64();\r\n            };\r\n            jspb.BinaryReader.prototype.readUint64String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readUnsignedVarint64String();\r\n            };\r\n            jspb.BinaryReader.prototype.readSint32 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readZigzagVarint32();\r\n            };\r\n            jspb.BinaryReader.prototype.readSint64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readZigzagVarint64();\r\n            };\r\n            jspb.BinaryReader.prototype.readSint64String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readZigzagVarint64String();\r\n            };\r\n            jspb.BinaryReader.prototype.readFixed32 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                return this.decoder_.readUint32();\r\n            };\r\n            jspb.BinaryReader.prototype.readFixed64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readUint64();\r\n            };\r\n            jspb.BinaryReader.prototype.readFixed64String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readUint64String();\r\n            };\r\n            jspb.BinaryReader.prototype.readSfixed32 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                return this.decoder_.readInt32();\r\n            };\r\n            jspb.BinaryReader.prototype.readSfixed32String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                return this.decoder_.readInt32().toString();\r\n            };\r\n            jspb.BinaryReader.prototype.readSfixed64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readInt64();\r\n            };\r\n            jspb.BinaryReader.prototype.readSfixed64String = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readInt64String();\r\n            };\r\n            jspb.BinaryReader.prototype.readFloat = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\r\n                return this.decoder_.readFloat();\r\n            };\r\n            jspb.BinaryReader.prototype.readDouble = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readDouble();\r\n            };\r\n            jspb.BinaryReader.prototype.readBool = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return !!this.decoder_.readUnsignedVarint32();\r\n            };\r\n            jspb.BinaryReader.prototype.readEnum = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readSignedVarint64();\r\n            };\r\n            jspb.BinaryReader.prototype.readString = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                var a = this.decoder_.readUnsignedVarint32();\r\n                return this.decoder_.readString(a);\r\n            };\r\n            jspb.BinaryReader.prototype.readBytes = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                var a = this.decoder_.readUnsignedVarint32();\r\n                return this.decoder_.readBytes(a);\r\n            };\r\n            jspb.BinaryReader.prototype.readVarintHash64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\r\n                return this.decoder_.readVarintHash64();\r\n            };\r\n            jspb.BinaryReader.prototype.readFixedHash64 = function () {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\r\n                return this.decoder_.readFixedHash64();\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedField_ = function (a) {\r\n                goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\r\n                for (var b = this.decoder_.readUnsignedVarint32(), b = this.decoder_.getCursor() + b, c = []; this.decoder_.getCursor() < b;) c.push(a.call(this.decoder_));\r\n                return c;\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedInt32 = function () {\r\n                return this.readPackedField_(this.decoder_.readSignedVarint32);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedInt32String = function () {\r\n                return this.readPackedField_(this.decoder_.readSignedVarint32String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedInt64 = function () {\r\n                return this.readPackedField_(this.decoder_.readSignedVarint64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedInt64String = function () {\r\n                return this.readPackedField_(this.decoder_.readSignedVarint64String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedUint32 = function () {\r\n                return this.readPackedField_(this.decoder_.readUnsignedVarint32);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedUint32String = function () {\r\n                return this.readPackedField_(this.decoder_.readUnsignedVarint32String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedUint64 = function () {\r\n                return this.readPackedField_(this.decoder_.readUnsignedVarint64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedUint64String = function () {\r\n                return this.readPackedField_(this.decoder_.readUnsignedVarint64String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSint32 = function () {\r\n                return this.readPackedField_(this.decoder_.readZigzagVarint32);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSint64 = function () {\r\n                return this.readPackedField_(this.decoder_.readZigzagVarint64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSint64String = function () {\r\n                return this.readPackedField_(this.decoder_.readZigzagVarint64String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedFixed32 = function () {\r\n                return this.readPackedField_(this.decoder_.readUint32);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedFixed64 = function () {\r\n                return this.readPackedField_(this.decoder_.readUint64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedFixed64String = function () {\r\n                return this.readPackedField_(this.decoder_.readUint64String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSfixed32 = function () {\r\n                return this.readPackedField_(this.decoder_.readInt32);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSfixed64 = function () {\r\n                return this.readPackedField_(this.decoder_.readInt64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedSfixed64String = function () {\r\n                return this.readPackedField_(this.decoder_.readInt64String);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedFloat = function () {\r\n                return this.readPackedField_(this.decoder_.readFloat);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedDouble = function () {\r\n                return this.readPackedField_(this.decoder_.readDouble);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedBool = function () {\r\n                return this.readPackedField_(this.decoder_.readBool);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedEnum = function () {\r\n                return this.readPackedField_(this.decoder_.readEnum);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedVarintHash64 = function () {\r\n                return this.readPackedField_(this.decoder_.readVarintHash64);\r\n            };\r\n            jspb.BinaryReader.prototype.readPackedFixedHash64 = function () {\r\n                return this.readPackedField_(this.decoder_.readFixedHash64);\r\n            };\r\n            jspb.Export = {};\r\n            exports.Map = jspb.Map;\r\n            exports.Message = jspb.Message;\r\n            exports.BinaryReader = jspb.BinaryReader;\r\n            exports.BinaryWriter = jspb.BinaryWriter;\r\n            exports.ExtensionFieldInfo = jspb.ExtensionFieldInfo;\r\n            exports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo;\r\n            exports.exportSymbol = goog.exportSymbol;\r\n            exports.inherits = goog.inherits;\r\n            exports.object = {extend: goog.object.extend};\r\n            exports.typeOf = goog.typeOf;\r\n\r\n        }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\r\n    }, {}], 2: [function (_require, module, exports) {\r\n        /**\r\n         * @fileoverview\r\n         * @enhanceable\r\n         * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n         *     field starts with 'MSG_' and isn't a translatable message.\r\n         * @public\r\n         */\r\n        // GENERATED CODE -- DO NOT EDIT!\r\n\r\n        var jspb = _require(\"google-protobuf\");\r\n        var goog = jspb;\r\n        var global = window;// var global = Function('return this')();\r\n\r\n        goog.exportSymbol(\"proto.stream.ErrorCode\", null, global);\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.ErrorCode = {\r\n            NOERROR: 0,\r\n            OK: 200,\r\n            ACCEPTED: 202,\r\n            NOCONTENT: 204,\r\n            BADREQUEST: 400,\r\n            UNAUTHORIZED: 401,\r\n            SIGNATUREFAILED: 402,\r\n            FORBIDDEN: 403,\r\n            NOTFOUND: 404,\r\n            INTERNALSERVERERROR: 500,\r\n            NOTIMPLEMENTED: 501,\r\n            BADGATEWAY: 502,\r\n            SERVICEUNAVAILABLE: 503\r\n        };\r\n\r\n        goog.object.extend(exports, proto.stream);\r\n\r\n    }, {\"google-protobuf\": 1}], 3: [function (_require, module, exports) {\r\n        var myProto = _require(\"./sdk_pb\");\r\n        var myProto1 = _require(\"./gateway_pb\");\r\n        var myProto2 = _require(\"./errorcode_pb\");\r\n        module.exports = {\r\n            DataProto: myProto,\r\n            DataProto: myProto1,\r\n            DataProto: myProto2\r\n        };\r\n    }, {\"./errorcode_pb\": 2, \"./gateway_pb\": 4, \"./sdk_pb\": 5}], 4: [function (_require, module, exports) {\r\n        /**\r\n         * @fileoverview\r\n         * @enhanceable\r\n         * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n         *     field starts with 'MSG_' and isn't a translatable message.\r\n         * @public\r\n         */\r\n        // GENERATED CODE -- DO NOT EDIT!\r\n\r\n        var jspb = _require(\"google-protobuf\");\r\n        var goog = jspb;\r\n        var global = window;// var global = Function('return this')();\r\n\r\n        var errorcode_pb = _require(\"./errorcode_pb.js\");\r\n        goog.exportSymbol(\"proto.stream.BookInfo\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CmdId\", null, global);\r\n        goog.exportSymbol(\"proto.stream.ConnDetailV2\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CreateRoom\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CreateRoomRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.DisconnectReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.DisconnectRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomDetailReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomDetailRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomList\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomListExReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomListExRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.GetRoomListRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.HeartbeatReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.HeartbeatRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOpenNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOpenReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOpenRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOverNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOverReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinOverRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinRoomReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinRoomRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.JoinRoomType\", null, global);\r\n        goog.exportSymbol(\"proto.stream.KickPlayer\", null, global);\r\n        goog.exportSymbol(\"proto.stream.KickPlayerNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.KickPlayerRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.LeaveRoomReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.LeaveRoomRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.LoginReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.LoginRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.LogoutRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NetworkStateNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NetworkStateReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NetworkStateRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NoticeJoin\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NoticeLeave\", null, global);\r\n        goog.exportSymbol(\"proto.stream.NoticeRoomProperty\", null, global);\r\n        goog.exportSymbol(\"proto.stream.PlayerInfo\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomDetail\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomFilter\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomInfo\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomInfoEx\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomListSort\", null, global);\r\n        goog.exportSymbol(\"proto.stream.RoomState\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetRoomPropertyReq\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetRoomPropertyRsp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SortOrder\", null, global);\r\n        goog.exportSymbol(\"proto.stream.TcpProtoHeader\", null, global);\r\n        goog.exportSymbol(\"proto.stream.UserV2\", null, global);\r\n        goog.exportSymbol(\"proto.stream.keyValue\", null, global);\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.LoginReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.LoginReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.LoginReq.displayName = \"proto.stream.LoginReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.LoginReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.LoginReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.LoginReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LoginReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    appkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    deviceid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n                    sign: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n                    sdkver: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\r\n                    vendor: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.LoginReq}\r\n         */\r\n        proto.stream.LoginReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.LoginReq;\r\n            return proto.stream.LoginReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.LoginReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.LoginReq}\r\n         */\r\n        proto.stream.LoginReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setAppkey(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setDeviceid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setSign(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setSdkver(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setVendor(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LoginReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.LoginReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.LoginReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.LoginReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getAppkey();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getDeviceid();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getSign();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getSdkver();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getVendor();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.LoginReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.LoginReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string appKey = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LoginReq.prototype.getAppkey = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LoginReq.prototype.setAppkey = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string deviceID = 3;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LoginReq.prototype.getDeviceid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LoginReq.prototype.setDeviceid = function (value) {\r\n            jspb.Message.setProto3StringField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string sign = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LoginReq.prototype.getSign = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LoginReq.prototype.setSign = function (value) {\r\n            jspb.Message.setProto3StringField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string sdkVer = 5;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LoginReq.prototype.getSdkver = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LoginReq.prototype.setSdkver = function (value) {\r\n            jspb.Message.setProto3StringField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 vendor = 6;\r\n         * @return {number}\r\n         */\r\n        proto.stream.LoginReq.prototype.getVendor = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.LoginReq.prototype.setVendor = function (value) {\r\n            jspb.Message.setProto3IntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.LoginRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.LoginRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.LoginRsp.displayName = \"proto.stream.LoginRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.LoginRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.LoginRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.LoginRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LoginRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.LoginRsp}\r\n         */\r\n        proto.stream.LoginRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.LoginRsp;\r\n            return proto.stream.LoginRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.LoginRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.LoginRsp}\r\n         */\r\n        proto.stream.LoginRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LoginRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.LoginRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.LoginRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.LoginRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.LoginRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.LoginRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LoginRsp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LoginRsp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.HeartbeatReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.HeartbeatReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.HeartbeatReq.displayName = \"proto.stream.HeartbeatReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.HeartbeatReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.HeartbeatReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.HeartbeatReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.HeartbeatReq}\r\n         */\r\n        proto.stream.HeartbeatReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.HeartbeatReq;\r\n            return proto.stream.HeartbeatReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.HeartbeatReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.HeartbeatReq}\r\n         */\r\n        proto.stream.HeartbeatReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.HeartbeatReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.HeartbeatReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.HeartbeatReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.HeartbeatReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.HeartbeatReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.HeartbeatReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.HeartbeatReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.HeartbeatReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.HeartbeatRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.HeartbeatRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.HeartbeatRsp.displayName = \"proto.stream.HeartbeatRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.HeartbeatRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.HeartbeatRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.HeartbeatRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    gsexist: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.HeartbeatRsp}\r\n         */\r\n        proto.stream.HeartbeatRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.HeartbeatRsp;\r\n            return proto.stream.HeartbeatRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.HeartbeatRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.HeartbeatRsp}\r\n         */\r\n        proto.stream.HeartbeatRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setGsexist(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.HeartbeatRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.HeartbeatRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.HeartbeatRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.HeartbeatRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGsexist();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.HeartbeatRsp.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.HeartbeatRsp.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 gsExist = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.HeartbeatRsp.prototype.getGsexist = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.HeartbeatRsp.prototype.setGsexist = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.DisconnectReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.DisconnectReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.DisconnectReq.displayName = \"proto.stream.DisconnectReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.DisconnectReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.DisconnectReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.DisconnectReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.DisconnectReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.DisconnectReq}\r\n         */\r\n        proto.stream.DisconnectReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.DisconnectReq;\r\n            return proto.stream.DisconnectReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.DisconnectReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.DisconnectReq}\r\n         */\r\n        proto.stream.DisconnectReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.DisconnectReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.DisconnectReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.DisconnectReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.DisconnectReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.DisconnectReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.DisconnectReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.DisconnectReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.DisconnectReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomId = 3;\r\n         * @return {string}\r\n         */\r\n        proto.stream.DisconnectReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.DisconnectReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.DisconnectRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.DisconnectRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.DisconnectRsp.displayName = \"proto.stream.DisconnectRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.DisconnectRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.DisconnectRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.DisconnectRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.DisconnectRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.DisconnectRsp}\r\n         */\r\n        proto.stream.DisconnectRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.DisconnectRsp;\r\n            return proto.stream.DisconnectRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.DisconnectRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.DisconnectRsp}\r\n         */\r\n        proto.stream.DisconnectRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.DisconnectRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.DisconnectRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.DisconnectRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.DisconnectRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.DisconnectRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.DisconnectRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.LogoutRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.LogoutRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.LogoutRsp.displayName = \"proto.stream.LogoutRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.LogoutRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.LogoutRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.LogoutRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LogoutRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.LogoutRsp}\r\n         */\r\n        proto.stream.LogoutRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.LogoutRsp;\r\n            return proto.stream.LogoutRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.LogoutRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.LogoutRsp}\r\n         */\r\n        proto.stream.LogoutRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LogoutRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.LogoutRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.LogoutRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.LogoutRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.LogoutRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.LogoutRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.keyValue = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.keyValue, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.keyValue.displayName = \"proto.stream.keyValue\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.keyValue.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.keyValue.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.keyValue} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.keyValue.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n                    value: jspb.Message.getFieldWithDefault(msg, 2, \"\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.keyValue}\r\n         */\r\n        proto.stream.keyValue.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.keyValue;\r\n            return proto.stream.keyValue.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.keyValue} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.keyValue}\r\n         */\r\n        proto.stream.keyValue.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setKey(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setValue(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.keyValue.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.keyValue.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.keyValue} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.keyValue.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getKey();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getValue();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string key = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.keyValue.prototype.getKey = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.keyValue.prototype.setKey = function (value) {\r\n            jspb.Message.setProto3StringField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string value = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.keyValue.prototype.getValue = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.keyValue.prototype.setValue = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.PlayerInfo = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.PlayerInfo, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.PlayerInfo.displayName = \"proto.stream.PlayerInfo\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.PlayerInfo.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.PlayerInfo.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.PlayerInfo} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PlayerInfo.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    userprofile: msg.getUserprofile_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.PlayerInfo.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.PlayerInfo;\r\n            return proto.stream.PlayerInfo.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.PlayerInfo} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.PlayerInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setUserprofile(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.PlayerInfo.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.PlayerInfo.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.PlayerInfo} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.PlayerInfo.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserprofile_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.PlayerInfo.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.PlayerInfo.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes userProfile = 2;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.PlayerInfo.prototype.getUserprofile = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes userProfile = 2;\r\n         * This is a type-conversion wrapper around `getUserprofile()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.PlayerInfo.prototype.getUserprofile_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getUserprofile()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes userProfile = 2;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getUserprofile()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.PlayerInfo.prototype.getUserprofile_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getUserprofile()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.PlayerInfo.prototype.setUserprofile = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.BookInfo = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.BookInfo, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.BookInfo.displayName = \"proto.stream.BookInfo\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.BookInfo.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.BookInfo.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.BookInfo} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.BookInfo.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    bookid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\r\n                    bookkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    hoteladdr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\r\n                    wssproxy: jspb.Message.getFieldWithDefault(msg, 4, \"\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.BookInfo}\r\n         */\r\n        proto.stream.BookInfo.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.BookInfo;\r\n            return proto.stream.BookInfo.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.BookInfo} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.BookInfo}\r\n         */\r\n        proto.stream.BookInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setBookid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setBookkey(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setHoteladdr(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setWssproxy(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.BookInfo.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.BookInfo.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.BookInfo} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.BookInfo.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getBookid();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getBookkey();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getHoteladdr();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getWssproxy();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string bookID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.BookInfo.prototype.getBookid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.BookInfo.prototype.setBookid = function (value) {\r\n            jspb.Message.setProto3StringField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string bookKey = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.BookInfo.prototype.getBookkey = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.BookInfo.prototype.setBookkey = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string hotelAddr = 3;\r\n         * @return {string}\r\n         */\r\n        proto.stream.BookInfo.prototype.getHoteladdr = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.BookInfo.prototype.setHoteladdr = function (value) {\r\n            jspb.Message.setProto3StringField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string wssProxy = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.BookInfo.prototype.getWssproxy = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.BookInfo.prototype.setWssproxy = function (value) {\r\n            jspb.Message.setProto3StringField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.RoomInfo = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.RoomInfo, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.RoomInfo.displayName = \"proto.stream.RoomInfo\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.RoomInfo.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.RoomInfo.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.RoomInfo} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomInfo.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    roomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    mode: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    canwatch: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    visibility: jspb.Message.getFieldWithDefault(msg, 6, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64(),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 8, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.RoomInfo.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.RoomInfo;\r\n            return proto.stream.RoomInfo.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.RoomInfo} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.RoomInfo.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setRoomname(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayer(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setMode(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setCanwatch(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setVisibility(value);\r\n                    break;\r\n                case 7:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                case 8:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomInfo.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.RoomInfo.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.RoomInfo} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.RoomInfo.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomname();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMaxplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMode();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCanwatch();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getVisibility();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    7,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    8,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.RoomInfo.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string roomName = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getRoomname = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.RoomInfo.prototype.setRoomname = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayer = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getMaxplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfo.prototype.setMaxplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 mode = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getMode = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfo.prototype.setMode = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 canWatch = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getCanwatch = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfo.prototype.setCanwatch = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 visibility = 6;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getVisibility = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfo.prototype.setVisibility = function (value) {\r\n            jspb.Message.setProto3IntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 7;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 7;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 7;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.RoomInfo.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 7, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 8;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfo.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfo.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 8, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinRoomReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.JoinRoomReq.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinRoomReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinRoomReq.displayName = \"proto.stream.JoinRoomReq\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.JoinRoomReq.repeatedFields_ = [5];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinRoomReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinRoomReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinRoomReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinRoomReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    jointype: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    playerinfo: (f = msg.getPlayerinfo()) && proto.stream.PlayerInfo.toObject(includeInstance, f),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f),\r\n                    tagsList: jspb.Message.toObjectList(msg.getTagsList(),\r\n                        proto.stream.keyValue.toObject, includeInstance),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinRoomReq}\r\n         */\r\n        proto.stream.JoinRoomReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinRoomReq;\r\n            return proto.stream.JoinRoomReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinRoomReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinRoomReq}\r\n         */\r\n        proto.stream.JoinRoomReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.JoinRoomType} */ (reader.readEnum());\r\n                    msg.setJointype(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.PlayerInfo;\r\n                    reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                    msg.setPlayerinfo(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = new proto.stream.RoomInfo;\r\n                    reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                    msg.setRoominfo(value);\r\n                    break;\r\n                case 5:\r\n                    var value = new proto.stream.keyValue;\r\n                    reader.readMessage(value, proto.stream.keyValue.deserializeBinaryFromReader);\r\n                    msg.addTags(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinRoomReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinRoomReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinRoomReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getJointype();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPlayerinfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.PlayerInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoominfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    4,\r\n                    f,\r\n                    proto.stream.RoomInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getTagsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedMessage(\r\n                    5,\r\n                    f,\r\n                    proto.stream.keyValue.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional JoinRoomType joinType = 1;\r\n         * @return {!proto.stream.JoinRoomType}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getJointype = function () {\r\n            return /** @type {!proto.stream.JoinRoomType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.JoinRoomType} value */\r\n        proto.stream.JoinRoomReq.prototype.setJointype = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional PlayerInfo playerInfo = 2;\r\n         * @return {?proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getPlayerinfo = function () {\r\n            return /** @type{?proto.stream.PlayerInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 2));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n        proto.stream.JoinRoomReq.prototype.setPlayerinfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomReq.prototype.clearPlayerinfo = function () {\r\n            this.setPlayerinfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.hasPlayerinfo = function () {\r\n            return jspb.Message.getField(this, 2) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinRoomReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomInfo roomInfo = 4;\r\n         * @return {?proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getRoominfo = function () {\r\n            return /** @type{?proto.stream.RoomInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 4));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomInfo|undefined} value */\r\n        proto.stream.JoinRoomReq.prototype.setRoominfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 4, value);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomReq.prototype.clearRoominfo = function () {\r\n            this.setRoominfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.hasRoominfo = function () {\r\n            return jspb.Message.getField(this, 4) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated keyValue tags = 5;\r\n         * @return {!Array.<!proto.stream.keyValue>}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getTagsList = function () {\r\n            return /** @type{!Array.<!proto.stream.keyValue>} */ (\r\n                jspb.Message.getRepeatedWrapperField(this, proto.stream.keyValue, 5));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<!proto.stream.keyValue>} value */\r\n        proto.stream.JoinRoomReq.prototype.setTagsList = function (value) {\r\n            jspb.Message.setRepeatedWrapperField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!proto.stream.keyValue=} opt_value\r\n         * @param {number=} opt_index\r\n         * @return {!proto.stream.keyValue}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.addTags = function (opt_value, opt_index) {\r\n            return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.stream.keyValue, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomReq.prototype.clearTagsList = function () {\r\n            this.setTagsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 6;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 6;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 6;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinRoomReq.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinRoomReq.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinRoomRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.JoinRoomRsp.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinRoomRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinRoomRsp.displayName = \"proto.stream.JoinRoomRsp\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.JoinRoomRsp.repeatedFields_ = [2];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinRoomRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinRoomRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinRoomRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    usersList: jspb.Message.toObjectList(msg.getUsersList(),\r\n                        proto.stream.PlayerInfo.toObject, includeInstance),\r\n                    roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f),\r\n                    bookinfo: (f = msg.getBookinfo()) && proto.stream.BookInfo.toObject(includeInstance, f),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinRoomRsp}\r\n         */\r\n        proto.stream.JoinRoomRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinRoomRsp;\r\n            return proto.stream.JoinRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinRoomRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinRoomRsp}\r\n         */\r\n        proto.stream.JoinRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.PlayerInfo;\r\n                    reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                    msg.addUsers(value);\r\n                    break;\r\n                case 3:\r\n                    var value = new proto.stream.RoomInfo;\r\n                    reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                    msg.setRoominfo(value);\r\n                    break;\r\n                case 4:\r\n                    var value = new proto.stream.BookInfo;\r\n                    reader.readMessage(value, proto.stream.BookInfo.deserializeBinaryFromReader);\r\n                    msg.setBookinfo(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinRoomRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinRoomRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUsersList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.PlayerInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getRoominfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    3,\r\n                    f,\r\n                    proto.stream.RoomInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getBookinfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    4,\r\n                    f,\r\n                    proto.stream.BookInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.JoinRoomRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated PlayerInfo users = 2;\r\n         * @return {!Array.<!proto.stream.PlayerInfo>}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getUsersList = function () {\r\n            return /** @type{!Array.<!proto.stream.PlayerInfo>} */ (\r\n                jspb.Message.getRepeatedWrapperField(this, proto.stream.PlayerInfo, 2));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<!proto.stream.PlayerInfo>} value */\r\n        proto.stream.JoinRoomRsp.prototype.setUsersList = function (value) {\r\n            jspb.Message.setRepeatedWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!proto.stream.PlayerInfo=} opt_value\r\n         * @param {number=} opt_index\r\n         * @return {!proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.addUsers = function (opt_value, opt_index) {\r\n            return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stream.PlayerInfo, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomRsp.prototype.clearUsersList = function () {\r\n            this.setUsersList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomInfo roomInfo = 3;\r\n         * @return {?proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getRoominfo = function () {\r\n            return /** @type{?proto.stream.RoomInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 3));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomInfo|undefined} value */\r\n        proto.stream.JoinRoomRsp.prototype.setRoominfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 3, value);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomRsp.prototype.clearRoominfo = function () {\r\n            this.setRoominfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.hasRoominfo = function () {\r\n            return jspb.Message.getField(this, 3) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional BookInfo bookInfo = 4;\r\n         * @return {?proto.stream.BookInfo}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getBookinfo = function () {\r\n            return /** @type{?proto.stream.BookInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.BookInfo, 4));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.BookInfo|undefined} value */\r\n        proto.stream.JoinRoomRsp.prototype.setBookinfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 4, value);\r\n        };\r\n\r\n\r\n        proto.stream.JoinRoomRsp.prototype.clearBookinfo = function () {\r\n            this.setBookinfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.hasBookinfo = function () {\r\n            return jspb.Message.getField(this, 4) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 5;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 5;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 5;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinRoomRsp.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinRoomRsp.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NoticeJoin = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NoticeJoin, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NoticeJoin.displayName = \"proto.stream.NoticeJoin\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NoticeJoin.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NoticeJoin.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NoticeJoin} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeJoin.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    user: (f = msg.getUser()) && proto.stream.PlayerInfo.toObject(includeInstance, f)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NoticeJoin}\r\n         */\r\n        proto.stream.NoticeJoin.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NoticeJoin;\r\n            return proto.stream.NoticeJoin.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NoticeJoin} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NoticeJoin}\r\n         */\r\n        proto.stream.NoticeJoin.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = new proto.stream.PlayerInfo;\r\n                    reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                    msg.setUser(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NoticeJoin.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NoticeJoin.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NoticeJoin} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NoticeJoin.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUser();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    1,\r\n                    f,\r\n                    proto.stream.PlayerInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional PlayerInfo user = 1;\r\n         * @return {?proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.NoticeJoin.prototype.getUser = function () {\r\n            return /** @type{?proto.stream.PlayerInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 1));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n        proto.stream.NoticeJoin.prototype.setUser = function (value) {\r\n            jspb.Message.setWrapperField(this, 1, value);\r\n        };\r\n\r\n\r\n        proto.stream.NoticeJoin.prototype.clearUser = function () {\r\n            this.setUser(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.NoticeJoin.prototype.hasUser = function () {\r\n            return jspb.Message.getField(this, 1) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NoticeLeave = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NoticeLeave, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NoticeLeave.displayName = \"proto.stream.NoticeLeave\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NoticeLeave.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NoticeLeave.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NoticeLeave} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeLeave.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NoticeLeave}\r\n         */\r\n        proto.stream.NoticeLeave.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NoticeLeave;\r\n            return proto.stream.NoticeLeave.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NoticeLeave} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NoticeLeave}\r\n         */\r\n        proto.stream.NoticeLeave.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NoticeLeave.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NoticeLeave} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NoticeLeave.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NoticeLeave.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.NoticeLeave.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NoticeLeave.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NoticeLeave.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.NoticeLeave.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOverReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOverReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOverReq.displayName = \"proto.stream.JoinOverReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOverReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOverReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOverReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cpproto: msg.getCpproto_asB64(),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOverReq}\r\n         */\r\n        proto.stream.JoinOverReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOverReq;\r\n            return proto.stream.JoinOverReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOverReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOverReq}\r\n         */\r\n        proto.stream.JoinOverReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOverReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOverReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOverReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.JoinOverReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOverReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOverReq.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOverReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOverReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOverRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOverRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOverRsp.displayName = \"proto.stream.JoinOverRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOverRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOverRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOverRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOverRsp}\r\n         */\r\n        proto.stream.JoinOverRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOverRsp;\r\n            return proto.stream.JoinOverRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOverRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOverRsp}\r\n         */\r\n        proto.stream.JoinOverRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOverRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOverRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOverRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.JoinOverRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.JoinOverRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOverRsp.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOverRsp.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverRsp.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOverRsp.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOverNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOverNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOverNotify.displayName = \"proto.stream.JoinOverNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOverNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOverNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOverNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOverNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    srcuserid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOverNotify}\r\n         */\r\n        proto.stream.JoinOverNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOverNotify;\r\n            return proto.stream.JoinOverNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOverNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOverNotify}\r\n         */\r\n        proto.stream.JoinOverNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOverNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOverNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOverNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSrcuserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUserID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.getSrcuserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOverNotify.prototype.setSrcuserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.JoinOverNotify.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOverNotify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOverNotify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOpenReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOpenReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOpenReq.displayName = \"proto.stream.JoinOpenReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOpenReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOpenReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOpenReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOpenReq}\r\n         */\r\n        proto.stream.JoinOpenReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOpenReq;\r\n            return proto.stream.JoinOpenReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOpenReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOpenReq}\r\n         */\r\n        proto.stream.JoinOpenReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOpenReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOpenReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOpenReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.JoinOpenReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOpenReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOpenReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenReq.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOpenReq.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOpenRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOpenRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOpenRsp.displayName = \"proto.stream.JoinOpenRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOpenRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOpenRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOpenRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOpenRsp}\r\n         */\r\n        proto.stream.JoinOpenRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOpenRsp;\r\n            return proto.stream.JoinOpenRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOpenRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOpenRsp}\r\n         */\r\n        proto.stream.JoinOpenRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOpenRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOpenRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOpenRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.JoinOpenRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.JoinOpenRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOpenRsp.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOpenRsp.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 2;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenRsp.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOpenRsp.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.JoinOpenNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.JoinOpenNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.JoinOpenNotify.displayName = \"proto.stream.JoinOpenNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.JoinOpenNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.JoinOpenNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.JoinOpenNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.JoinOpenNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.JoinOpenNotify}\r\n         */\r\n        proto.stream.JoinOpenNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.JoinOpenNotify;\r\n            return proto.stream.JoinOpenNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.JoinOpenNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.JoinOpenNotify}\r\n         */\r\n        proto.stream.JoinOpenNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.JoinOpenNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.JoinOpenNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.JoinOpenNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.JoinOpenNotify.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.JoinOpenNotify.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.JoinOpenNotify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.JoinOpenNotify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.LeaveRoomReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.LeaveRoomReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.LeaveRoomReq.displayName = \"proto.stream.LeaveRoomReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.LeaveRoomReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.LeaveRoomReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.LeaveRoomReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LeaveRoomReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.LeaveRoomReq}\r\n         */\r\n        proto.stream.LeaveRoomReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.LeaveRoomReq;\r\n            return proto.stream.LeaveRoomReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.LeaveRoomReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.LeaveRoomReq}\r\n         */\r\n        proto.stream.LeaveRoomReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.LeaveRoomReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.LeaveRoomReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.LeaveRoomReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.LeaveRoomReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.LeaveRoomReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 3;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LeaveRoomReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LeaveRoomReq.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.LeaveRoomReq.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.LeaveRoomRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.LeaveRoomRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.LeaveRoomRsp.displayName = \"proto.stream.LeaveRoomRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.LeaveRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.LeaveRoomRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.LeaveRoomRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.LeaveRoomRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.LeaveRoomRsp}\r\n         */\r\n        proto.stream.LeaveRoomRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.LeaveRoomRsp;\r\n            return proto.stream.LeaveRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.LeaveRoomRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.LeaveRoomRsp}\r\n         */\r\n        proto.stream.LeaveRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.LeaveRoomRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.LeaveRoomRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.LeaveRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.LeaveRoomRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.LeaveRoomRsp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.LeaveRoomRsp.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.LeaveRoomRsp.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.LeaveRoomRsp.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.TcpProtoHeader = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.TcpProtoHeader, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.TcpProtoHeader.displayName = \"proto.stream.TcpProtoHeader\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.TcpProtoHeader.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.TcpProtoHeader.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.TcpProtoHeader} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.TcpProtoHeader.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    size: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    seq: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cmd: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    version: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.TcpProtoHeader}\r\n         */\r\n        proto.stream.TcpProtoHeader.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.TcpProtoHeader;\r\n            return proto.stream.TcpProtoHeader.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.TcpProtoHeader} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.TcpProtoHeader}\r\n         */\r\n        proto.stream.TcpProtoHeader.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSize(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSeq(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setCmd(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setVersion(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.TcpProtoHeader.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.TcpProtoHeader} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.TcpProtoHeader.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSize();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getSeq();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCmd();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getVersion();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 size = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.getSize = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.TcpProtoHeader.prototype.setSize = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 seq = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.getSeq = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.TcpProtoHeader.prototype.setSeq = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 cmd = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.getCmd = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.TcpProtoHeader.prototype.setCmd = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 version = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.getVersion = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.TcpProtoHeader.prototype.setVersion = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.TcpProtoHeader.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.TcpProtoHeader.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.ConnDetailV2 = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.ConnDetailV2, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.ConnDetailV2.displayName = \"proto.stream.ConnDetailV2\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.ConnDetailV2.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.ConnDetailV2.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.ConnDetailV2} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.ConnDetailV2.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    fieldid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                    heartbeattime: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\r\n                    version: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.ConnDetailV2}\r\n         */\r\n        proto.stream.ConnDetailV2.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.ConnDetailV2;\r\n            return proto.stream.ConnDetailV2.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.ConnDetailV2} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.ConnDetailV2}\r\n         */\r\n        proto.stream.ConnDetailV2.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFieldid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setHeartbeattime(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setVersion(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.ConnDetailV2.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.ConnDetailV2} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.ConnDetailV2.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFieldid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getHeartbeattime();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getVersion();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.ConnDetailV2.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.ConnDetailV2.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 fieldID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getFieldid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.ConnDetailV2.prototype.setFieldid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.ConnDetailV2.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 heartBeatTime = 5;\r\n         * @return {string}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getHeartbeattime = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.ConnDetailV2.prototype.setHeartbeattime = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 version = 6;\r\n         * @return {number}\r\n         */\r\n        proto.stream.ConnDetailV2.prototype.getVersion = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.ConnDetailV2.prototype.setVersion = function (value) {\r\n            jspb.Message.setProto3IntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.UserV2 = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.UserV2, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.UserV2.displayName = \"proto.stream.UserV2\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.UserV2.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.UserV2.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.UserV2} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.UserV2.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    gameId: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    versionSdk: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    connectionId: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                    serviceId: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    roomId: jspb.Message.getFieldWithDefault(msg, 6, \"0\"),\r\n                    deviceId: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\r\n                    connStatus: jspb.Message.getFieldWithDefault(msg, 8, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.UserV2}\r\n         */\r\n        proto.stream.UserV2.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.UserV2;\r\n            return proto.stream.UserV2.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.UserV2} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.UserV2}\r\n         */\r\n        proto.stream.UserV2.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserId(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameId(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setVersionSdk(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setConnectionId(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setServiceId(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomId(value);\r\n                    break;\r\n                case 7:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setDeviceId(value);\r\n                    break;\r\n                case 8:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setConnStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.UserV2.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.UserV2.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.UserV2} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.UserV2.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserId();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameId();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getVersionSdk();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getConnectionId();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getServiceId();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomId();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getDeviceId();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    7,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getConnStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    8,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 user_id = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.UserV2.prototype.getUserId = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.UserV2.prototype.setUserId = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 game_id = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.UserV2.prototype.getGameId = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.UserV2.prototype.setGameId = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 version_sdk = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.UserV2.prototype.getVersionSdk = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.UserV2.prototype.setVersionSdk = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 connection_id = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.UserV2.prototype.getConnectionId = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.UserV2.prototype.setConnectionId = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 service_id = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.UserV2.prototype.getServiceId = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.UserV2.prototype.setServiceId = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 room_id = 6;\r\n         * @return {string}\r\n         */\r\n        proto.stream.UserV2.prototype.getRoomId = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.UserV2.prototype.setRoomId = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string device_id = 7;\r\n         * @return {string}\r\n         */\r\n        proto.stream.UserV2.prototype.getDeviceId = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.UserV2.prototype.setDeviceId = function (value) {\r\n            jspb.Message.setProto3StringField(this, 7, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 conn_status = 8;\r\n         * @return {number}\r\n         */\r\n        proto.stream.UserV2.prototype.getConnStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.UserV2.prototype.setConnStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 8, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NetworkStateReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NetworkStateReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NetworkStateReq.displayName = \"proto.stream.NetworkStateReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NetworkStateReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NetworkStateReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NetworkStateReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    state: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NetworkStateReq}\r\n         */\r\n        proto.stream.NetworkStateReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NetworkStateReq;\r\n            return proto.stream.NetworkStateReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NetworkStateReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NetworkStateReq}\r\n         */\r\n        proto.stream.NetworkStateReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setState(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NetworkStateReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NetworkStateReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NetworkStateReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NetworkStateReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getState();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.NetworkStateReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.NetworkStateReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 UserID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 state = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateReq.prototype.getState = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateReq.prototype.setState = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NetworkStateRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NetworkStateRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NetworkStateRsp.displayName = \"proto.stream.NetworkStateRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NetworkStateRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NetworkStateRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NetworkStateRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NetworkStateRsp}\r\n         */\r\n        proto.stream.NetworkStateRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NetworkStateRsp;\r\n            return proto.stream.NetworkStateRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NetworkStateRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NetworkStateRsp}\r\n         */\r\n        proto.stream.NetworkStateRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NetworkStateRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NetworkStateRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NetworkStateRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NetworkStateRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateRsp.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NetworkStateNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NetworkStateNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NetworkStateNotify.displayName = \"proto.stream.NetworkStateNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NetworkStateNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NetworkStateNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NetworkStateNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NetworkStateNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    state: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NetworkStateNotify}\r\n         */\r\n        proto.stream.NetworkStateNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NetworkStateNotify;\r\n            return proto.stream.NetworkStateNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NetworkStateNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NetworkStateNotify}\r\n         */\r\n        proto.stream.NetworkStateNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setState(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NetworkStateNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NetworkStateNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NetworkStateNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NetworkStateNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getState();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.NetworkStateNotify.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.NetworkStateNotify.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 UserID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateNotify.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateNotify.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 state = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateNotify.prototype.getState = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateNotify.prototype.setState = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NetworkStateNotify.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NetworkStateNotify.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.CreateRoom = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.CreateRoom, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.CreateRoom.displayName = \"proto.stream.CreateRoom\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.CreateRoom.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.CreateRoom.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.CreateRoom} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CreateRoom.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    playerinfo: (f = msg.getPlayerinfo()) && proto.stream.PlayerInfo.toObject(includeInstance, f),\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roominfo: (f = msg.getRoominfo()) && proto.stream.RoomInfo.toObject(includeInstance, f)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.CreateRoom}\r\n         */\r\n        proto.stream.CreateRoom.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.CreateRoom;\r\n            return proto.stream.CreateRoom.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.CreateRoom} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.CreateRoom}\r\n         */\r\n        proto.stream.CreateRoom.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = new proto.stream.PlayerInfo;\r\n                    reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                    msg.setPlayerinfo(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = new proto.stream.RoomInfo;\r\n                    reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                    msg.setRoominfo(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.CreateRoom.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.CreateRoom.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.CreateRoom} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.CreateRoom.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getPlayerinfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    1,\r\n                    f,\r\n                    proto.stream.PlayerInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoominfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    3,\r\n                    f,\r\n                    proto.stream.RoomInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional PlayerInfo playerInfo = 1;\r\n         * @return {?proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.CreateRoom.prototype.getPlayerinfo = function () {\r\n            return /** @type{?proto.stream.PlayerInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.PlayerInfo, 1));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.PlayerInfo|undefined} value */\r\n        proto.stream.CreateRoom.prototype.setPlayerinfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 1, value);\r\n        };\r\n\r\n\r\n        proto.stream.CreateRoom.prototype.clearPlayerinfo = function () {\r\n            this.setPlayerinfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.CreateRoom.prototype.hasPlayerinfo = function () {\r\n            return jspb.Message.getField(this, 1) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CreateRoom.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CreateRoom.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomInfo roomInfo = 3;\r\n         * @return {?proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.CreateRoom.prototype.getRoominfo = function () {\r\n            return /** @type{?proto.stream.RoomInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomInfo, 3));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomInfo|undefined} value */\r\n        proto.stream.CreateRoom.prototype.setRoominfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 3, value);\r\n        };\r\n\r\n\r\n        proto.stream.CreateRoom.prototype.clearRoominfo = function () {\r\n            this.setRoominfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.CreateRoom.prototype.hasRoominfo = function () {\r\n            return jspb.Message.getField(this, 3) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.CreateRoomRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.CreateRoomRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.CreateRoomRsp.displayName = \"proto.stream.CreateRoomRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.CreateRoomRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.CreateRoomRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.CreateRoomRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CreateRoomRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    bookinfo: (f = msg.getBookinfo()) && proto.stream.BookInfo.toObject(includeInstance, f),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.CreateRoomRsp}\r\n         */\r\n        proto.stream.CreateRoomRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.CreateRoomRsp;\r\n            return proto.stream.CreateRoomRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.CreateRoomRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.CreateRoomRsp}\r\n         */\r\n        proto.stream.CreateRoomRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = new proto.stream.BookInfo;\r\n                    reader.readMessage(value, proto.stream.BookInfo.deserializeBinaryFromReader);\r\n                    msg.setBookinfo(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.CreateRoomRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.CreateRoomRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.CreateRoomRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getBookinfo();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    3,\r\n                    f,\r\n                    proto.stream.BookInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.CreateRoomRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CreateRoomRsp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional BookInfo bookInfo = 3;\r\n         * @return {?proto.stream.BookInfo}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.getBookinfo = function () {\r\n            return /** @type{?proto.stream.BookInfo} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.BookInfo, 3));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.BookInfo|undefined} value */\r\n        proto.stream.CreateRoomRsp.prototype.setBookinfo = function (value) {\r\n            jspb.Message.setWrapperField(this, 3, value);\r\n        };\r\n\r\n\r\n        proto.stream.CreateRoomRsp.prototype.clearBookinfo = function () {\r\n            this.setBookinfo(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.hasBookinfo = function () {\r\n            return jspb.Message.getField(this, 3) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CreateRoomRsp.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CreateRoomRsp.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomList = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomList, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomList.displayName = \"proto.stream.GetRoomList\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomList.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomList.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomList} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomList.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomfilter: (f = msg.getRoomfilter()) && proto.stream.RoomFilter.toObject(includeInstance, f)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomList}\r\n         */\r\n        proto.stream.GetRoomList.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomList;\r\n            return proto.stream.GetRoomList.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomList} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomList}\r\n         */\r\n        proto.stream.GetRoomList.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.RoomFilter;\r\n                    reader.readMessage(value, proto.stream.RoomFilter.deserializeBinaryFromReader);\r\n                    msg.setRoomfilter(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomList.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomList.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomList} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomList.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomfilter();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.RoomFilter.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomList.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomList.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomFilter roomFilter = 2;\r\n         * @return {?proto.stream.RoomFilter}\r\n         */\r\n        proto.stream.GetRoomList.prototype.getRoomfilter = function () {\r\n            return /** @type{?proto.stream.RoomFilter} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomFilter, 2));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomFilter|undefined} value */\r\n        proto.stream.GetRoomList.prototype.setRoomfilter = function (value) {\r\n            jspb.Message.setWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        proto.stream.GetRoomList.prototype.clearRoomfilter = function () {\r\n            this.setRoomfilter(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.GetRoomList.prototype.hasRoomfilter = function () {\r\n            return jspb.Message.getField(this, 2) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.RoomFilter = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.RoomFilter, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.RoomFilter.displayName = \"proto.stream.RoomFilter\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.RoomFilter.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.RoomFilter.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.RoomFilter} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomFilter.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    maxplayer: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    mode: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    canwatch: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64(),\r\n                    full: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    state: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.RoomFilter}\r\n         */\r\n        proto.stream.RoomFilter.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.RoomFilter;\r\n            return proto.stream.RoomFilter.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.RoomFilter} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.RoomFilter}\r\n         */\r\n        proto.stream.RoomFilter.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayer(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setMode(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setCanwatch(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setFull(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {!proto.stream.RoomState} */ (reader.readEnum());\r\n                    msg.setState(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomFilter.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.RoomFilter.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.RoomFilter} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.RoomFilter.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getMaxplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMode();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCanwatch();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFull();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getState();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayer = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getMaxplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomFilter.prototype.setMaxplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 mode = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getMode = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomFilter.prototype.setMode = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 canWatch = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getCanwatch = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomFilter.prototype.setCanwatch = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.RoomFilter.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 full = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getFull = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomFilter.prototype.setFull = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomState state = 6;\r\n         * @return {!proto.stream.RoomState}\r\n         */\r\n        proto.stream.RoomFilter.prototype.getState = function () {\r\n            return /** @type {!proto.stream.RoomState} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.RoomState} value */\r\n        proto.stream.RoomFilter.prototype.setState = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomListRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.GetRoomListRsp.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomListRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomListRsp.displayName = \"proto.stream.GetRoomListRsp\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.GetRoomListRsp.repeatedFields_ = [2];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomListRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomListRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomListRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roominfoList: jspb.Message.toObjectList(msg.getRoominfoList(),\r\n                        proto.stream.RoomInfo.toObject, includeInstance)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomListRsp}\r\n         */\r\n        proto.stream.GetRoomListRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomListRsp;\r\n            return proto.stream.GetRoomListRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomListRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomListRsp}\r\n         */\r\n        proto.stream.GetRoomListRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.RoomInfo;\r\n                    reader.readMessage(value, proto.stream.RoomInfo.deserializeBinaryFromReader);\r\n                    msg.addRoominfo(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomListRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomListRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomListRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomListRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoominfoList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.RoomInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.GetRoomListRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.GetRoomListRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated RoomInfo roomInfo = 2;\r\n         * @return {!Array.<!proto.stream.RoomInfo>}\r\n         */\r\n        proto.stream.GetRoomListRsp.prototype.getRoominfoList = function () {\r\n            return /** @type{!Array.<!proto.stream.RoomInfo>} */ (\r\n                jspb.Message.getRepeatedWrapperField(this, proto.stream.RoomInfo, 2));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<!proto.stream.RoomInfo>} value */\r\n        proto.stream.GetRoomListRsp.prototype.setRoominfoList = function (value) {\r\n            jspb.Message.setRepeatedWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!proto.stream.RoomInfo=} opt_value\r\n         * @param {number=} opt_index\r\n         * @return {!proto.stream.RoomInfo}\r\n         */\r\n        proto.stream.GetRoomListRsp.prototype.addRoominfo = function (opt_value, opt_index) {\r\n            return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stream.RoomInfo, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.GetRoomListRsp.prototype.clearRoominfoList = function () {\r\n            this.setRoominfoList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomListExReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomListExReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomListExReq.displayName = \"proto.stream.GetRoomListExReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomListExReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomListExReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomListExReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListExReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomfilter: (f = msg.getRoomfilter()) && proto.stream.RoomFilter.toObject(includeInstance, f),\r\n                    sort: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    order: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    pageno: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    pagesize: jspb.Message.getFieldWithDefault(msg, 6, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomListExReq}\r\n         */\r\n        proto.stream.GetRoomListExReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomListExReq;\r\n            return proto.stream.GetRoomListExReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomListExReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomListExReq}\r\n         */\r\n        proto.stream.GetRoomListExReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.RoomFilter;\r\n                    reader.readMessage(value, proto.stream.RoomFilter.deserializeBinaryFromReader);\r\n                    msg.setRoomfilter(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!proto.stream.RoomListSort} */ (reader.readEnum());\r\n                    msg.setSort(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!proto.stream.SortOrder} */ (reader.readEnum());\r\n                    msg.setOrder(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setPageno(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setPagesize(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomListExReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomListExReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomListExReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomfilter();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.RoomFilter.serializeBinaryToWriter\r\n                );\r\n            }\r\n            f = message.getSort();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOrder();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPageno();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPagesize();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomListExReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomFilter roomFilter = 2;\r\n         * @return {?proto.stream.RoomFilter}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getRoomfilter = function () {\r\n            return /** @type{?proto.stream.RoomFilter} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomFilter, 2));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomFilter|undefined} value */\r\n        proto.stream.GetRoomListExReq.prototype.setRoomfilter = function (value) {\r\n            jspb.Message.setWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        proto.stream.GetRoomListExReq.prototype.clearRoomfilter = function () {\r\n            this.setRoomfilter(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.hasRoomfilter = function () {\r\n            return jspb.Message.getField(this, 2) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomListSort sort = 3;\r\n         * @return {!proto.stream.RoomListSort}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getSort = function () {\r\n            return /** @type {!proto.stream.RoomListSort} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.RoomListSort} value */\r\n        proto.stream.GetRoomListExReq.prototype.setSort = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional SortOrder order = 4;\r\n         * @return {!proto.stream.SortOrder}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getOrder = function () {\r\n            return /** @type {!proto.stream.SortOrder} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.SortOrder} value */\r\n        proto.stream.GetRoomListExReq.prototype.setOrder = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 pageNo = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getPageno = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomListExReq.prototype.setPageno = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 pageSize = 6;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomListExReq.prototype.getPagesize = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomListExReq.prototype.setPagesize = function (value) {\r\n            jspb.Message.setProto3IntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.RoomInfoEx = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.RoomInfoEx, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.RoomInfoEx.displayName = \"proto.stream.RoomInfoEx\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.RoomInfoEx.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.RoomInfoEx.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.RoomInfoEx} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomInfoEx.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    roomname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    gameplayer: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    watchplayer: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    mode: jspb.Message.getFieldWithDefault(msg, 6, 0),\r\n                    canwatch: jspb.Message.getFieldWithDefault(msg, 7, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64(),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 9, 0),\r\n                    state: jspb.Message.getFieldWithDefault(msg, 10, 0),\r\n                    createtime: jspb.Message.getFieldWithDefault(msg, 11, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.RoomInfoEx}\r\n         */\r\n        proto.stream.RoomInfoEx.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.RoomInfoEx;\r\n            return proto.stream.RoomInfoEx.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.RoomInfoEx} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.RoomInfoEx}\r\n         */\r\n        proto.stream.RoomInfoEx.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setRoomname(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayer(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameplayer(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setWatchplayer(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setMode(value);\r\n                    break;\r\n                case 7:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setCanwatch(value);\r\n                    break;\r\n                case 8:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                case 9:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                case 10:\r\n                    var value = /** @type {!proto.stream.RoomState} */ (reader.readEnum());\r\n                    msg.setState(value);\r\n                    break;\r\n                case 11:\r\n                    var value = /** @type {number} */ (reader.readUint64());\r\n                    msg.setCreatetime(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.RoomInfoEx.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.RoomInfoEx} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.RoomInfoEx.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomname();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMaxplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGameplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getWatchplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMode();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCanwatch();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    7,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    8,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    9,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getState();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    10,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCreatetime();\r\n            if (f !== 0) {\r\n                writer.writeUint64(\r\n                    11,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.RoomInfoEx.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string roomName = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getRoomname = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.RoomInfoEx.prototype.setRoomname = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayer = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getMaxplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setMaxplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gamePlayer = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getGameplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setGameplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 watchPlayer = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getWatchplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setWatchplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 mode = 6;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getMode = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setMode = function (value) {\r\n            jspb.Message.setProto3IntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 canWatch = 7;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getCanwatch = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setCanwatch = function (value) {\r\n            jspb.Message.setProto3IntField(this, 7, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 8;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 8;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 8;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.RoomInfoEx.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 8, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 9;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 9, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomState state = 10;\r\n         * @return {!proto.stream.RoomState}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getState = function () {\r\n            return /** @type {!proto.stream.RoomState} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.RoomState} value */\r\n        proto.stream.RoomInfoEx.prototype.setState = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 10, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 createTime = 11;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomInfoEx.prototype.getCreatetime = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomInfoEx.prototype.setCreatetime = function (value) {\r\n            jspb.Message.setProto3IntField(this, 11, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomListExRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.GetRoomListExRsp.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomListExRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomListExRsp.displayName = \"proto.stream.GetRoomListExRsp\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.GetRoomListExRsp.repeatedFields_ = [3];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomListExRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomListExRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomListExRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomListExRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    total: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roominfoexList: jspb.Message.toObjectList(msg.getRoominfoexList(),\r\n                        proto.stream.RoomInfoEx.toObject, includeInstance)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomListExRsp}\r\n         */\r\n        proto.stream.GetRoomListExRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomListExRsp;\r\n            return proto.stream.GetRoomListExRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomListExRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomListExRsp}\r\n         */\r\n        proto.stream.GetRoomListExRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setTotal(value);\r\n                    break;\r\n                case 3:\r\n                    var value = new proto.stream.RoomInfoEx;\r\n                    reader.readMessage(value, proto.stream.RoomInfoEx.deserializeBinaryFromReader);\r\n                    msg.addRoominfoex(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomListExRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomListExRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomListExRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomListExRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getTotal();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoominfoexList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedMessage(\r\n                    3,\r\n                    f,\r\n                    proto.stream.RoomInfoEx.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.GetRoomListExRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.GetRoomListExRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 total = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomListExRsp.prototype.getTotal = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomListExRsp.prototype.setTotal = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated RoomInfoEx roomInfoEx = 3;\r\n         * @return {!Array.<!proto.stream.RoomInfoEx>}\r\n         */\r\n        proto.stream.GetRoomListExRsp.prototype.getRoominfoexList = function () {\r\n            return /** @type{!Array.<!proto.stream.RoomInfoEx>} */ (\r\n                jspb.Message.getRepeatedWrapperField(this, proto.stream.RoomInfoEx, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<!proto.stream.RoomInfoEx>} value */\r\n        proto.stream.GetRoomListExRsp.prototype.setRoominfoexList = function (value) {\r\n            jspb.Message.setRepeatedWrapperField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!proto.stream.RoomInfoEx=} opt_value\r\n         * @param {number=} opt_index\r\n         * @return {!proto.stream.RoomInfoEx}\r\n         */\r\n        proto.stream.GetRoomListExRsp.prototype.addRoominfoex = function (opt_value, opt_index) {\r\n            return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.stream.RoomInfoEx, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.GetRoomListExRsp.prototype.clearRoominfoexList = function () {\r\n            this.setRoominfoexList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomDetailReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomDetailReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomDetailReq.displayName = \"proto.stream.GetRoomDetailReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomDetailReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomDetailReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomDetailReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomDetailReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomDetailReq}\r\n         */\r\n        proto.stream.GetRoomDetailReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomDetailReq;\r\n            return proto.stream.GetRoomDetailReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomDetailReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomDetailReq}\r\n         */\r\n        proto.stream.GetRoomDetailReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomDetailReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomDetailReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomDetailReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomDetailReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.GetRoomDetailReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.GetRoomDetailReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.GetRoomDetailReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.GetRoomDetailReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.GetRoomDetailRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.GetRoomDetailRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.GetRoomDetailRsp.displayName = \"proto.stream.GetRoomDetailRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.GetRoomDetailRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.GetRoomDetailRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.GetRoomDetailRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.GetRoomDetailRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomdetail: (f = msg.getRoomdetail()) && proto.stream.RoomDetail.toObject(includeInstance, f)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.GetRoomDetailRsp}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.GetRoomDetailRsp;\r\n            return proto.stream.GetRoomDetailRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.GetRoomDetailRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.GetRoomDetailRsp}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = new proto.stream.RoomDetail;\r\n                    reader.readMessage(value, proto.stream.RoomDetail.deserializeBinaryFromReader);\r\n                    msg.setRoomdetail(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.GetRoomDetailRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.GetRoomDetailRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.GetRoomDetailRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomdetail();\r\n            if (f != null) {\r\n                writer.writeMessage(\r\n                    2,\r\n                    f,\r\n                    proto.stream.RoomDetail.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.GetRoomDetailRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional RoomDetail roomDetail = 2;\r\n         * @return {?proto.stream.RoomDetail}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.prototype.getRoomdetail = function () {\r\n            return /** @type{?proto.stream.RoomDetail} */ (\r\n                jspb.Message.getWrapperField(this, proto.stream.RoomDetail, 2));\r\n        };\r\n\r\n\r\n        /** @param {?proto.stream.RoomDetail|undefined} value */\r\n        proto.stream.GetRoomDetailRsp.prototype.setRoomdetail = function (value) {\r\n            jspb.Message.setWrapperField(this, 2, value);\r\n        };\r\n\r\n\r\n        proto.stream.GetRoomDetailRsp.prototype.clearRoomdetail = function () {\r\n            this.setRoomdetail(undefined);\r\n        };\r\n\r\n\r\n        /**\r\n         * Returns whether this field is set.\r\n         * @return {!boolean}\r\n         */\r\n        proto.stream.GetRoomDetailRsp.prototype.hasRoomdetail = function () {\r\n            return jspb.Message.getField(this, 2) != null;\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.RoomDetail = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.RoomDetail.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.RoomDetail, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.RoomDetail.displayName = \"proto.stream.RoomDetail\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.RoomDetail.repeatedFields_ = [9];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.RoomDetail.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.RoomDetail.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.RoomDetail} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.RoomDetail.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    state: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    maxplayer: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    mode: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    canwatch: jspb.Message.getFieldWithDefault(msg, 5, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64(),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 7, 0),\r\n                    createflag: jspb.Message.getFieldWithDefault(msg, 8, 0),\r\n                    playerinfosList: jspb.Message.toObjectList(msg.getPlayerinfosList(),\r\n                        proto.stream.PlayerInfo.toObject, includeInstance)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.RoomDetail}\r\n         */\r\n        proto.stream.RoomDetail.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.RoomDetail;\r\n            return proto.stream.RoomDetail.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.RoomDetail} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.RoomDetail}\r\n         */\r\n        proto.stream.RoomDetail.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setState(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayer(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setMode(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readInt32());\r\n                    msg.setCanwatch(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                case 7:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                case 8:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setCreateflag(value);\r\n                    break;\r\n                case 9:\r\n                    var value = new proto.stream.PlayerInfo;\r\n                    reader.readMessage(value, proto.stream.PlayerInfo.deserializeBinaryFromReader);\r\n                    msg.addPlayerinfos(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomDetail.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.RoomDetail.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.RoomDetail} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.RoomDetail.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getState();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMaxplayer();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMode();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCanwatch();\r\n            if (f !== 0) {\r\n                writer.writeInt32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    7,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCreateflag();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    8,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPlayerinfosList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedMessage(\r\n                    9,\r\n                    f,\r\n                    proto.stream.PlayerInfo.serializeBinaryToWriter\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.RoomDetail.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 state = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getState = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setState = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayer = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getMaxplayer = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setMaxplayer = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 mode = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getMode = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setMode = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional int32 canWatch = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getCanwatch = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setCanwatch = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 6;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 6;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 6;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.RoomDetail.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 7;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 7, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 createFlag = 8;\r\n         * @return {number}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getCreateflag = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.RoomDetail.prototype.setCreateflag = function (value) {\r\n            jspb.Message.setProto3IntField(this, 8, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated PlayerInfo playerInfos = 9;\r\n         * @return {!Array.<!proto.stream.PlayerInfo>}\r\n         */\r\n        proto.stream.RoomDetail.prototype.getPlayerinfosList = function () {\r\n            return /** @type{!Array.<!proto.stream.PlayerInfo>} */ (\r\n                jspb.Message.getRepeatedWrapperField(this, proto.stream.PlayerInfo, 9));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<!proto.stream.PlayerInfo>} value */\r\n        proto.stream.RoomDetail.prototype.setPlayerinfosList = function (value) {\r\n            jspb.Message.setRepeatedWrapperField(this, 9, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!proto.stream.PlayerInfo=} opt_value\r\n         * @param {number=} opt_index\r\n         * @return {!proto.stream.PlayerInfo}\r\n         */\r\n        proto.stream.RoomDetail.prototype.addPlayerinfos = function (opt_value, opt_index) {\r\n            return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.stream.PlayerInfo, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.RoomDetail.prototype.clearPlayerinfosList = function () {\r\n            this.setPlayerinfosList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.KickPlayer = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.KickPlayer, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.KickPlayer.displayName = \"proto.stream.KickPlayer\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.KickPlayer.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.KickPlayer.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.KickPlayer} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayer.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    srcuserid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.KickPlayer}\r\n         */\r\n        proto.stream.KickPlayer.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.KickPlayer;\r\n            return proto.stream.KickPlayer.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.KickPlayer} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.KickPlayer}\r\n         */\r\n        proto.stream.KickPlayer.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuserid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.KickPlayer.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.KickPlayer.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.KickPlayer} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.KickPlayer.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getSrcuserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.KickPlayer.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUserID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getSrcuserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayer.prototype.setSrcuserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayer.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.KickPlayer.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.KickPlayer.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.KickPlayerRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.KickPlayerRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.KickPlayerRsp.displayName = \"proto.stream.KickPlayerRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.KickPlayerRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.KickPlayerRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.KickPlayerRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayerRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.KickPlayerRsp}\r\n         */\r\n        proto.stream.KickPlayerRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.KickPlayerRsp;\r\n            return proto.stream.KickPlayerRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.KickPlayerRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.KickPlayerRsp}\r\n         */\r\n        proto.stream.KickPlayerRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.KickPlayerRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.KickPlayerRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.KickPlayerRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.KickPlayerRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.KickPlayerRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.KickPlayerRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayerRsp.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayerRsp.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 3;\r\n         * @return {string}\r\n         */\r\n        proto.stream.KickPlayerRsp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.KickPlayerRsp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayerRsp.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayerRsp.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.KickPlayerNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.KickPlayerNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.KickPlayerNotify.displayName = \"proto.stream.KickPlayerNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.KickPlayerNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.KickPlayerNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.KickPlayerNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.KickPlayerNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    srcuserid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cpproto: msg.getCpproto_asB64(),\r\n                    owner: jspb.Message.getFieldWithDefault(msg, 4, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.KickPlayerNotify}\r\n         */\r\n        proto.stream.KickPlayerNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.KickPlayerNotify;\r\n            return proto.stream.KickPlayerNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.KickPlayerNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.KickPlayerNotify}\r\n         */\r\n        proto.stream.KickPlayerNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setOwner(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.KickPlayerNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.KickPlayerNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.KickPlayerNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSrcuserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getOwner();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUserID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getSrcuserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayerNotify.prototype.setSrcuserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayerNotify.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.KickPlayerNotify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 owner = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.KickPlayerNotify.prototype.getOwner = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.KickPlayerNotify.prototype.setOwner = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetRoomPropertyReq = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetRoomPropertyReq, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetRoomPropertyReq.displayName = \"proto.stream.SetRoomPropertyReq\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetRoomPropertyReq.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetRoomPropertyReq.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetRoomPropertyReq} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetRoomPropertyReq.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetRoomPropertyReq}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetRoomPropertyReq;\r\n            return proto.stream.SetRoomPropertyReq.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetRoomPropertyReq} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetRoomPropertyReq}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetRoomPropertyReq.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetRoomPropertyReq} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetRoomPropertyReq.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetRoomPropertyReq.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.SetRoomPropertyReq.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetRoomPropertyReq.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetRoomPropertyReq.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.SetRoomPropertyReq.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetRoomPropertyRsp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetRoomPropertyRsp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetRoomPropertyRsp.displayName = \"proto.stream.SetRoomPropertyRsp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetRoomPropertyRsp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetRoomPropertyRsp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetRoomPropertyRsp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetRoomPropertyRsp}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetRoomPropertyRsp;\r\n            return proto.stream.SetRoomPropertyRsp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetRoomPropertyRsp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetRoomPropertyRsp}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {!proto.stream.ErrorCode} */ (reader.readEnum());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetRoomPropertyRsp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetRoomPropertyRsp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0.0) {\r\n                writer.writeEnum(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional ErrorCode status = 1;\r\n         * @return {!proto.stream.ErrorCode}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getStatus = function () {\r\n            return /** @type {!proto.stream.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {!proto.stream.ErrorCode} value */\r\n        proto.stream.SetRoomPropertyRsp.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3EnumField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.SetRoomPropertyRsp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetRoomPropertyRsp.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetRoomPropertyRsp.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.SetRoomPropertyRsp.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.NoticeRoomProperty = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.NoticeRoomProperty, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.NoticeRoomProperty.displayName = \"proto.stream.NoticeRoomProperty\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.NoticeRoomProperty.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.NoticeRoomProperty.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.NoticeRoomProperty} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.NoticeRoomProperty.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    roomproperty: msg.getRoomproperty_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.NoticeRoomProperty}\r\n         */\r\n        proto.stream.NoticeRoomProperty.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.NoticeRoomProperty;\r\n            return proto.stream.NoticeRoomProperty.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.NoticeRoomProperty} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.NoticeRoomProperty}\r\n         */\r\n        proto.stream.NoticeRoomProperty.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setRoomproperty(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.NoticeRoomProperty.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.NoticeRoomProperty} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.NoticeRoomProperty.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomproperty_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.NoticeRoomProperty.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.NoticeRoomProperty.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.getRoomproperty = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 3;\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.getRoomproperty_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes roomProperty = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getRoomproperty()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.NoticeRoomProperty.prototype.getRoomproperty_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getRoomproperty()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.NoticeRoomProperty.prototype.setRoomproperty = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.CmdId = {\r\n            NOCMD: 0,\r\n            LOGINREQ: 1101,\r\n            LOGINRSP: 1102,\r\n            LOGOUTREQ: 1105,\r\n            LOGOUTRSP: 1106,\r\n            HEARTBEATREQ: 1103,\r\n            NETWORKSTATEREQ: 1120,\r\n            NETWORKSTATERSP: 1121,\r\n            NOTICENETWORKSTATEREQ: 1122,\r\n            CREATEROOMREQ: 1203,\r\n            CREATEROOMRSP: 1204,\r\n            GETROOMLISTREQ: 1207,\r\n            GETROOMLISTRSP: 1208,\r\n            ROOMLISTEXREQ: 1215,\r\n            ROOMLISTEXRSP: 1216,\r\n            SETROOMPROPERTYREQ: 1219,\r\n            SETROOMPROPERTYRSP: 1220,\r\n            NOTICEROOMPROPERTY: 1307,\r\n            GETROOMDETAILREQ: 1209,\r\n            GETROOMDETAILRSP: 1210,\r\n            JOINROOMREQ: 1201,\r\n            JOINROOMRSP: 1202,\r\n            NOTICEUSERJOINREQ: 1301,\r\n            LEAVEROOMREQ: 1205,\r\n            LEAVEROOMRSP: 1206,\r\n            NOTICEUSERLEAVEREQ: 1302,\r\n            JOINOVERREQ: 1213,\r\n            JOINOVERRSP: 1214,\r\n            JOINOVERNOTIFY: 1306,\r\n            JOINOPENREQ: 1221,\r\n            JOINOPENRSP: 1222,\r\n            JOINOPENNOTIFY: 1308,\r\n            DISCONNECTREQ: 1107,\r\n            DISCONNECTRSP: 1108,\r\n            KICKPLAYERREQ: 1303,\r\n            KICKPLAYERRSP: 1304,\r\n            KICKPLAYERNOTIFY: 1305\r\n        };\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.JoinRoomType = {\r\n            NOJOIN: 0,\r\n            JOINSPECIALROOM: 1,\r\n            JOINROOMWITHPROPERTY: 2,\r\n            JOINRANDOMROOM: 3\r\n        };\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.RoomState = {\r\n            ROOMSTATENIL: 0,\r\n            ROOMSTATEOPEN: 1,\r\n            ROOMSTATECLOSED: 2\r\n        };\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.RoomListSort = {\r\n            ROOMSORTNIL: 0,\r\n            ROOMSORTCREATETIME: 1,\r\n            ROOMSORTPLAYERNUM: 2,\r\n            ROOMSORTSTATE: 3\r\n        };\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.SortOrder = {\r\n            SORTASC: 0,\r\n            SORTDESC: 1\r\n        };\r\n\r\n        goog.object.extend(exports, proto.stream);\r\n\r\n    }, {\"./errorcode_pb.js\": 2, \"google-protobuf\": 1}], 5: [function (_require, module, exports) {\r\n        /**\r\n         * @fileoverview\r\n         * @enhanceable\r\n         * @suppress {messageConventions} JS Compiler reports an error if a variable or\r\n         *     field starts with 'MSG_' and isn't a translatable message.\r\n         * @public\r\n         */\r\n        // GENERATED CODE -- DO NOT EDIT!\r\n\r\n        var jspb = _require(\"google-protobuf\");\r\n        var goog = jspb;\r\n        var global = window;// var global = Function('return this')();\r\n\r\n        goog.exportSymbol(\"proto.stream.Broadcast\", null, global);\r\n        goog.exportSymbol(\"proto.stream.BroadcastAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CheckIn\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CheckInAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.CheckInNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.FrameBroadcast\", null, global);\r\n        goog.exportSymbol(\"proto.stream.FrameBroadcastAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.FrameDataNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.FrameSyncNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.Heartbeat\", null, global);\r\n        goog.exportSymbol(\"proto.stream.HeartbeatAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.Notify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.Publish\", null, global);\r\n        goog.exportSymbol(\"proto.stream.PublishAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.PublishNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SDKHotelCmdID\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetFrameSyncRate\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetFrameSyncRateAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetFrameSyncRateNotify\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetUseTimeStamp\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SetUseTimeStampAck\", null, global);\r\n        goog.exportSymbol(\"proto.stream.Subscribe\", null, global);\r\n        goog.exportSymbol(\"proto.stream.SubscribeAck\", null, global);\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.CheckIn = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.CheckIn, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.CheckIn.displayName = \"proto.stream.CheckIn\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.CheckIn.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.CheckIn.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.CheckIn} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckIn.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    bookid: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\r\n                    key: jspb.Message.getFieldWithDefault(msg, 5, \"\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.CheckIn}\r\n         */\r\n        proto.stream.CheckIn.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.CheckIn;\r\n            return proto.stream.CheckIn.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.CheckIn} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.CheckIn}\r\n         */\r\n        proto.stream.CheckIn.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setBookid(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setKey(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.CheckIn.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.CheckIn.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.CheckIn} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.CheckIn.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getBookid();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getKey();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckIn.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckIn.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CheckIn.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CheckIn.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckIn.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckIn.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string bookID = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CheckIn.prototype.getBookid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CheckIn.prototype.setBookid = function (value) {\r\n            jspb.Message.setProto3StringField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string key = 5;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CheckIn.prototype.getKey = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CheckIn.prototype.setKey = function (value) {\r\n            jspb.Message.setProto3StringField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.CheckInAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.CheckInAck.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.CheckInAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.CheckInAck.displayName = \"proto.stream.CheckInAck\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.CheckInAck.repeatedFields_ = [3, 4];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.CheckInAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.CheckInAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.CheckInAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckInAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    bookid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    checkinsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    playersList: jspb.Message.getRepeatedField(msg, 4),\r\n                    maxplayers: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.CheckInAck}\r\n         */\r\n        proto.stream.CheckInAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.CheckInAck;\r\n            return proto.stream.CheckInAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.CheckInAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.CheckInAck}\r\n         */\r\n        proto.stream.CheckInAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setBookid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());\r\n                    msg.setCheckinsList(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());\r\n                    msg.setPlayersList(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayers(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.CheckInAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.CheckInAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.CheckInAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.CheckInAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getBookid();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCheckinsList();\r\n            if (f.length > 0) {\r\n                writer.writePackedUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPlayersList();\r\n            if (f.length > 0) {\r\n                writer.writePackedUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMaxplayers();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckInAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckInAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string bookID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CheckInAck.prototype.getBookid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CheckInAck.prototype.setBookid = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated uint32 checkins = 3;\r\n         * @return {!Array.<number>}\r\n         */\r\n        proto.stream.CheckInAck.prototype.getCheckinsList = function () {\r\n            return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<number>} value */\r\n        proto.stream.CheckInAck.prototype.setCheckinsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!number} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.CheckInAck.prototype.addCheckins = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.CheckInAck.prototype.clearCheckinsList = function () {\r\n            this.setCheckinsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated uint32 players = 4;\r\n         * @return {!Array.<number>}\r\n         */\r\n        proto.stream.CheckInAck.prototype.getPlayersList = function () {\r\n            return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 4));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<number>} value */\r\n        proto.stream.CheckInAck.prototype.setPlayersList = function (value) {\r\n            jspb.Message.setField(this, 4, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!number} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.CheckInAck.prototype.addPlayers = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.CheckInAck.prototype.clearPlayersList = function () {\r\n            this.setPlayersList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayers = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckInAck.prototype.getMaxplayers = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckInAck.prototype.setMaxplayers = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.Heartbeat = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.Heartbeat, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.Heartbeat.displayName = \"proto.stream.Heartbeat\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.Heartbeat.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.Heartbeat.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.Heartbeat} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Heartbeat.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 3, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.Heartbeat}\r\n         */\r\n        proto.stream.Heartbeat.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.Heartbeat;\r\n            return proto.stream.Heartbeat.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.Heartbeat} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.Heartbeat}\r\n         */\r\n        proto.stream.Heartbeat.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Heartbeat.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.Heartbeat.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.Heartbeat} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.Heartbeat.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Heartbeat.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Heartbeat.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.Heartbeat.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.Heartbeat.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Heartbeat.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Heartbeat.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.HeartbeatAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.HeartbeatAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.HeartbeatAck.displayName = \"proto.stream.HeartbeatAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.HeartbeatAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.HeartbeatAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.HeartbeatAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.HeartbeatAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.HeartbeatAck}\r\n         */\r\n        proto.stream.HeartbeatAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.HeartbeatAck;\r\n            return proto.stream.HeartbeatAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.HeartbeatAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.HeartbeatAck}\r\n         */\r\n        proto.stream.HeartbeatAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.HeartbeatAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.HeartbeatAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.HeartbeatAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.HeartbeatAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.HeartbeatAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.HeartbeatAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.Broadcast = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Broadcast.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.Broadcast, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.Broadcast.displayName = \"proto.stream.Broadcast\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.Broadcast.repeatedFields_ = [3];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.Broadcast.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.Broadcast.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.Broadcast} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Broadcast.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    flag: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    dstuidsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.Broadcast}\r\n         */\r\n        proto.stream.Broadcast.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.Broadcast;\r\n            return proto.stream.Broadcast.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.Broadcast} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.Broadcast}\r\n         */\r\n        proto.stream.Broadcast.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFlag(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());\r\n                    msg.setDstuidsList(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Broadcast.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.Broadcast.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.Broadcast} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.Broadcast.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFlag();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getDstuidsList();\r\n            if (f.length > 0) {\r\n                writer.writePackedUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.Broadcast.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.Broadcast.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 flag = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Broadcast.prototype.getFlag = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Broadcast.prototype.setFlag = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated uint32 dstUids = 3;\r\n         * @return {!Array.<number>}\r\n         */\r\n        proto.stream.Broadcast.prototype.getDstuidsList = function () {\r\n            return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<number>} value */\r\n        proto.stream.Broadcast.prototype.setDstuidsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!number} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.Broadcast.prototype.addDstuids = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.Broadcast.prototype.clearDstuidsList = function () {\r\n            this.setDstuidsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.Broadcast.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.Broadcast.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Broadcast.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.Broadcast.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.BroadcastAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.BroadcastAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.BroadcastAck.displayName = \"proto.stream.BroadcastAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.BroadcastAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.BroadcastAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.BroadcastAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.BroadcastAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.BroadcastAck}\r\n         */\r\n        proto.stream.BroadcastAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.BroadcastAck;\r\n            return proto.stream.BroadcastAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.BroadcastAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.BroadcastAck}\r\n         */\r\n        proto.stream.BroadcastAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.BroadcastAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.BroadcastAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.BroadcastAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.BroadcastAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.BroadcastAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.BroadcastAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.CheckInNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.CheckInNotify.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.CheckInNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.CheckInNotify.displayName = \"proto.stream.CheckInNotify\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.CheckInNotify.repeatedFields_ = [3, 4];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.CheckInNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.CheckInNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.CheckInNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.CheckInNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    bookid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\r\n                    checkinsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    playersList: jspb.Message.getRepeatedField(msg, 4),\r\n                    maxplayers: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.CheckInNotify}\r\n         */\r\n        proto.stream.CheckInNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.CheckInNotify;\r\n            return proto.stream.CheckInNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.CheckInNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.CheckInNotify}\r\n         */\r\n        proto.stream.CheckInNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setUserid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.setBookid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());\r\n                    msg.setCheckinsList(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Array.<number>} */ (reader.readPackedUint32());\r\n                    msg.setPlayersList(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setMaxplayers(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.CheckInNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.CheckInNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.CheckInNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getUserid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getBookid();\r\n            if (f.length > 0) {\r\n                writer.writeString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCheckinsList();\r\n            if (f.length > 0) {\r\n                writer.writePackedUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPlayersList();\r\n            if (f.length > 0) {\r\n                writer.writePackedUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getMaxplayers();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 userID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.getUserid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckInNotify.prototype.setUserid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional string bookID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.getBookid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.CheckInNotify.prototype.setBookid = function (value) {\r\n            jspb.Message.setProto3StringField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated uint32 checkins = 3;\r\n         * @return {!Array.<number>}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.getCheckinsList = function () {\r\n            return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<number>} value */\r\n        proto.stream.CheckInNotify.prototype.setCheckinsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!number} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.CheckInNotify.prototype.addCheckins = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.CheckInNotify.prototype.clearCheckinsList = function () {\r\n            this.setCheckinsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated uint32 players = 4;\r\n         * @return {!Array.<number>}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.getPlayersList = function () {\r\n            return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 4));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<number>} value */\r\n        proto.stream.CheckInNotify.prototype.setPlayersList = function (value) {\r\n            jspb.Message.setField(this, 4, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!number} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.CheckInNotify.prototype.addPlayers = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.CheckInNotify.prototype.clearPlayersList = function () {\r\n            this.setPlayersList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 maxPlayers = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.CheckInNotify.prototype.getMaxplayers = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.CheckInNotify.prototype.setMaxplayers = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.Notify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.Notify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.Notify.displayName = \"proto.stream.Notify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.Notify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.Notify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.Notify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Notify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.Notify}\r\n         */\r\n        proto.stream.Notify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.Notify;\r\n            return proto.stream.Notify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.Notify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.Notify}\r\n         */\r\n        proto.stream.Notify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Notify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.Notify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.Notify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.Notify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSrcuid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUid = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Notify.prototype.getSrcuid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Notify.prototype.setSrcuid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Notify.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Notify.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.Notify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.Notify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Notify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.Notify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.Subscribe = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Subscribe.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.Subscribe, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.Subscribe.displayName = \"proto.stream.Subscribe\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.Subscribe.repeatedFields_ = [3, 4];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.Subscribe.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.Subscribe.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.Subscribe} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Subscribe.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    confirmsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    cancelsList: jspb.Message.getRepeatedField(msg, 4)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.Subscribe}\r\n         */\r\n        proto.stream.Subscribe.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.Subscribe;\r\n            return proto.stream.Subscribe.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.Subscribe} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.Subscribe}\r\n         */\r\n        proto.stream.Subscribe.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.addConfirms(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.addCancels(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Subscribe.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.Subscribe.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.Subscribe} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.Subscribe.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getConfirmsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedString(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCancelsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedString(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Subscribe.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Subscribe.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.Subscribe.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.Subscribe.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated string confirms = 3;\r\n         * @return {!Array.<string>}\r\n         */\r\n        proto.stream.Subscribe.prototype.getConfirmsList = function () {\r\n            return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<string>} value */\r\n        proto.stream.Subscribe.prototype.setConfirmsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!string} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.Subscribe.prototype.addConfirms = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.Subscribe.prototype.clearConfirmsList = function () {\r\n            this.setConfirmsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated string cancels = 4;\r\n         * @return {!Array.<string>}\r\n         */\r\n        proto.stream.Subscribe.prototype.getCancelsList = function () {\r\n            return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<string>} value */\r\n        proto.stream.Subscribe.prototype.setCancelsList = function (value) {\r\n            jspb.Message.setField(this, 4, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!string} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.Subscribe.prototype.addCancels = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 4, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.Subscribe.prototype.clearCancelsList = function () {\r\n            this.setCancelsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SubscribeAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.SubscribeAck.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.SubscribeAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SubscribeAck.displayName = \"proto.stream.SubscribeAck\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.SubscribeAck.repeatedFields_ = [2];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SubscribeAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SubscribeAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SubscribeAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SubscribeAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    groupsList: jspb.Message.getRepeatedField(msg, 2)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SubscribeAck}\r\n         */\r\n        proto.stream.SubscribeAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SubscribeAck;\r\n            return proto.stream.SubscribeAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SubscribeAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SubscribeAck}\r\n         */\r\n        proto.stream.SubscribeAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.addGroups(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SubscribeAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SubscribeAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SubscribeAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SubscribeAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGroupsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedString(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SubscribeAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SubscribeAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated string groups = 2;\r\n         * @return {!Array.<string>}\r\n         */\r\n        proto.stream.SubscribeAck.prototype.getGroupsList = function () {\r\n            return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<string>} value */\r\n        proto.stream.SubscribeAck.prototype.setGroupsList = function (value) {\r\n            jspb.Message.setField(this, 2, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!string} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.SubscribeAck.prototype.addGroups = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 2, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.SubscribeAck.prototype.clearGroupsList = function () {\r\n            this.setGroupsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.Publish = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.Publish.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.Publish, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.Publish.displayName = \"proto.stream.Publish\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.Publish.repeatedFields_ = [3];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.Publish.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.Publish.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.Publish} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.Publish.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    groupsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.Publish}\r\n         */\r\n        proto.stream.Publish.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.Publish;\r\n            return proto.stream.Publish.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.Publish} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.Publish}\r\n         */\r\n        proto.stream.Publish.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.addGroups(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Publish.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.Publish.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.Publish} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.Publish.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGroupsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedString(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.Publish.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.Publish.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.Publish.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.Publish.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated string groups = 3;\r\n         * @return {!Array.<string>}\r\n         */\r\n        proto.stream.Publish.prototype.getGroupsList = function () {\r\n            return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<string>} value */\r\n        proto.stream.Publish.prototype.setGroupsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!string} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.Publish.prototype.addGroups = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.Publish.prototype.clearGroupsList = function () {\r\n            this.setGroupsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.Publish.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.Publish.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.Publish.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.Publish.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.PublishAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.PublishAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.PublishAck.displayName = \"proto.stream.PublishAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.PublishAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.PublishAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.PublishAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PublishAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    dstnum: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.PublishAck}\r\n         */\r\n        proto.stream.PublishAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.PublishAck;\r\n            return proto.stream.PublishAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.PublishAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.PublishAck}\r\n         */\r\n        proto.stream.PublishAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setDstnum(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.PublishAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.PublishAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.PublishAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.PublishAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getDstnum();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.PublishAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.PublishAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 dstNum = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.PublishAck.prototype.getDstnum = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.PublishAck.prototype.setDstnum = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.PublishNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, proto.stream.PublishNotify.repeatedFields_, null);\r\n        };\r\n        goog.inherits(proto.stream.PublishNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.PublishNotify.displayName = \"proto.stream.PublishNotify\";\r\n        }\r\n        /**\r\n         * List of repeated fields within this message type.\r\n         * @private {!Array<number>}\r\n         * @const\r\n         */\r\n        proto.stream.PublishNotify.repeatedFields_ = [3];\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.PublishNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.PublishNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.PublishNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.PublishNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    groupsList: jspb.Message.getRepeatedField(msg, 3),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.PublishNotify}\r\n         */\r\n        proto.stream.PublishNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.PublishNotify;\r\n            return proto.stream.PublishNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.PublishNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.PublishNotify}\r\n         */\r\n        proto.stream.PublishNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {string} */ (reader.readString());\r\n                    msg.addGroups(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.PublishNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.PublishNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.PublishNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.PublishNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSrcuid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getGroupsList();\r\n            if (f.length > 0) {\r\n                writer.writeRepeatedString(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUid = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getSrcuid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.PublishNotify.prototype.setSrcuid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.PublishNotify.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * repeated string groups = 3;\r\n         * @return {!Array.<string>}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getGroupsList = function () {\r\n            return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));\r\n        };\r\n\r\n\r\n        /** @param {!Array.<string>} value */\r\n        proto.stream.PublishNotify.prototype.setGroupsList = function (value) {\r\n            jspb.Message.setField(this, 3, value || []);\r\n        };\r\n\r\n\r\n        /**\r\n         * @param {!string} value\r\n         * @param {number=} opt_index\r\n         */\r\n        proto.stream.PublishNotify.prototype.addGroups = function (value, opt_index) {\r\n            jspb.Message.addToRepeatedField(this, 3, value, opt_index);\r\n        };\r\n\r\n\r\n        proto.stream.PublishNotify.prototype.clearGroupsList = function () {\r\n            this.setGroupsList([]);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 4;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.PublishNotify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.PublishNotify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetUseTimeStamp = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetUseTimeStamp, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetUseTimeStamp.displayName = \"proto.stream.SetUseTimeStamp\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetUseTimeStamp.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetUseTimeStamp.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetUseTimeStamp} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetUseTimeStamp.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    usetimestamp: jspb.Message.getFieldWithDefault(msg, 4, false)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetUseTimeStamp}\r\n         */\r\n        proto.stream.SetUseTimeStamp.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetUseTimeStamp;\r\n            return proto.stream.SetUseTimeStamp.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetUseTimeStamp} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetUseTimeStamp}\r\n         */\r\n        proto.stream.SetUseTimeStamp.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {boolean} */ (reader.readBool());\r\n                    msg.setUsetimestamp(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetUseTimeStamp.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetUseTimeStamp.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetUseTimeStamp} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetUseTimeStamp.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getUsetimestamp();\r\n            if (f) {\r\n                writer.writeBool(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetUseTimeStamp.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetUseTimeStamp.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetUseTimeStamp.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.SetUseTimeStamp.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetUseTimeStamp.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetUseTimeStamp.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bool useTimeStamp = 4;\r\n         * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\r\n         * You should avoid comparisons like {@code val === true/false} in those cases.\r\n         * @return {boolean}\r\n         */\r\n        proto.stream.SetUseTimeStamp.prototype.getUsetimestamp = function () {\r\n            return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\r\n        };\r\n\r\n\r\n        /** @param {boolean} value */\r\n        proto.stream.SetUseTimeStamp.prototype.setUsetimestamp = function (value) {\r\n            jspb.Message.setProto3BooleanField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetUseTimeStampAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetUseTimeStampAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetUseTimeStampAck.displayName = \"proto.stream.SetUseTimeStampAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetUseTimeStampAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetUseTimeStampAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetUseTimeStampAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetUseTimeStampAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetUseTimeStampAck}\r\n         */\r\n        proto.stream.SetUseTimeStampAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetUseTimeStampAck;\r\n            return proto.stream.SetUseTimeStampAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetUseTimeStampAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetUseTimeStampAck}\r\n         */\r\n        proto.stream.SetUseTimeStampAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint64());\r\n                    msg.setTimestamp(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetUseTimeStampAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetUseTimeStampAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetUseTimeStampAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetUseTimeStampAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getTimestamp();\r\n            if (f !== 0) {\r\n                writer.writeUint64(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetUseTimeStampAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetUseTimeStampAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 timeStamp = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetUseTimeStampAck.prototype.getTimestamp = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetUseTimeStampAck.prototype.setTimestamp = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetFrameSyncRate = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetFrameSyncRate, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetFrameSyncRate.displayName = \"proto.stream.SetFrameSyncRate\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetFrameSyncRate.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetFrameSyncRate.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetFrameSyncRate} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRate.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    framerate: jspb.Message.getFieldWithDefault(msg, 4, 0),\r\n                    frameidx: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetFrameSyncRate}\r\n         */\r\n        proto.stream.SetFrameSyncRate.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetFrameSyncRate;\r\n            return proto.stream.SetFrameSyncRate.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetFrameSyncRate} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetFrameSyncRate}\r\n         */\r\n        proto.stream.SetFrameSyncRate.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setGameid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFramerate(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFrameidx(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetFrameSyncRate.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetFrameSyncRate} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetFrameSyncRate.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getGameid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFramerate();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFrameidx();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 gameID = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.getGameid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRate.prototype.setGameid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 2;\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.SetFrameSyncRate.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRate.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 frameRate = 4;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.getFramerate = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRate.prototype.setFramerate = function (value) {\r\n            jspb.Message.setProto3IntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 frameIdx = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRate.prototype.getFrameidx = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRate.prototype.setFrameidx = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetFrameSyncRateAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetFrameSyncRateAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetFrameSyncRateAck.displayName = \"proto.stream.SetFrameSyncRateAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetFrameSyncRateAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetFrameSyncRateAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRateAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetFrameSyncRateAck}\r\n         */\r\n        proto.stream.SetFrameSyncRateAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetFrameSyncRateAck;\r\n            return proto.stream.SetFrameSyncRateAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetFrameSyncRateAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetFrameSyncRateAck}\r\n         */\r\n        proto.stream.SetFrameSyncRateAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetFrameSyncRateAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetFrameSyncRateAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetFrameSyncRateAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetFrameSyncRateAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRateAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRateAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.SetFrameSyncRateNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.SetFrameSyncRateNotify.displayName = \"proto.stream.SetFrameSyncRateNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.SetFrameSyncRateNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.SetFrameSyncRateNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.SetFrameSyncRateNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    framerate: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    frameidx: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    timestamp: jspb.Message.getFieldWithDefault(msg, 4, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.SetFrameSyncRateNotify}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.SetFrameSyncRateNotify;\r\n            return proto.stream.SetFrameSyncRateNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.SetFrameSyncRateNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.SetFrameSyncRateNotify}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFramerate(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFrameidx(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setTimestamp(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.SetFrameSyncRateNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.SetFrameSyncRateNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFramerate();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFrameidx();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getTimestamp();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 frameRate = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.getFramerate = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.setFramerate = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 frameIdx = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.getFrameidx = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.setFrameidx = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 timeStamp = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.getTimestamp = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.SetFrameSyncRateNotify.prototype.setTimestamp = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.FrameBroadcast = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.FrameBroadcast, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.FrameBroadcast.displayName = \"proto.stream.FrameBroadcast\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.FrameBroadcast.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.FrameBroadcast.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.FrameBroadcast} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameBroadcast.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    roomid: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cpproto: msg.getCpproto_asB64()\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.FrameBroadcast}\r\n         */\r\n        proto.stream.FrameBroadcast.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.FrameBroadcast;\r\n            return proto.stream.FrameBroadcast.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.FrameBroadcast} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.FrameBroadcast}\r\n         */\r\n        proto.stream.FrameBroadcast.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setRoomid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.FrameBroadcast.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.FrameBroadcast} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.FrameBroadcast.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getRoomid();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 roomID = 1;\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.getRoomid = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.FrameBroadcast.prototype.setRoomid = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameBroadcast.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameBroadcast.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.FrameBroadcast.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.FrameBroadcastAck = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.FrameBroadcastAck, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.FrameBroadcastAck.displayName = \"proto.stream.FrameBroadcastAck\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.FrameBroadcastAck.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.FrameBroadcastAck.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.FrameBroadcastAck} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameBroadcastAck.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    status: jspb.Message.getFieldWithDefault(msg, 1, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.FrameBroadcastAck}\r\n         */\r\n        proto.stream.FrameBroadcastAck.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.FrameBroadcastAck;\r\n            return proto.stream.FrameBroadcastAck.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.FrameBroadcastAck} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.FrameBroadcastAck}\r\n         */\r\n        proto.stream.FrameBroadcastAck.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setStatus(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameBroadcastAck.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.FrameBroadcastAck.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.FrameBroadcastAck} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.FrameBroadcastAck.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getStatus();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 status = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameBroadcastAck.prototype.getStatus = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameBroadcastAck.prototype.setStatus = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.FrameDataNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.FrameDataNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.FrameDataNotify.displayName = \"proto.stream.FrameDataNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.FrameDataNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.FrameDataNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.FrameDataNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameDataNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    srcuid: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    cpproto: msg.getCpproto_asB64(),\r\n                    timestamp: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                    frameidx: jspb.Message.getFieldWithDefault(msg, 5, 0)\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.FrameDataNotify}\r\n         */\r\n        proto.stream.FrameDataNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.FrameDataNotify;\r\n            return proto.stream.FrameDataNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.FrameDataNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.FrameDataNotify}\r\n         */\r\n        proto.stream.FrameDataNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setSrcuid(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {!Uint8Array} */ (reader.readBytes());\r\n                    msg.setCpproto(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setTimestamp(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setFrameidx(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.FrameDataNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.FrameDataNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.FrameDataNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getSrcuid();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getCpproto_asU8();\r\n            if (f.length > 0) {\r\n                writer.writeBytes(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getTimestamp();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getFrameidx();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 srcUid = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getSrcuid = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameDataNotify.prototype.setSrcuid = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameDataNotify.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * @return {!(string|Uint8Array)}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getCpproto = function () {\r\n            return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getCpproto_asB64 = function () {\r\n            return /** @type {string} */ (jspb.Message.bytesAsB64(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /**\r\n         * optional bytes cpProto = 3;\r\n         * Note that Uint8Array is not supported on all browsers.\r\n         * @see http://caniuse.com/Uint8Array\r\n         * This is a type-conversion wrapper around `getCpproto()`\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getCpproto_asU8 = function () {\r\n            return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\r\n                this.getCpproto()));\r\n        };\r\n\r\n\r\n        /** @param {!(string|Uint8Array)} value */\r\n        proto.stream.FrameDataNotify.prototype.setCpproto = function (value) {\r\n            jspb.Message.setProto3BytesField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 timeStamp = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getTimestamp = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.FrameDataNotify.prototype.setTimestamp = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 frameIdx = 5;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameDataNotify.prototype.getFrameidx = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameDataNotify.prototype.setFrameidx = function (value) {\r\n            jspb.Message.setProto3IntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * Generated by JsPbCodeGenerator.\r\n         * @param {Array=} opt_data Optional initial data array, typically from a\r\n         * server response, or constructed directly in Javascript. The array is used\r\n         * in place and becomes part of the constructed object. It is not cloned.\r\n         * If no data is provided, the constructed object will be empty, but still\r\n         * valid.\r\n         * @extends {jspb.Message}\r\n         * @constructor\r\n         */\r\n        proto.stream.FrameSyncNotify = function (opt_data) {\r\n            jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n        };\r\n        goog.inherits(proto.stream.FrameSyncNotify, jspb.Message);\r\n        if (goog.DEBUG && !COMPILED) {\r\n            proto.stream.FrameSyncNotify.displayName = \"proto.stream.FrameSyncNotify\";\r\n        }\r\n\r\n\r\n        if (jspb.Message.GENERATE_TO_OBJECT) {\r\n            /**\r\n             * Creates an object representation of this proto suitable for use in Soy templates.\r\n             * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n             * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n             * For the list of reserved names please see:\r\n             *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n             * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n             *     for transitional soy proto support: http://goto/soy-param-migration\r\n             * @return {!Object}\r\n             */\r\n            proto.stream.FrameSyncNotify.prototype.toObject = function (opt_includeInstance) {\r\n                return proto.stream.FrameSyncNotify.toObject(opt_includeInstance, this);\r\n            };\r\n\r\n\r\n            /**\r\n             * Static version of the {@see toObject} method.\r\n             * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n             *     instance for transitional soy proto support:\r\n             *     http://goto/soy-param-migration\r\n             * @param {!proto.stream.FrameSyncNotify} msg The msg instance to transform.\r\n             * @return {!Object}\r\n             * @suppress {unusedLocalVariables} f is only used for nested messages\r\n             */\r\n            proto.stream.FrameSyncNotify.toObject = function (includeInstance, msg) {\r\n                var f, obj = {\r\n                    priority: jspb.Message.getFieldWithDefault(msg, 1, 0),\r\n                    lastidx: jspb.Message.getFieldWithDefault(msg, 2, 0),\r\n                    nextidx: jspb.Message.getFieldWithDefault(msg, 3, 0),\r\n                    startts: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\r\n                    endts: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\r\n                    timestamp: jspb.Message.getFieldWithDefault(msg, 6, \"0\")\r\n                };\r\n\r\n                if (includeInstance) {\r\n                    obj.$jspbMessageInstance = msg;\r\n                }\r\n                return obj;\r\n            };\r\n        }\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format).\r\n         * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n         * @return {!proto.stream.FrameSyncNotify}\r\n         */\r\n        proto.stream.FrameSyncNotify.deserializeBinary = function (bytes) {\r\n            var reader = new jspb.BinaryReader(bytes);\r\n            var msg = new proto.stream.FrameSyncNotify;\r\n            return proto.stream.FrameSyncNotify.deserializeBinaryFromReader(msg, reader);\r\n        };\r\n\r\n\r\n        /**\r\n         * Deserializes binary data (in protobuf wire format) from the\r\n         * given reader into the given message object.\r\n         * @param {!proto.stream.FrameSyncNotify} msg The message object to deserialize into.\r\n         * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n         * @return {!proto.stream.FrameSyncNotify}\r\n         */\r\n        proto.stream.FrameSyncNotify.deserializeBinaryFromReader = function (msg, reader) {\r\n            while (reader.nextField()) {\r\n                if (reader.isEndGroup()) {\r\n                    break;\r\n                }\r\n                var field = reader.getFieldNumber();\r\n                switch (field) {\r\n                case 1:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setPriority(value);\r\n                    break;\r\n                case 2:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setLastidx(value);\r\n                    break;\r\n                case 3:\r\n                    var value = /** @type {number} */ (reader.readUint32());\r\n                    msg.setNextidx(value);\r\n                    break;\r\n                case 4:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setStartts(value);\r\n                    break;\r\n                case 5:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setEndts(value);\r\n                    break;\r\n                case 6:\r\n                    var value = /** @type {string} */ (reader.readUint64String());\r\n                    msg.setTimestamp(value);\r\n                    break;\r\n                default:\r\n                    reader.skipField();\r\n                    break;\r\n                }\r\n            }\r\n            return msg;\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the message to binary data (in protobuf wire format).\r\n         * @return {!Uint8Array}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.serializeBinary = function () {\r\n            var writer = new jspb.BinaryWriter();\r\n            proto.stream.FrameSyncNotify.serializeBinaryToWriter(this, writer);\r\n            return writer.getResultBuffer();\r\n        };\r\n\r\n\r\n        /**\r\n         * Serializes the given message to binary data (in protobuf wire\r\n         * format), writing to the given BinaryWriter.\r\n         * @param {!proto.stream.FrameSyncNotify} message\r\n         * @param {!jspb.BinaryWriter} writer\r\n         * @suppress {unusedLocalVariables} f is only used for nested messages\r\n         */\r\n        proto.stream.FrameSyncNotify.serializeBinaryToWriter = function (message, writer) {\r\n            var f = undefined;\r\n            f = message.getPriority();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    1,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getLastidx();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    2,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getNextidx();\r\n            if (f !== 0) {\r\n                writer.writeUint32(\r\n                    3,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getStartts();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    4,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getEndts();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    5,\r\n                    f\r\n                );\r\n            }\r\n            f = message.getTimestamp();\r\n            if (parseInt(f, 10) !== 0) {\r\n                writer.writeUint64String(\r\n                    6,\r\n                    f\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 priority = 1;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getPriority = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameSyncNotify.prototype.setPriority = function (value) {\r\n            jspb.Message.setProto3IntField(this, 1, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 lastIdx = 2;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getLastidx = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameSyncNotify.prototype.setLastidx = function (value) {\r\n            jspb.Message.setProto3IntField(this, 2, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint32 nextIdx = 3;\r\n         * @return {number}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getNextidx = function () {\r\n            return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\r\n        };\r\n\r\n\r\n        /** @param {number} value */\r\n        proto.stream.FrameSyncNotify.prototype.setNextidx = function (value) {\r\n            jspb.Message.setProto3IntField(this, 3, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 startTS = 4;\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getStartts = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.FrameSyncNotify.prototype.setStartts = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 4, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 endTS = 5;\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getEndts = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.FrameSyncNotify.prototype.setEndts = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 5, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * optional uint64 timeStamp = 6;\r\n         * @return {string}\r\n         */\r\n        proto.stream.FrameSyncNotify.prototype.getTimestamp = function () {\r\n            return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\r\n        };\r\n\r\n\r\n        /** @param {string} value */\r\n        proto.stream.FrameSyncNotify.prototype.setTimestamp = function (value) {\r\n            jspb.Message.setProto3StringIntField(this, 6, value);\r\n        };\r\n\r\n\r\n        /**\r\n         * @enum {number}\r\n         */\r\n        proto.stream.SDKHotelCmdID = {\r\n            INVALIDSDKCMD: 0,\r\n            CHECKINCMDID: 1401,\r\n            CHECKINACKCMDID: 1402,\r\n            HEARTBEATCMDID: 1403,\r\n            HEARTBEATACKCMDID: 1404,\r\n            BROADCASTCMDID: 1405,\r\n            BROADCASTACKCMDID: 1406,\r\n            NOTIFYCMDID: 1408,\r\n            CHECKINNOTIFYCMDID: 1410,\r\n            SUBSCRIBECMDID: 1411,\r\n            SUBSCRIBEACKCMDID: 1412,\r\n            PUBLISHCMDID: 1413,\r\n            PUBLISHACKCMDID: 1414,\r\n            PUBLISHNOTIFYCMDID: 1416\r\n        };\r\n\r\n        goog.object.extend(exports, proto.stream);\r\n\r\n    }, {\"google-protobuf\": 1}]\r\n}, {}, [3]);\r\n/* ================ matchvsdefine.js ================= */\r\nfunction MsCreateRoomInfo(roomName, maxPlayer, mode, canWatch, visibility, roomProperty) {\r\n    this.roomName     =roomName ;\r\n    this.maxPlayer    =maxPlayer ;\r\n    this.mode         =mode ;\r\n    this.canWatch     =canWatch ;\r\n    this.visibility   =visibility ;\r\n    this.roomProperty =roomProperty ;\r\n    this.toString = function () {\r\n        return\"roomName:\"+this.roomName\r\n        +\" maxPlayer:\"+this.maxPlayer\r\n        +\" mode:\"+this.mode\r\n        +\" canWatch:\"+this.canWatch\r\n        +\" visibility:\"+this.visibility\r\n        +\" roomProperty:\"+this.roomProperty;\r\n\r\n    };\r\n    MatchvsLog.logI(this+\" MsCreateRoomInfo:\"+JSON.stringify(this));\r\n}\r\nfunction MsEnum() {}\r\n/**\r\n *      joinSpecialRoom = 1;\t\t//扩展接口,param(roomID, userProfile)\r\n *      joinRoomWithProperty = 2;\t//扩展接口,param(roomProperty, userProfil\r\n *      joinRandomRoom = 3;\t\t\t//基本接口,param(maxPlayer, userProfile)\r\n * @type {{NoJoin: number, joinSpecialRoom: number, joinRoomWithProperty: number, joinRandomRoom: number}}\r\n */\r\nMsEnum.JoinRoomType = {NoJoin:0, joinSpecialRoom:1, joinRoomWithProperty:2,joinRandomRoom:3,reconnect:4};\r\n\r\n\r\nfunction  MsRoomJoin(joinType, userID, roomID, gameID, maxPlayer, mode, canWatch,userProfile,tags)\r\n{\r\n    this.joinType    =joinType;\r\n    this.userID      =userID;\r\n    this.roomID      =roomID;\r\n    this.gameID      =gameID;\r\n    this.maxPlayer   =maxPlayer;\r\n    this.mode        =mode;\r\n    this.canWatch    =canWatch;\r\n    this.tags        =tags ;//k-v map as json object  ex:[{dd:'SB',AA:'dd',re1:123},{cc:'dd',lk:'1qw'}];\r\n    this.userProfile =userProfile;\r\n    MatchvsLog.logI(this+\" MsRoomJoin:\"+JSON.stringify(this));\r\n}\r\n\r\nfunction MsJoinOverRsp(status, cpProto) {\r\n    this.status = status;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsJoinOverRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param roomID    {string}\r\n * @param srcUserID {number}\r\n * @param cpProto   {string}\r\n * @constructor\r\n */\r\nfunction MsJoinOverNotifyInfo(roomID, srcUserID, cpProto) {\r\n    this.roomID = roomID;\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsJoinOverNotifyInfo:\"+JSON.stringify(this));\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param status\r\n * @param roomID\r\n * @param owner\r\n * @constructor\r\n */\r\nfunction MsCreateRoomRsp(status, roomID, owner) {\r\n    this.status = status;\r\n    this.roomID = roomID;\r\n    this.owner = owner;\r\n    MatchvsLog.logI(this+\" MsCreateRoomRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param gameID {number}\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param bookID {string}\r\n * @param book_key {string}\r\n * @param hotelInfo {string}\r\n * @constructor\r\n */\r\nfunction MsCheckIn(gameID,roomID,userID,bookID,book_key,hotelInfo) {\r\n    this.gameID = gameID;\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.bookID = bookID;\r\n    this.book_key = book_key;\r\n    this.hotelInfo = hotelInfo;\r\n}\r\n\r\n/**\r\n *\r\n * @param maxplayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param tags {object}\r\n * @constructor\r\n */\r\nfunction MsMatchInfo(maxplayer, mode, canWatch, tags) {\r\n    this.maxPlayer = maxplayer;\r\n    this.mode = mode ;\r\n    this.canWatch = canWatch;\r\n    this.tags = {};\r\n    this.tags = tags;\r\n    MatchvsLog.logI(this+\" MsMatchInfo:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *  房间信息\r\n * @param roomID\r\n * @param roomProperty\r\n * @param ownerID\r\n * @constructor\r\n */\r\nfunction MsRoomInfo(roomID, roomProperty, ownerID) {\r\n    this.roomID = roomID;       // string\r\n    this.roomProperty = roomProperty; //\r\n    this.ownerId = ownerID;\r\n    MatchvsLog.logI(this+\" MsRoomInfo:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n * 房间用户信息\r\n * @param userID\r\n * @param userProfile\r\n * @constructor\r\n */\r\nfunction MsRoomUserInfo(userID, userProfile) {\r\n    this.userId = userID;\r\n    this.userProfile = userProfile;\r\n    MatchvsLog.logI(this+\" MsRoomUserInfo:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n * 离开房间返回信息\r\n * @param status\r\n * @param roomId\r\n * @param userId\r\n * @param cpProto\r\n * @constructor\r\n */\r\nfunction MsLeaveRoomRsp(status, roomId, userId, cpProto) {\r\n    this.status = status;\r\n    this.roomID = roomId;\r\n    this.userId = userId;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsLeaveRoomRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param userID {number}\r\n * @param roomID {string}\r\n * @param owner  {number}\r\n * @param cpProto{string}\r\n * @constructor\r\n */\r\nfunction MsLeaveRoomNotify(roomID,userID, owner, cpProto) {\r\n    this.userId = userID;\r\n    this.roomID = roomID;\r\n    this.owner = owner;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsLeaveRoomNotify:\"+JSON.stringify(this));\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param status\r\n * @param groups\r\n * @constructor\r\n */\r\nfunction MsSubscribeEventGroupRsp(status, groups) {\r\n    this.status = status;  //number\r\n    this.groups = groups; // array<string>\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction MsSendEventGroupNotify(srcUid, groups, cpProto) {\r\n    this.srcUid = srcUid;       // number\r\n    this.groups = groups;       // array<string>\r\n    this.cpProto = cpProto;     // string\r\n}\r\n\r\n/**\r\n *\r\n * @param status\r\n * @param userID\r\n * @param token\r\n * @param name\r\n * @param avatar\r\n * @constructor\r\n */\r\nfunction MsRegistRsp(status, userID, token, name, avatar) {\r\n    this.status = status;\r\n    this.id = userID;\r\n    this.token = token;\r\n    this.name = name;\r\n    this.avatar = avatar;\r\n    MatchvsLog.logI(\"MsRegistRsp\"+\":\"+JSON.stringify(this));\r\n}\r\n\r\nfunction MsLoginRsp(status, roomID) {\r\n    this.status = status;//int\r\n    this.roomID = roomID;//unsigned long long\r\n    MatchvsLog.logI(\"MsLoginRsp:\"\r\n        +\":\"+JSON.stringify(this));\r\n}\r\n\r\nfunction MsPublicMemberArgs(channle, platform,userID, token, gameID, gameVersion, appkey, secretKey, deviceID, gatewayID) {\r\n    this.userID = userID;\r\n    this.token = token;\r\n    this.gameID = gameID;\r\n    this.gameVersion = gameVersion;\r\n    this.appKey = appkey;\r\n    this.secretKey = secretKey;\r\n    this.deviceID = deviceID;\r\n    this.gatewayID = gatewayID;\r\n    this.channel = channle;\r\n    this.platform = platform;\r\n    MatchvsLog.logI(this+\":\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param userID {number}\r\n * @param checkins {array<number>}\r\n * @param players {array<number>}\r\n * @param maxPlayers {number}\r\n * @constructor\r\n */\r\nfunction MsCheckInNotify(userID, checkins, players, maxPlayers) {\r\n    this.userID = userID;\r\n    this.checkins = checkins;\r\n    this.players = players;\r\n    this.maxPlayers = maxPlayers;\r\n    MatchvsLog.logI(this+\":\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param srcUserID {number}\r\n * @param cpProto {string}\r\n * @constructor\r\n */\r\nfunction MsSendEventNotify(srcUserID, cpProto) {\r\n    this.srcUserId = srcUserID;\r\n    this.cpProto = cpProto;\r\n}\r\n\r\n/**\r\n *\r\n * @param srcUserID {number}\r\n * @param cpProto {string}\r\n * @constructor\r\n */\r\nfunction MsGameServerNotifyInfo(srcUserID, cpProto) {\r\n    this.srcUserId = srcUserID;\r\n    this.cpProto = cpProto;\r\n}\r\n\r\n/**\r\n *\r\n * @param status {number}\r\n * @param sequence {number}\r\n * @constructor\r\n */\r\nfunction MsSendEventRsp(status, sequence) {\r\n    this.status = status;\r\n    this.sequence = sequence;\r\n}\r\n\r\n/**\r\n * 房间信息列表\r\n * @param roomID {string}\r\n * @param roomName {string}\r\n * @param maxplayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsRoomInfoEx(roomID, roomName, maxplayer, mode, canWatch, roomProperty) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxplayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(\" MsRoomInfoEx\"+\":\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n * 获取房间信息列表返回\r\n * @param status {number}\r\n * @param roomInfos {Array<MsRoomInfoEx>}\r\n * @constructor\r\n */\r\nfunction MsRoomListRsp(status, roomInfos) {\r\n    this.status = status;\r\n    this.roomInfos = roomInfos;\r\n    MatchvsLog.logI(this+\" MsRoomListRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param userId {number}\r\n * @param srcUserId {number}\r\n * @param data {string}\r\n * @param owner {number}\r\n * @constructor\r\n */\r\nfunction MsKickPlayerNotify(userId, srcUserId, data,owner) {\r\n    this.userId = userId;\r\n    this.srcUserId = srcUserId;\r\n    this.cpProto = data;\r\n    this.owner = owner;\r\n    MatchvsLog.logI(this+\" MsKickPlayerNotify:\"+JSON.stringify(this));\r\n}\r\n\r\nfunction MsKickPlayerRsp(status, owner, userID) {\r\n    this.status = status;\r\n    this.owner = owner;\r\n    this.userID = userID;\r\n    MatchvsLog.logI(this+\" MsKickPlayerRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param mStatus {Number} 200 is ok\r\n * @constructor\r\n */\r\nfunction MsSetChannelFrameSyncRsp(mStatus) {\r\n    this.mStatus = mStatus;\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @param mStatus {Number} 200 is ok\r\n * @constructor\r\n */\r\nfunction MsSendFrameEventRsp(mStatus) {\r\n    this.mStatus = mStatus;\r\n}\r\n\r\n\r\n/**\r\n * message RoomFilter\r\n *{\r\n *    uint32 maxPlayer = 1;\r\n *    int32 mode = 2;\r\n *    int32 canWatch = 3;\r\n *    bytes roomProperty = 4;\r\n *}\r\n * @param maxPlayer {int}\r\n * @param mode {int}\r\n * @param canWatch {int}\r\n * @param roomProperty {String}\r\n * @constructor\r\n */\r\nfunction MsRoomFilter(maxPlayer,mode,canWatch,roomProperty) {\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this+\" MsRoomFilter:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param maxPlayer {number}\r\n * @param mode {number}\r\n * @param canWatch {number}\r\n * @param roomProperty {string}\r\n * @param full {number} 0-全部 1-满 2-未满\r\n * @param state {number} 0-StateNil 1-StateOpen 2-StateClosed\r\n * @param sort  {number} 0-RoomSortNil 1-RoomSortCreateTime 2-SortPlayerNum 3-SortState\r\n * @param order {number} 0-SortAsc 1-SortDesc\r\n * @param pageNo {number}\r\n * @param pageSize {number}\r\n * @constructor\r\n */\r\nfunction MsRoomFilterEx(maxPlayer, mode, canWatch, roomProperty, full, state, sort, order, pageNo, pageSize) {\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.full = full;\r\n    this.state = state;\r\n    this.sort = sort;\r\n    this.order = order;\r\n    this.pageNo = pageNo;\r\n    this.pageSize = pageSize ? pageSize : 10;\r\n    MatchvsLog.logI(this+\" MsRoomFilterEx:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param status\r\n * @param state\r\n * @param maxPlayer\r\n * @param mode\r\n * @param canWatch\r\n * @param roomProperty\r\n * @param owner\r\n * @param createFlag\r\n * @param userInfos {Array<MsRoomUserInfo>}\r\n * @constructor\r\n */\r\nfunction MsGetRoomDetailRsp(status, state, maxPlayer, mode, canWatch, roomProperty, owner, createFlag, userInfos) {\r\n    this.status = status;\r\n    this.state = state;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n    this.createFlag = createFlag;\r\n    this.userInfos = [];\r\n    this.userInfos = userInfos;\r\n    MatchvsLog.logI(this+\" MsGetRoomDetailRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param roomID        {string}\r\n * @param roomName      {string}\r\n * @param maxPlayer     {number}\r\n * @param gamePlayer    {number}\r\n * @param watchPlaer    {number}\r\n * @param mode          {number}\r\n * @param canWatch      {number}\r\n * @param roomProperty  {string}\r\n * @param owner         {number}\r\n * @param state         {number}\r\n * @param createTime    {string}\r\n * @constructor\r\n */\r\nfunction MsRoomAttribute(roomID, roomName, maxPlayer, gamePlayer, watchPlaer, mode, canWatch, roomProperty, owner, state, createTime) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxPlayer;\r\n    this.gamePlayer = gamePlayer;\r\n    this.watchPlayer = watchPlaer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n    this.state = state;\r\n    this.createTime = createTime;\r\n    MatchvsLog.logI(this+\" MsRoomAttribute:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param status {number}\r\n * @param total {number}\r\n * @param roomAttrs {Array<MsRoomAttribute>}\r\n * @constructor\r\n */\r\nfunction MsGetRoomListExRsp(status, total, roomAttrs) {\r\n    this.status = status;\r\n    this.total = total;\r\n    this.roomAttrs = [];\r\n    this.roomAttrs = roomAttrs;\r\n    MatchvsLog.logI(this+\" MsGetRoomListExRsp:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param srcUserID {Number}\r\n * @param cpProto {String}\r\n * @param timestamp {String} ms\r\n * @constructor\r\n */\r\nfunction MsFrameItem (srcUserID,cpProto,timestamp) {\r\n    this.srcUserID = srcUserID;\r\n    this.cpProto =cpProto;\r\n    this.timestamp =timestamp;\r\n}\r\n\r\n/**\r\n *\r\n * @param frameIndex {Number}\r\n * @param frameItems {MsFrameItem[]}\r\n * @param frameWaitCount {Number}\r\n * @constructor\r\n */\r\nfunction MsFrameData (frameIndex,frameItems,frameWaitCount) {\r\n    this.frameIndex = frameIndex;\r\n    this.frameItems =frameItems;\r\n    this.frameWaitCount =frameWaitCount;\r\n}\r\n\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param state {number} 1-网络异常，正在重连  2-重连成功 3-重连失败，退出房间\r\n * @param owner {number}\r\n * @constructor {number}\r\n */\r\nfunction MsNetworkStateNotify(roomID, userID, state, owner) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.state = state;\r\n    this.owner = owner;\r\n}\r\n\r\n/**\r\n * 设置房间属性返回值\r\n * @param status {number}\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsSetRoomPropertyRspInfo(status, roomID, userID, roomProperty) {\r\n    this.status = status;\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this+\" MsSetRoomPropertyRspInfo:\"+JSON.stringify(this));\r\n}\r\n\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param userID {number}\r\n * @param roomProperty {string}\r\n * @constructor\r\n */\r\nfunction MsRoomPropertyNotifyInfo( roomID, userID, roomProperty) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.roomProperty = roomProperty;\r\n    MatchvsLog.logI(this+\" MsRoomPropertyNotifyInfo:\"+JSON.stringify(this));\r\n}\r\n\r\nfunction MsHeartBeatResponse(gameID,gsExist) {\r\n    this.gameID = gameID;\r\n    this.gsExist = gsExist;\r\n}\r\n\r\nfunction MsGatewaySpeedResponse(Status, Seq) {\r\n    this.status = Status;\r\n    this.seq = Seq;\r\n}\r\nfunction MsReopenRoomResponse(Status, cpProto) {\r\n    this.status = Status;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsReopenRoomResponse:\"+JSON.stringify(this));\r\n}\r\nfunction MsReopenRoomNotify(roomID, userID, cpProto) {\r\n    this.roomID = roomID;\r\n    this.userID = userID;\r\n    this.cpProto = cpProto;\r\n    MatchvsLog.logI(this+\" MsReopenRoomNotify:\"+JSON.stringify(this));\r\n}/* ================ matchvsnetwork.js ================= */\r\n//adapter weixin\r\n\r\nfunction MatchvsNetWorkCallBack() {\r\n    /**\r\n     *\r\n     * @param buf DataView\r\n     */\r\n    this.onMsg = function (buf) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param errCode int\r\n     * @param errMsg String\r\n     */\r\n    this.onErr = function (errCode, errMsg) {\r\n\r\n    };\r\n}\r\n\r\nvar MatchvsNetWork;\r\nvar MatchvsHttp;\r\ntry {\r\n    if (typeof (wx) !== \"undefined\") {\r\n        MatchvsNetWork = function MatchvsNetWork(host, callback) {\r\n            /**\r\n             * WebSocket 任务，可通过 wx.connectSocket() 接口创建返回。\r\n             * @type {socket}\r\n             */\r\n            var socket = null;\r\n            var socketOpen = false;\r\n            var socketMsgQueue = [];\r\n            var mCallBack = callback;\r\n            var mHost = host;\r\n            var that = this;\r\n            this.close = function () {\r\n                if (socket) {\r\n                    socket.close();\r\n                }\r\n            };\r\n            /**\r\n             * msg {DataView}\r\n             */\r\n            this.send = function (msg) {\r\n\r\n                if (socketOpen) {\r\n                    socket.send({\r\n                        data: msg.buffer\r\n                    });\r\n                } else {\r\n\r\n                    //只缓存一百\r\n                    if (socketMsgQueue.length < 100) {\r\n                        socketMsgQueue.push(msg);\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n            function connect() {\r\n                socket = wx.connectSocket({\r\n                    url: host,\r\n                    header: {\r\n                        \"engine\": \"WeiXinGame\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            connect();\r\n            socket.onOpen(function (res) {\r\n                MatchvsLog.logI(\"[wx.WebSocket][connect]:\" + res);\r\n                socketOpen = true;\r\n                while (socketMsgQueue.length > 0) {\r\n                    that.send(socketMsgQueue.pop());\r\n                }\r\n\r\n                mCallBack.onConnect && mCallBack.onConnect(mHost);\r\n            });\r\n\r\n            socket.onClose(function (e) {\r\n                socketOpen = false;\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost,e);\r\n                MatchvsLog.logI(\"[wx.WebSocket] [onClose] case:\"+JSON.stringify(e));\r\n            });\r\n\r\n            socket.onMessage(function (res) {\r\n                var dataView = new DataView(res.data);\r\n                mCallBack.onMsg(dataView);\r\n            });\r\n            socket.onError(function(event) {\r\n                mCallBack.onDisConnect && mCallBack.onDisConnect(mHost,event);\r\n                MatchvsLog.logI(\"[wx.WebSocket] [onError] case:\" + JSON.stringify(event));\r\n            }) ;\r\n        };\r\n        MatchvsHttp = function MatchvsHttp(callback) {\r\n            this.mCallback = callback;\r\n\r\n\r\n            function send(url, callback, isPost, params) {\r\n                wx.request({\r\n                    url: url,\r\n                    data: {\r\n                        x: \"\",\r\n                        y: \"\"\r\n                    },\r\n                    header: {\r\n                        \"content-type\": \"application/json\"\r\n                    },\r\n                    success: function (res) {\r\n                        var rsp = JSON.stringify(res.data);\r\n                        MatchvsLog.logI(\"http success:\" + rsp);\r\n                        callback.onMsg(rsp);\r\n                    },\r\n                    fail: function (res) {\r\n                        MatchvsLog.logI(\"http fail:\" + res.errMsg);\r\n                        callback.onErr(0, res.errMsg);\r\n                    }\r\n                });\r\n            }\r\n\r\n            /**\r\n             * HTTP GET\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do?key=fa\"\r\n             */\r\n            this.get = function (url) {\r\n                send(url, this.mCallback, false, null);\r\n            };\r\n            /**\r\n             * HTTP POST\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do\"\r\n             * @param params {String} ex:\"lorem=ipsum&name=binny\";\r\n             */\r\n            this.post = function (url, params) {\r\n                send(url, this.mCallback, true, params);\r\n            };\r\n        };\r\n    }\r\n    else {\r\n        MatchvsNetWork = function MatchvsNetWork(host, callback) {\r\n            var socket;\r\n            var mCallBack = callback;\r\n            var mHost = host;\r\n            var bufQueue = [];\r\n            this.send = function (message) {\r\n\r\n                if (!window.WebSocket) {\r\n                    return;\r\n                }\r\n                if (isIE()) {\r\n                    var uint8A = new Uint8Array(message.buffer.byteLength);\r\n                    for (var i = 0; i < uint8A.length; i++) {\r\n                        uint8A[i] = (message.getUint8(i));\r\n                    }\r\n                    message = uint8A;\r\n                }\r\n                if (socket.readyState === WebSocket.OPEN) {\r\n                    //log(message);\r\n                    socket.send(message);\r\n                } else {\r\n                    bufQueue.push(message);\r\n                }\r\n            };\r\n            this.close = function () {\r\n                if (socket) {\r\n                    socket.close();\r\n                }\r\n            };\r\n            if (!window.WebSocket) {\r\n                window.WebSocket = window.MozWebSocket;\r\n            }\r\n\r\n            if (window.WebSocket) {\r\n                socket = new WebSocket(host);\r\n                socket.hashcode = new Date().getMilliseconds();\r\n                MatchvsLog.logI(\"try to create a socket:\"+mHost +\" socket is \"+socket.hashcode );\r\n                socket.onmessage = function (event) {\r\n                    var reader = new FileReader();\r\n                    reader.readAsArrayBuffer(event.data);\r\n                    //  当读取操作成功完成时调用.\r\n                    reader.onload = function (evt) {\r\n                        if (evt.target.readyState === FileReader.DONE) {\r\n                            var dataView = new DataView(reader.result);\r\n                            mCallBack.onMsg(dataView);\r\n                        } else {\r\n                            mCallBack.onErr(1606, \"[err]parse fail\");\r\n                        }\r\n\r\n                    };\r\n\r\n                };\r\n                socket.onopen = function (event) {\r\n                    MatchvsLog.logI(\"Create the socket is success :\"+mHost+\" socket is \"+socket.hashcode );\r\n                    while (bufQueue.length > 0) {\r\n                        socket.send(bufQueue.pop());\r\n                    }\r\n                    mCallBack.onConnect && mCallBack.onConnect(mHost);\r\n\r\n                };\r\n                socket.onclose = function (e) {\r\n                    mCallBack.onDisConnect && mCallBack.onDisConnect(mHost,e);\r\n                    MatchvsLog.logI(\"socket on closed ,code:\"+e.code+\"(1000:NORMAL,1005:CLOSE_NO_STATUS,1006:RESET,1009:CLOSE_TOO_LARGE) msg:\"+e.reason);\r\n                };\r\n                socket.onerror = function (event) {\r\n                    MatchvsLog.logI(\"socket on error ,event:\"+JSON.stringify(event));\r\n                    mCallBack.onDisConnect && mCallBack.onDisConnect(mHost,event);\r\n                };\r\n            } else {\r\n                alert(\"Not Support the WebSocket！\");\r\n            }\r\n\r\n        };\r\n        MatchvsHttp = function MatchvsHttp(callback) {\r\n            this.mCallback = callback;\r\n\r\n            function send(url, callback, isPost, params) {\r\n                var http = new XMLHttpRequest();\r\n                http.open(isPost ? \"POST\" : \"GET\", url, true);\r\n                http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                http.onreadystatechange = function () {//Call a function when the state changes.\r\n                    if (http.readyState === 4) {\r\n                        if (http.status === 200) {\r\n                            callback.onMsg(http.responseText);\r\n                            MatchvsLog.logI(\"[HTTP:](\" + url + \")+\" + http.responseText);\r\n                        } else {\r\n                            callback.onErr(http.status, http.statusText);\r\n                        }\r\n                    }\r\n                };\r\n                if (isPost) {\r\n                    http.send(params);\r\n                } else {\r\n                    http.send(null);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * HTTP GET\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do?key=fa\"\r\n             */\r\n            this.get = function (url) {\r\n                send(url, this.mCallback, false, null);\r\n            };\r\n            /**\r\n             * HTTP POST\r\n             * @param url {String} ex:\"http://testpay.matchvs.com/wc3/submitOrder.do\"\r\n             * @param params {String} ex:\"lorem=ipsum&name=binny\";\r\n             */\r\n            this.post = function (url, params) {\r\n                send(url, this.mCallback, true, params);\r\n            };\r\n        };\r\n    }\r\n} catch (e) {\r\n    console.warn(\"network adapter warning:\"+e.message);\r\n}\r\n\r\n\r\n\r\n/* ================ matchvsprotocol.js ================= */\r\n//================== CMD =======================\r\nvar MATCHVS_USER_GATEWAY_SPEED_REQ = 1001;\r\nvar MATCHVS_USER_GATEWAY_SPEED_RSP = 1002;\r\nvar MATCHVS_USER_LOGIN_REQ = 1101;\r\nvar MATCHVS_USER_LOGIN_RSP = 1102;\r\nvar MATCHVS_USER_HEARTBEAT_REQ = 1103;\r\nvar MATCHVS_USER_HEARTBEAT_RSP = 1103;\r\nvar MATCHVS_NOTICE_USER_RELOGIN = 1104;\r\nvar MATCHVS_USER_LOGOUT_REQ = 1105;\r\nvar MATCHVS_USER_LOGOUT_RSP = 1106;\r\nvar MATCHVS_NETWORK_STATE_NOTIFY = 1122;\r\nvar MATCHVS_ROOM_CREATE_REQ = 1203;\r\nvar MATCHVS_ROOM_CREATE_RSP = 1204;\r\nvar MATCHVS_ROOM_JOIN_REQ = 1201;\r\nvar MATCHVS_ROOM_JOIN_RSP = 1202;\r\nvar MATCHVS_ROOM_JOIN_OVER_REQ = 1213;\r\nvar MATCHVS_ROOM_JOIN_OVER_RSP = 1214;\r\nvar MATCHVS_ROOM_JOIN_OVER_NOTIFY = 1306;\r\n\r\nvar MATCHVS_ROOM_LEAVE_REQ = 1205;\r\nvar MATCHVS_ROOM_LEAVE_RSP = 1206;\r\nvar MATCHVS_ROOM_NOTICE_USER_JOIN = 1301;\r\nvar MATCHVS_ROOM_NOTICE_USER_LEAVE = 1302;\r\n\r\n\r\n\r\nvar MATCHVS_ROOM_CHECK_IN_REQ = 1401;\r\nvar MATCHVS_ROOM_CHECK_IN_RSP = 1402;\r\nvar MATCHVS_HEARTBEAT_HOTEL_REQ = 1403;\r\nvar MATCHVS_HEARTBEAT_HOTEL_RSP = 1404;\r\nvar MATCHVS_BROADCAST_HOTEL_REQ = 1405;\r\nvar MATCHVS_BROADCAST_HOTEL_RSP = 1406;\r\nvar MATCHVS_HOTEL_NOTIFY = 1408;\r\nvar MATCHVS_ROOM_CHECKIN_NOTIFY = 1410;\r\n\r\n\r\nvar CMD_GET_ROOM_LIST_REQ = 1207;\r\nvar CMD_GET_ROOM_LIST_RSP = 1208;\r\n\r\nvar CMD_GET_ROOM_DETAIL_REQ = 1209;\r\nvar CMD_GET_ROOM_DETAIL_RSP = 1210;\r\n\r\nvar CMD_GET_ROOM_LIST_EX_REQ = 1215;\r\nvar CMD_GET_ROOM_LIST_EX_RSP = 1216;\r\n\r\nvar CMD_SET_ROOM_PROPERTY_REQ = 1219;\r\nvar CMD_SET_ROOM_PROPERTY_RSP = 1220;\r\nvar CMD_SET_ROOM_PROPERTY_NOTIFY= 1307;\r\n\r\n\r\nvar CMD_DISCONNECT_REQ = 1107;\r\nvar CMD_DISCONNECT_RSP = 1108;\r\nvar CMD_KICK_PLAYER_REQ = 1303;\r\nvar CMD_KICK_PLAYER_RSP = 1304;\r\nvar CMD_KICK_PLAYER_NOTIFY = 1305;\r\nvar CMD_SUBSCRIBE_CMDID = 1411;\r\nvar CMD_SUBSCRIBE_ACK_CMDID = 1412;\r\nvar CMD_PUBLISH_CMDID = 1413;\r\nvar CMD_PUBLISH_ACKCMDID = 1414;\r\nvar CMD_PUBLISH_NOTIFYCMDID = 1416;\r\n\r\nvar CMD_SET_USE_TIMESTAMP_CMDID    = 1417;\r\nvar CMD_SET_USE_TIMESTAMPACK_CMDID = 1418;\r\nvar CMD_SET_FRAME_SYNCRATE_CMDID    = 1419;\r\nvar CMD_SET_FRAME_SYNCRATEACK_CMDID = 1420;\r\nvar CMD_SET_FRAME_SYNCRATENOTIFY_CMDID = 1422;\r\nvar CMD_FRAME_BROADCAST_CMDID    = 1423;\r\nvar CMD_FRAME_BROADCASTACK_CMDID = 1424;\r\nvar CMD_FRAME_DATANOTIFY_CMDID = 1426;\r\nvar CMD_FRAME_SYNCNOTIFY_CMDID = 1428;\r\n\r\nvar CMD_ROOM_JOIN_OPEN_REQ = 1221;\r\nvar CMD_ROOM_JOIN_OPEN_RSP = 1222;\r\nvar CMD_ROOM_JOIN_OPEN_NOT = 1308;\r\n\r\n\r\n\r\n//================== CMD =======================\r\nvar FIXED_HEAD_SIZE = 16;\r\nvar VERSION = 2;\r\n\r\n\r\nfunction Packet() {\r\n    var header;//{MatchvsHeader}\r\n    var payload;//*\r\n    var buf;//{DataView}\r\n}\r\n\r\nfunction MatchvsHeader() {\r\n    this.size = 0;\r\n    this.seq = 0;\r\n    this.cmd = 0;\r\n    this.version = 0;\r\n    this.userID = 0;\r\n    this.toString = function () {\r\n        return \" this.size   \" + this.size\r\n            + \" this.seq    \" + this.seq\r\n            + \" this.cmd    \" + this.cmd\r\n            + \" this.version\" + this.version\r\n            + \" this.userID \" + this.userID;\r\n    };\r\n}\r\n\r\n\r\nfunction MatchvsProtoMap(){\r\n    return MatchvsProtoMap.prototype;\r\n}\r\nvar MsProtoMapDesc = new MatchvsProtoMap();\r\nMsProtoMapDesc[MATCHVS_USER_LOGIN_RSP              ] = proto.stream.LoginRsp;\r\nMsProtoMapDesc[MATCHVS_USER_LOGIN_RSP              ] = proto.stream.LoginRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_RSP               ] = proto.stream.JoinRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_CREATE_RSP             ] = proto.stream.CreateRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_CHECK_IN_RSP           ] = proto.stream.CheckInAck;\r\nMsProtoMapDesc[MATCHVS_ROOM_CHECKIN_NOTIFY         ] = proto.stream.CheckInNotify;\r\nMsProtoMapDesc[MATCHVS_ROOM_LEAVE_RSP              ] = proto.stream.LeaveRoomRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_OVER_RSP          ] = proto.stream.JoinOverRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_NOTICE_USER_JOIN       ] = proto.stream.NoticeJoin;\r\nMsProtoMapDesc[MATCHVS_ROOM_NOTICE_USER_LEAVE      ] = proto.stream.NoticeLeave;\r\nMsProtoMapDesc[MATCHVS_HEARTBEAT_HOTEL_RSP         ] = proto.stream.HeartbeatAck;\r\nMsProtoMapDesc[MATCHVS_BROADCAST_HOTEL_RSP         ] = proto.stream.BroadcastAck;\r\nMsProtoMapDesc[MATCHVS_HOTEL_NOTIFY                ] = proto.stream.Notify;\r\nMsProtoMapDesc[CMD_SUBSCRIBE_ACK_CMDID             ] = proto.stream.SubscribeAck;\r\nMsProtoMapDesc[CMD_PUBLISH_ACKCMDID                ] = proto.stream.PublishAck;\r\nMsProtoMapDesc[CMD_PUBLISH_NOTIFYCMDID             ] = proto.stream.PublishNotify;\r\n//MsProtoMapDesc[MATCHVS_USER_GATEWAY_SPEED_RSP      ] = dataView;\r\nMsProtoMapDesc[MATCHVS_USER_HEARTBEAT_RSP          ] = proto.stream.HeartbeatRsp;\r\nMsProtoMapDesc[MATCHVS_USER_LOGOUT_RSP             ] = proto.stream.LogoutRsp;\r\nMsProtoMapDesc[CMD_GET_ROOM_LIST_RSP               ] = proto.stream.GetRoomListRsp;\r\nMsProtoMapDesc[CMD_DISCONNECT_RSP                  ] = proto.stream.DisconnectRsp;\r\nMsProtoMapDesc[CMD_KICK_PLAYER_RSP                 ] = proto.stream.KickPlayerRsp;\r\nMsProtoMapDesc[CMD_KICK_PLAYER_NOTIFY              ] = proto.stream.KickPlayerNotify;\r\nMsProtoMapDesc[CMD_SET_FRAME_SYNCRATEACK_CMDID     ] = proto.stream.SetFrameSyncRateAck;\r\nMsProtoMapDesc[CMD_SET_FRAME_SYNCRATENOTIFY_CMDID  ] = proto.stream.SetFrameSyncRateNotify;\r\nMsProtoMapDesc[CMD_FRAME_BROADCASTACK_CMDID        ] = proto.stream.FrameBroadcastAck;\r\nMsProtoMapDesc[CMD_FRAME_DATANOTIFY_CMDID          ] = proto.stream.FrameDataNotify;\r\nMsProtoMapDesc[CMD_FRAME_SYNCNOTIFY_CMDID          ] = proto.stream.FrameSyncNotify;\r\nMsProtoMapDesc[MATCHVS_NETWORK_STATE_NOTIFY        ] = proto.stream.NetworkStateNotify;\r\nMsProtoMapDesc[CMD_GET_ROOM_LIST_EX_RSP            ] = proto.stream.GetRoomListExRsp;\r\nMsProtoMapDesc[CMD_GET_ROOM_DETAIL_RSP             ] = proto.stream.GetRoomDetailRsp;\r\nMsProtoMapDesc[MATCHVS_ROOM_JOIN_OVER_NOTIFY       ] = proto.stream.JoinOverNotify;\r\nMsProtoMapDesc[CMD_SET_ROOM_PROPERTY_RSP           ] = proto.stream.SetRoomPropertyRsp;\r\nMsProtoMapDesc[CMD_SET_ROOM_PROPERTY_NOTIFY        ] = proto.stream.NoticeRoomProperty;\r\nMsProtoMapDesc[CMD_ROOM_JOIN_OPEN_RSP              ] = proto.stream.JoinOpenRsp;\r\nMsProtoMapDesc[CMD_ROOM_JOIN_OPEN_NOT              ] = proto.stream.JoinOpenNotify;\r\n\r\n\r\n/**\r\n * Encoder && Decoder\r\n * @constructor\r\n */\r\nfunction MatchvsProtocol() {\r\n\r\n    this.seq = 1;\r\n    var mUserID = 0;\r\n    this.msProtoMap = new MatchvsProtoMap();\r\n\r\n    /**\r\n     *\r\n     * @param dataArray uint array\r\n     * @param cmd int\r\n     * @returns {DataView}\r\n     */\r\n    this.fillHeader = function (dataArray, cmd) {\r\n        var buffer = new ArrayBuffer(FIXED_HEAD_SIZE + dataArray.length);\r\n        var dataView = new DataView(buffer);\r\n        dataView.setInt32(0, buffer.byteLength, true);//size; +4\r\n        dataView.setInt32(4, this.seq++, true);//seq +4\r\n        dataView.setInt16(8, cmd, true);//cmd; +2\r\n        dataView.setInt16(10, VERSION, true);//version +2\r\n        dataView.setInt32(12, Number(mUserID), true);//userID +4\r\n\r\n        var length = dataArray.length;\r\n        //append unsigned int Array to end\r\n        for (var i = 0; i < length; i++) {\r\n            dataView.setUint8(i + FIXED_HEAD_SIZE, dataArray[i]);\r\n        }\r\n        return dataView;\r\n    };\r\n    /**\r\n     *\r\n     * @param msg {DataView}\r\n     * @returns {MatchvsHeader}\r\n     */\r\n    this.parseHeader = function (msg) {\r\n        var dataView = msg;\r\n        var head = new MatchvsHeader();\r\n        head.size = dataView.getInt32(0, true);//size; +4\r\n        head.seq = dataView.getInt32(4, true);//seq +4\r\n        head.cmd = dataView.getInt16(8, true);//cmd; +2\r\n        head.version = dataView.getInt16(10, true);//version +2\r\n        head.userID = dataView.getInt32(12, true);//userID +4\r\n        return head;\r\n    };\r\n    /**\r\n     *\r\n     * @param msg {DataView}\r\n     * @returns {*}\r\n     */\r\n    this.handleMsg = function (msg) {\r\n\r\n        var dataView = msg;\r\n        var header = this.parseHeader(msg);\r\n        var ext = new Uint8Array(header.size - FIXED_HEAD_SIZE);\r\n        for (var i = 0; i < ext.length; i++) {\r\n            ext[i] = msg.getUint8(FIXED_HEAD_SIZE + i);\r\n        }\r\n        // var protoMap = this.msProtoMap.getValue(header.cmd);\r\n        var protoMap = MsProtoMapDesc[header.cmd];\r\n        var packet = new Packet();\r\n        packet.header = header;\r\n        packet.buf = dataView;\r\n        if (protoMap){\r\n            packet.payload = protoMap.deserializeBinary && protoMap.deserializeBinary(msg.buffer.slice(FIXED_HEAD_SIZE,msg.buffer.byteLength));\r\n        }else{\r\n            MatchvsLog.logI(\"[WARN]unknown msg,Head:\" + header);\r\n        }\r\n        return packet;\r\n    };\r\n    this.init = function () {\r\n\r\n    };\r\n\r\n    /**\r\n     * 登录\r\n     * @userID {uint32} value 用户ID\r\n     * @userToken {uint64} value 用户的token值\r\n     * @gameID {uint32} value 游戏ID\r\n     * @gameVersion {uint16} value  游戏版本\r\n     * @app_key { !Array.<string> } app_key 游戏key,通过官网注册获得\r\n     * @app_secret { !Array.<string>  app_secret 游戏secret，通过官网注册获得\r\n     * @deviceID { !Array.<string> } deviceID 设备ID\r\n     * @gateway_id gateway_id\r\n     * @returns {DataView}\r\n     */\r\n    this.login = function (userID, userToken, gameID, gameVersion,\r\n        app_key, app_secret, deviceID, gateway_id) {\r\n        var toMd5 = format(\"%s&UserID=%s&GameID=%s&VersionSdk=%d&%s\",\r\n            app_key, userID, gameID, VERSION, app_secret);\r\n        mUserID = userID;\r\n        var md5 = hex_md5(toMd5);\r\n        MatchvsLog.logI(\"[Sign]\" + toMd5 + \"->\" + md5);\r\n        var message = new proto.stream.LoginReq();\r\n        message.setGameid(Number(gameID));\r\n        message.setAppkey(app_key);\r\n        message.setDeviceid(deviceID);\r\n        message.setSign(md5);\r\n        var dataArray =message.serializeBinary();\r\n        //append binary head and proto buffer;\r\n        MatchvsLog.logI(\"[REQ]login...userID:\" + userID);\r\n        return this.fillHeader(dataArray, MATCHVS_USER_LOGIN_REQ);\r\n    };\r\n    /**\r\n     * 用户网关速度暂时不使用\r\n     * @userID {uint32} value 用户ID\r\n     * @gameID {uint32} value 游戏ID\r\n     * @userToken {uint64} value 用户的token值\r\n     * @versionSDK {uint16} value sdk版本号\r\n     * @gameVersion {uint16} value  游戏版本\r\n     * @returns {DataView}\r\n     */\r\n    this.speed = function (userID, gameID, userToken, versionSDK, gameVersion) {\r\n\r\n        var buffer = new ArrayBuffer(48 + 1);\r\n        var dataView = new DataView(buffer);\r\n        var _user = Number(userID);\r\n        var _gameID = Number(gameID);\r\n        dataView.setUint32(0, _user, true);//userID\r\n        dataView.setUint32(4, _gameID, true);//gameID\r\n        for (var i = 0; i < 32; i++) {\r\n            dataView.setUint8(8 + i, userToken.charCodeAt(i));//token\r\n        }\r\n        dataView.setUint16(8 + 32, versionSDK, true);//version sdk\r\n        dataView.setUint16(8 + 32 + 2, gameVersion, true);//game version\r\n        dataView.setUint32(8 + 32 + 2 + 2, 1, true);//echo size\r\n        dataView.setUint8(8 + 32 + 2 + 2 + 4, 0x01);//echo\r\n\r\n        var array = new Uint8Array(dataView.byteLength);\r\n        for (var j = 0; j < dataView.byteLength; j++) {\r\n            array[j] = dataView.getUint8(j);\r\n        }\r\n        //append binary head and proto buffer;\r\n        return this.fillHeader(array, MATCHVS_USER_GATEWAY_SPEED_REQ);\r\n    };\r\n    this.roomCreate = function (maxUser, flag, gameID, pRoomInfo, pPlayInfo) {\r\n\r\n        var message = new proto.stream.CreateRoom();\r\n        message.setGameid(Number(gameID));\r\n\r\n\r\n        var pi = new proto.stream.PlayerInfo();\r\n        pi.setUserid(pPlayInfo.userID);\r\n        pi.setUserprofile(stringToUtf8ByteArray(pPlayInfo.userProfile));\r\n        message.setPlayerinfo(pi);\r\n\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(Number(pRoomInfo.maxPlayer));\r\n        roomInfo.setCanwatch(pRoomInfo.canWatch);\r\n        roomInfo.setMode(pRoomInfo.mode);\r\n        roomInfo.setVisibility(pRoomInfo.visibility);\r\n        roomInfo.setRoomname(pRoomInfo.roomName);\r\n        roomInfo.setRoomproperty(stringToUtf8ByteArray(pRoomInfo.roomProperty));\r\n        message.setRoominfo(roomInfo);\r\n\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_CREATE_REQ);\r\n    };\r\n\r\n    this.joinRandomRoom = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        message.setGameid(Number(roomJoin.gameID));\r\n        message.setJointype(proto.stream.JoinRoomType.JOINRANDOMROOM);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        message.setRoominfo(roomInfo);\r\n\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n\r\n    };\r\n\r\n    /**\r\n     * 加入指定房间roomID\r\n     * @param roomJoin\r\n     * @returns {DataView}\r\n     */\r\n    this.joinRoomSpecial = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        message.setGameid(Number(roomJoin.gameID));\r\n        message.setJointype(roomJoin.joinType);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        roomInfo.setRoomid(roomJoin.roomID);\r\n        message.setRoominfo(roomInfo);\r\n\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n\r\n    };\r\n\r\n    /**\r\n     * 属性加入房间\r\n     * @param roomJoin {MsRoomJoin}\r\n     * @returns {DataView}\r\n     */\r\n    this.joinRoomWithProperties = function (roomJoin) {\r\n        var message = new proto.stream.JoinRoomReq();\r\n        var kvtags = [];\r\n        var temp = roomJoin.tags;\r\n        var num = 0;\r\n        for(var k in temp){\r\n            var tag = new proto.stream.keyValue();\r\n            tag.setKey(k);\r\n            tag.setValue(temp[k]);\r\n            kvtags[num++] = tag;\r\n        }\r\n        message.setTagsList(kvtags);\r\n        message.setGameid(roomJoin.gameID);\r\n        message.setJointype(proto.stream.JoinRoomType.JOINROOMWITHPROPERTY);\r\n        message.setCpproto(stringToUtf8ByteArray(roomJoin.userProfile));\r\n\r\n        var playInfo = new proto.stream.PlayerInfo();\r\n        playInfo.setUserid(roomJoin.userID);\r\n        playInfo.setUserprofile(stringToUtf8ByteArray(roomJoin.userProfile));\r\n        message.setPlayerinfo(playInfo);\r\n\r\n        var roomInfo = new proto.stream.RoomInfo();\r\n        roomInfo.setMaxplayer(roomJoin.maxPlayer);\r\n        roomInfo.setCanwatch(roomJoin.canWatch);\r\n        roomInfo.setMode(roomJoin.mode);\r\n        roomInfo.setVisibility(0);\r\n        roomInfo.setRoomid(roomJoin.roomID);\r\n        message.setRoominfo(roomInfo);\r\n\r\n        var bytes = message.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_REQ);\r\n\r\n    };\r\n\r\n    this.roomCheckIn = function (bookInfo,roomInfo,userID,gameID) {\r\n        var pkg = new proto.stream.CheckIn();\r\n        pkg.setGameid(Number(gameID));\r\n        pkg.setRoomid(roomInfo.getRoomid());\r\n        pkg.setUserid(Number(userID));\r\n        pkg.setBookid(bookInfo.getBookid());\r\n        pkg.setKey(bookInfo.getBookkey());\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_CHECK_IN_REQ);\r\n\r\n    };\r\n    this.getRoomList = function (gameID,filter) {\r\n        var pkg = new proto.stream.GetRoomList();\r\n        var roomFilter = new proto.stream.RoomFilter();\r\n        roomFilter.setCanwatch(filter.canWatch);\r\n        roomFilter.setMaxplayer(filter.maxPlayer);\r\n        roomFilter.setMode(Number(filter.mode));\r\n        roomFilter.setRoomproperty(stringToUtf8ByteArray(filter.roomProperty));\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomfilter(roomFilter);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, CMD_GET_ROOM_LIST_REQ);\r\n\r\n    };\r\n\r\n    /**\r\n     * 获取房间信息扩展接口\r\n     * @param gameID {number}\r\n     * @param filter {MsRoomFilterEx}\r\n     */\r\n    this.getRoomListEx = function (gameID,filter) {\r\n        var pkg = new proto.stream.GetRoomListExReq();\r\n        var roomFilter = new proto.stream.RoomFilter();\r\n        roomFilter.setMaxplayer(filter.maxPlayer);\r\n        roomFilter.setMode(Number(filter.mode));\r\n        roomFilter.setFull(filter.full);\r\n        roomFilter.setCanwatch(filter.canWatch);\r\n        roomFilter.setRoomproperty(stringToUtf8ByteArray(filter.roomProperty));\r\n        roomFilter.setState(filter.state);\r\n\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomfilter(roomFilter);\r\n        pkg.setSort(filter.sort);\r\n        pkg.setOrder(filter.order);\r\n        pkg.setPageno(filter.pageNo);\r\n        pkg.setPagesize(filter.pageSize);\r\n\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, CMD_GET_ROOM_LIST_EX_REQ);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param gameID {number}\r\n     * @param roomID {string}\r\n     */\r\n    this.getRoomDetail = function (gameID, roomID) {\r\n        var pkg = new proto.stream.GetRoomDetailReq();\r\n\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomid(roomID);\r\n\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes,CMD_GET_ROOM_DETAIL_REQ);\r\n    };\r\n\r\n    this.joinOver = function (gameID,roomID,cpproto,userID) {\r\n\r\n        var pkg = new proto.stream.JoinOverReq();\r\n        pkg.setGameid(gameID);\r\n        pkg.setRoomid(roomID);\r\n        pkg.setCpproto(cpproto);\r\n        pkg.setUserid(userID);\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_JOIN_OVER_REQ);\r\n    };\r\n    this.leaveRoom = function (gameID,userID,roomID,cpproto) {\r\n\r\n        var pkg = new proto.stream.LeaveRoomReq();\r\n        pkg.setGameid(gameID);\r\n        pkg.setUserid(userID);\r\n        pkg.setRoomid(roomID);\r\n        pkg.setCpproto(stringToUtf8ByteArray(cpproto));\r\n        var bytes = pkg.serializeBinary();\r\n        return this.fillHeader(bytes, MATCHVS_ROOM_LEAVE_REQ);\r\n    };\r\n\r\n}\r\n\r\n\r\n/**\r\n * message PlayerInfo\r\n *{\r\n *    uint32 userID = 1;\r\n *    bytes userProfile = 2;\r\n *}\r\n * @param userID uint32\r\n * @param userProfile bytes\r\n * @constructor\r\n */\r\nfunction PlayerInfo(userID, userProfile) {\r\n    this.userID = userID;\r\n    this.userProfile = userProfile;\r\n}\r\n\r\n/**\r\n * message RoomInfo\r\n *{\r\n *    uint64 roomID = 1;\r\n *    string roomName = 2;\r\n *    uint32 maxPlayer = 3;\r\n *    int32 mode = 4;\r\n *    int32 canWatch = 5;\r\n *    int32 visibility = 6;\r\n *    bytes roomProperty = 7;\r\n *    uint32 owner = 8;\r\n *}\r\n * @param roomID\r\n * @param roomName\r\n * @param maxPlayer\r\n * @param mode\r\n * @param canWatch\r\n * @param visibility\r\n * @param roomProperty\r\n * @param owner\r\n * @constructor\r\n */\r\nfunction RoomInfo(roomID, roomName, maxPlayer, mode, canWatch, visibility, roomProperty, owner) {\r\n    this.roomID = roomID;\r\n    this.roomName = roomName;\r\n    this.maxPlayer = maxPlayer;\r\n    this.mode = mode;\r\n    this.canWatch = canWatch;\r\n    this.visibility = visibility;\r\n    this.roomProperty = roomProperty;\r\n    this.owner = owner;\r\n}\r\n/**\r\n * 心跳\r\n * @gameID {uint32} value 游戏ID\r\n * @roomID {string} value 房间ID\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.heartBeat = function (gameID,roomID) {\r\n    var pkg = new proto.stream.HeartbeatReq();\r\n    pkg.setGameid(gameID);\r\n    pkg.setRoomid(roomID);\r\n    var dataArray = pkg.serializeBinary();\r\n    return this.fillHeader(dataArray, MATCHVS_USER_HEARTBEAT_REQ);\r\n};\r\n\r\n\r\n/**\r\n * 注销账号\r\n * @param  cpProto {string}\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.logout = function (cpProto) {\r\n    var buf = stringToUtf8ByteArray(cpProto);\r\n    return this.fillHeader(buf, MATCHVS_USER_LOGOUT_REQ);\r\n};\r\n/**\r\n * file describe : this file include some Submodule control of MatchvsProtocol in matchvsprotocol.js\r\n */\r\n\r\n/**\r\n * 发送数据\r\n * @destType   { number } value : number 0-包含destUids  1-排除destUids\r\n * @destUids   {!Array<number>} value : 玩家ID集合 [1,2,3,4,5]\r\n * @roomID     { number } value : 房间号\r\n * @msgType    { number } value : 0-客户端+not CPS  1-not客户端+ CPS   2-客户端 + CPS\r\n * @data       { string } value : cp 数据\r\n */\r\nMatchvsProtocol.prototype.broadCast = function (roomID, destUids, destType, msgType, data) {\r\n    var broadcast = new proto.stream.Broadcast();\r\n    broadcast.setRoomid(roomID);\r\n    broadcast.setDstuidsList(destUids);\r\n    broadcast.setCpproto(data); //cp 数据\r\n\r\n    // 低8位 由 0-3  | destType |msgType 组合 0000|00|00\r\n    var priority = 2;\r\n    var flag =  ((priority&0x0F)<<4 )+ ((destType&0x03)<<2) + (msgType&0x03);\r\n    broadcast.setFlag(flag);\r\n    var bytes = broadcast.serializeBinary();\r\n    return this.fillHeader(bytes, MATCHVS_BROADCAST_HOTEL_REQ);\r\n};\r\n\r\n/**\r\n * 玩家订阅或取消订阅一批groups，（支持批量和同时订阅和取消），支持同事订阅和取消订阅，\r\n * 是因为游戏角色从一个区域跨越到另一个区域时需要这种原子切换\r\n * @gameID {uint32} value 游戏ID\r\n * @roomID {uint64} value 房间号\r\n * @confirms {!Array.<string>} value  要订阅的分组集合\r\n * @cancels {!Array.<string>} value  要取消的分组集合\r\n */\r\nMatchvsProtocol.prototype.subscribeEventGroup = function (gameID, roomID, confirms, cancels) {\r\n    var subscribe = new proto.stream.Subscribe();\r\n    subscribe.setRoomid(roomID);\r\n    subscribe.setGameid(gameID);\r\n    subscribe.setCancelsList(cancels);\r\n    subscribe.setConfirmsList(confirms);\r\n    var bytes = subscribe.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_SUBSCRIBE_CMDID);\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @userID { number } value 用户ID\r\n * @roomID { number } value 房间号\r\n * @priority { number } value\r\n * @groups { !Array.<string> } value\r\n * @cpproto { !Array.<string> } value\r\n */\r\nMatchvsProtocol.prototype.sendEventGroup = function (userID, roomID, priority, groups, cpproto) {\r\n    var sendevnt = new proto.stream.Publish();\r\n    sendevnt.setRoomid(roomID);\r\n    sendevnt.setPriority(priority);\r\n    sendevnt.setCpproto(stringToUtf8ByteArray(cpproto));\r\n    sendevnt.setGroupsList(groups);\r\n\r\n    var bytes = sendevnt.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_PUBLISH_CMDID);\r\n};\r\n\r\n\r\n\r\n/**\r\n *\r\n * @userID { number } value 游戏ID\r\n * @gameID { number } value 房间号\r\n * @roomID { number } value  要订阅的分组集合\r\n * @userID { !Array.<string> } value\r\n */\r\nMatchvsProtocol.prototype.hotelHeartBeat = function (gameID, roomID, userID) {\r\n    var heartbeat = new proto.stream.Heartbeat();\r\n    heartbeat.setGameid(gameID);\r\n    heartbeat.setRoomid(roomID);\r\n    heartbeat.setUserid(userID);\r\n\r\n    var bytes = heartbeat.serializeBinary();\r\n    return this.fillHeader(bytes, MATCHVS_HEARTBEAT_HOTEL_REQ);\r\n};\r\n\r\n\r\nMatchvsProtocol.prototype.disConnect = function (userID,gameID,roomId) {\r\n    var paker = new proto.stream.DisconnectReq;\r\n    paker.setGameid(gameID);\r\n    paker.setRoomid(roomId);\r\n    paker.setUserid(userID);\r\n    var bytes = paker.serializeBinary();\r\n    return this.fillHeader(bytes, CMD_DISCONNECT_REQ);\r\n    //TODO 扩展接口\r\n};\r\n\r\n/**\r\n * 剔除用户\r\n * @param userid {number} 发起踢人操作者\r\n * @param srcUserId {number} 被踢除者\r\n * @param roomid {string} 房间号\r\n * @param data {string} 附带的消息\r\n */\r\nMatchvsProtocol.prototype.kickPlayer =  function (userid, srcUserId, roomid, data) {\r\n    var kick = new proto.stream.KickPlayer;\r\n    kick.setRoomid(roomid);\r\n    kick.setSrcuserid(srcUserId);\r\n    kick.setUserid(userid);\r\n    kick.setCpproto(stringToUtf8ByteArray(data));\r\n    var bytes = kick.serializeBinary();\r\n    return this.fillHeader(bytes,CMD_KICK_PLAYER_REQ);\r\n};\r\n/**\r\n *\r\n * @param frameRate {number} 同步帧速率\r\n * @param roomID {String} 房间ID\r\n * @param gameID {number}\r\n * @param priority {number} default is 0\r\n * @param frameidx {number} must > 0\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.setFrameSync =  function (frameRate,roomID,gameID,priority,frameidx) {\r\n    var reqEx = new proto.stream.SetFrameSyncRate();\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setPriority(priority);\r\n    reqEx.setFramerate(frameRate);\r\n    reqEx.setFrameidx(frameidx);\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes,CMD_SET_FRAME_SYNCRATE_CMDID);\r\n};\r\n/**\r\n *\r\n * @param roomID {String} 房间ID\r\n * @param priority {number} default is 0\r\n * @param cpProto {String} Payload\r\n * @returns {DataView}\r\n */\r\nMatchvsProtocol.prototype.sendFrameEvent =  function (roomID,priority,cpProto) {\r\n    var reqEx = new proto.stream.FrameBroadcast();\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setPriority(priority);\r\n    reqEx.setCpproto(stringToUtf8ByteArray(cpProto));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes,CMD_FRAME_BROADCAST_CMDID);\r\n};\r\n\r\nMatchvsProtocol.prototype.setRoomProperty = function (gameID, userID, roomID, roomProperty) {\r\n    var reqEx = new proto.stream.SetRoomPropertyReq();\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setUserid(userID);\r\n    reqEx.setRoomproperty(stringToUtf8ByteArray(roomProperty));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes,CMD_SET_ROOM_PROPERTY_REQ);\r\n};\r\n\r\nMatchvsProtocol.prototype.joinOpen = function (gameID, userID, roomID, cpProto) {\r\n    var reqEx = new proto.stream.JoinOpenReq();\r\n    reqEx.setRoomid(roomID);\r\n    reqEx.setGameid(gameID);\r\n    reqEx.setUserid(userID);\r\n    reqEx.setCpproto(stringToUtf8ByteArray(cpProto));\r\n    var bytes = reqEx.serializeBinary();\r\n    return this.fillHeader(bytes,CMD_ROOM_JOIN_OPEN_REQ);\r\n};/* ================ matchvs.js ================= */\r\nvar M_ENGINE;\r\n\r\nfunction MatchvsEngine() {\r\n    M_ENGINE = this;\r\n    this.mChannel = \"MatchVS\";\r\n    this.mPlatform = \"release\";\r\n    this.mMsPubArgs = new MsPublicMemberArgs();\r\n    this.mEngineState = ENGE_STATE.NONE;\r\n    this.mAllPlayers = [];\r\n    this.mRecntRoomID = 0;\r\n    this.mUserListForJoinRoomRsp = [];  //加入房间收到回调，等checkin成后作为调用joinRoomResponse参数\r\n    this.joinRoomNotifyInfo = null;     //加入房间收到回调，等checkinNotify成后作为调用joinRoomNotify参数\r\n\r\n    this.mNetWork = null;\r\n    this.mHotelNetWork = null;\r\n    this.mBookInfo = null;\r\n    this.mHotelHeartBeatTimer = null;\r\n    this.mProtocol = new MatchvsProtocol();\r\n\r\n    var NetWorkCallBackImp = function (engine) {\r\n        MSExtend(this, MatchvsNetWork);\r\n        var lastTime = new Date().getTime();\r\n        var timer;\r\n        var frameCache = [];\r\n        this.onMsg = function (dataView) {\r\n            var time = new Date().getTime();\r\n            var message = time - lastTime;\r\n            if (message > 10) {\r\n            }\r\n            lastTime = time;\r\n\r\n            var packet = engine.mProtocol.handleMsg(dataView);\r\n            var roomInfo = new proto.stream.RoomInfo();\r\n            if (packet && packet.header) {\r\n            }\r\n            switch (packet.header.cmd) {\r\n            case MATCHVS_USER_LOGIN_RSP:\r\n                if (packet.payload.getStatus() === 200) {\r\n                    engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n                } else {\r\n                    engine.mEngineState &= ~ENGE_STATE.LOGINING;\r\n                    engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Login is fail,Server Response Error\");\r\n                }\r\n                engine.mEngineState &= ~ENGE_STATE.LOGINING;\r\n                engine.mRecntRoomID = packet.payload.getRoomid();\r\n                if (((engine.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING)) {\r\n                    if (engine.mRecntRoomID !== \"0\") {\r\n                        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.reconnect, engine.mMsPubArgs.userID,\r\n                            engine.mRecntRoomID, engine.mMsPubArgs.gameID, 0, 0, 0, \"reconnect\", [{name: \"MatchVS\"}]);\r\n                        var reconbuf = engine.mProtocol && engine.mProtocol.joinRoomSpecial(roomJoin);\r\n                        engine.mNetWork && engine.mNetWork.send(reconbuf);\r\n                    } else {\r\n                        engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                        //201 重连成功但是不在房间\r\n                        engine.mRsp.reconnectResponse && engine.mRsp.reconnectResponse(201, null, null);\r\n                    }\r\n\r\n                } else {\r\n                    engine.mRsp.loginResponse(new MsLoginRsp(packet.payload.getStatus(), engine.mRecntRoomID));\r\n                }\r\n                break;\r\n            case MATCHVS_ROOM_JOIN_RSP:\r\n                if (packet.payload.getStatus() === 200) {\r\n                    engine.mEngineState |= ENGE_STATE.IN_ROOM;\r\n                    engine.mBookInfo = packet.payload.getBookinfo();\r\n                    engine.mRoomInfo = packet.payload.getRoominfo();\r\n                    engine.mUserListForJoinRoomRsp = packet.payload.getUsersList();\r\n                    HttpConf.HOST_HOTEL_ADDR = getHotelUrl(engine);\r\n                    engine.mHotelNetWork = new MatchvsNetWork(HttpConf.HOST_HOTEL_ADDR, engine.mNetWorkCallBackImp);\r\n                    engine.mNetWorkCallBackImp.onConnect = function (host) {\r\n                        engine.roomCheckIn(engine.mHotelNetWork, engine.mBookInfo, engine.mRoomInfo);\r\n                        engine.mRsp.onConnect && engine.mRsp.onConnect(host);\r\n                    };\r\n                    if (engine.mHotelHeartBeatTimer == null) {\r\n                        engine.mHotelHeartBeatTimer = setInterval(engine.hotelHeartBeat, HEART_BEAT_INTERVAL);\r\n                    }\r\n                } else {\r\n                    engine.mEngineState &= ~ENGE_STATE.JOIN_ROOMING;\r\n                    engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                    engine.mRsp.joinRoomResponse && engine.mRsp.joinRoomResponse(packet.payload.getStatus(), null, null);\r\n                }\r\n                break;\r\n            case MATCHVS_ROOM_CREATE_RSP:\r\n                if (packet.payload.getStatus() === 200) {\r\n                    engine.mEngineState |= ENGE_STATE.IN_ROOM;\r\n                    engine.mBookInfo = packet.payload.getBookinfo();\r\n                    var roomid = packet.payload.getRoomid();\r\n                    roomInfo.setRoomid(roomid);\r\n                    roomInfo.setOwner(packet.payload.getOwner());\r\n                    engine.mRoomInfo = roomInfo;\r\n                    HttpConf.HOST_HOTEL_ADDR = getHotelUrl(engine);\r\n                    engine.mHotelNetWork = new MatchvsNetWork(HttpConf.HOST_HOTEL_ADDR, engine.mNetWorkCallBackImp);\r\n                    engine.mNetWorkCallBackImp.onConnect = function (host) {\r\n                        engine.roomCheckIn(engine.mHotelNetWork, engine.mBookInfo, engine.mRoomInfo);\r\n                        engine.mRsp.onConnect && engine.mRsp.onConnect(host);\r\n                    };\r\n                    if (engine.mHotelHeartBeatTimer == null) {\r\n                        engine.mHotelHeartBeatTimer = setInterval(engine.hotelHeartBeat, HEART_BEAT_INTERVAL);\r\n                    }\r\n                } else {\r\n                    engine.mEngineState &= ~ENGE_STATE.CREATEROOM;\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                }\r\n                break;\r\n            case MATCHVS_ROOM_CHECK_IN_RSP: {\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                }\r\n                engine.mAllPlayers = packet.payload.getCheckinsList();//checkins;\r\n                var roomUserList = [];\r\n                engine.mUserListForJoinRoomRsp.forEach(function (user) {\r\n                    var roomuser = new MsRoomUserInfo(user.getUserid(), utf8ByteArrayToString(user.getUserprofile()));\r\n                    roomUserList.push(roomuser);\r\n                });\r\n                //房间信息\r\n                var roominfo = new MsRoomInfo(engine.mRoomInfo.getRoomid(), utf8ByteArrayToString(engine.mRoomInfo.getRoomproperty()), engine.mRoomInfo.getOwner());\r\n\r\n                if ((engine.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM) {\r\n                    //创建房间\r\n                    engine.mEngineState &= ~ENGE_STATE.CREATEROOM;\r\n                    engine.mRsp.createRoomResponse && engine.mRsp.createRoomResponse(new MsCreateRoomRsp(packet.payload.getStatus(), engine.mRoomInfo.getRoomid(), engine.mRoomInfo.getOwner()));\r\n                } else if ((engine.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING) {\r\n                    //加入房间\r\n                    engine.mEngineState &= ~ENGE_STATE.JOIN_ROOMING;\r\n                    engine.mRsp.joinRoomResponse && engine.mRsp.joinRoomResponse(packet.payload.getStatus(), roomUserList, roominfo);\r\n                } else if ((engine.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING) {\r\n                    engine.mEngineState &= ~ENGE_STATE.RECONNECTING;\r\n                    engine.mRsp.reconnectResponse && engine.mRsp.reconnectResponse(packet.payload.getStatus(), roomUserList, roominfo);\r\n                }\r\n            }\r\n                break;\r\n            case MATCHVS_ROOM_CHECKIN_NOTIFY:\r\n                if (engine.joinRoomNotifyInfo) {\r\n                    engine.mRsp.joinRoomNotify && engine.mRsp.joinRoomNotify(engine.joinRoomNotifyInfo);\r\n                }\r\n                engine.mAllPlayers = packet.payload.getCheckinsList();\r\n                engine.mRsp.roomCheckInNotify && engine.mRsp.roomCheckInNotify(new MsCheckInNotify(packet.payload.getUserid(), packet.payload.getCheckinsList(), packet.payload.getPlayersList(), packet.payload.getMaxplayers()));\r\n                engine.joinRoomNotifyInfo = null;\r\n                break;\r\n            case MATCHVS_ROOM_LEAVE_RSP:\r\n                //退出房间状态取消\r\n                engine.mEngineState &= ~ENGE_STATE.LEAVE_ROOMING;\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                }\r\n                roomInfo.setRoomid(\"0\");\r\n                engine.mRoomInfo = roomInfo;\r\n                var leaveRoomRsp = new MsLeaveRoomRsp(packet.payload.getStatus(), packet.payload.getRoomid(), packet.payload.getUserid(), packet.payload.getCpproto());\r\n                engine.mRsp.leaveRoomResponse && engine.mRsp.leaveRoomResponse(leaveRoomRsp);\r\n                engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n                break;\r\n            case MATCHVS_ROOM_JOIN_OVER_RSP:\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                }\r\n                engine.mRsp.joinOverResponse && engine.mRsp.joinOverResponse(new MsJoinOverRsp(packet.payload.getStatus(), utf8ByteArrayToString(packet.payload.getCpproto())));\r\n                break;\r\n            case MATCHVS_ROOM_NOTICE_USER_JOIN:\r\n                engine.joinRoomNotifyInfo = new MsRoomUserInfo(packet.payload.getUser().getUserid(), utf8ByteArrayToString(packet.payload.getUser().getUserprofile()));\r\n                break;\r\n            case MATCHVS_ROOM_NOTICE_USER_LEAVE:\r\n                var leaveRoomInfo = new MsLeaveRoomNotify(packet.payload.getRoomid(), packet.payload.getUserid(), packet.payload.getOwner(), utf8ByteArrayToString(packet.payload.getCpproto()));\r\n                engine.mRsp.leaveRoomNotify && engine.mRsp.leaveRoomNotify(leaveRoomInfo);\r\n                break;\r\n            case MATCHVS_HEARTBEAT_HOTEL_RSP:\r\n                //房间的心跳返回\r\n                engine.mRsp.hotelHeartBeatRsp && engine.mRsp.hotelHeartBeatRsp(packet.payload.getStatus());\r\n                MatchvsLog.logI(\"hotelHeartBeatRsp\");\r\n                break;\r\n            case MATCHVS_BROADCAST_HOTEL_RSP:\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server Response Error\");\r\n                }\r\n                engine.mRsp.sendEventResponse && engine.mRsp.sendEventResponse(new MsSendEventRsp(packet.payload.getStatus(), packet.header.seq));\r\n                break;\r\n            case MATCHVS_HOTEL_NOTIFY:\r\n                var srcUserID = packet.payload.getSrcuid();\r\n                if (srcUserID === 0) {\r\n                    engine.mRsp.gameServerNotify && engine.mRsp.gameServerNotify(new MsGameServerNotifyInfo(packet.payload.getSrcuid(), utf8ByteArrayToString(packet.payload.getCpproto())));\r\n                } else {\r\n                    engine.mRsp.sendEventNotify && engine.mRsp.sendEventNotify(new MsSendEventNotify(packet.payload.getSrcuid(), utf8ByteArrayToString(packet.payload.getCpproto())));\r\n                }\r\n                break;\r\n            case CMD_SUBSCRIBE_ACK_CMDID://MATCHVS_SUBSCRIBE_EVENT_GROUP_RSP:\r\n                engine.mRsp.subscribeEventGroupResponse && engine.mRsp.subscribeEventGroupResponse(packet.payload.getStatus(), packet.payload.getGroupsList());\r\n                break;\r\n            case CMD_PUBLISH_ACKCMDID://MATCHVS_SEND_EVENT_GROUP_RSP:\r\n                engine.mRsp.sendEventGroupResponse && engine.mRsp.sendEventGroupResponse(packet.payload.getStatus(), packet.payload.getDstnum());\r\n                break;\r\n            case CMD_PUBLISH_NOTIFYCMDID://SEND_EVENT_GROUP_NOTIFY:\r\n                engine.mRsp.sendEventGroupNotify && engine.mRsp.sendEventGroupNotify(packet.payload.getSrcuid(), packet.payload.getGroupsList(), utf8ByteArrayToString(packet.payload.getCpproto()));\r\n                break;\r\n            case MATCHVS_USER_GATEWAY_SPEED_RSP:\r\n                var status = packet.payload.getStatus();\r\n                var seq = packet.payload.getSeq();\r\n                engine.mRsp.gatewaySpeedResponse && engine.mRsp.gatewaySpeedResponse(new MsGatewaySpeedResponse(status, seq));\r\n                break;\r\n            case MATCHVS_USER_HEARTBEAT_RSP:\r\n                var gameid = packet.payload.getGameid();\r\n                var gsExist = packet.payload.getGsexist();\r\n                //如果心跳存在视为已登录状态\r\n                engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n                engine.mRsp.heartBeatResponse && engine.mRsp.heartBeatResponse(new MsHeartBeatResponse(gameid, gsExist));\r\n                MatchvsLog.logI(\"gatewayHeartBeatResponse\");\r\n                break;\r\n            case MATCHVS_USER_LOGOUT_RSP:\r\n                engine.mNetWork.close();\r\n                engine.mRsp.logoutResponse && engine.mRsp.logoutResponse(packet.payload.getStatus());\r\n                break;\r\n            case MATCHVS_NETWORK_STATE_NOTIFY:\r\n                engine.mRsp.networkStateNotify && engine.mRsp.networkStateNotify(new MsNetworkStateNotify(\r\n                    packet.payload.getRoomid(),\r\n                    packet.payload.getUserid(),\r\n                    packet.payload.getState(),\r\n                    packet.payload.getOwner()\r\n                ));\r\n                break;\r\n            case CMD_GET_ROOM_LIST_RSP:\r\n                var roominfolist = packet.payload.getRoominfoList();\r\n                var roomList = [];\r\n                for (var i = 0; i < roominfolist.length; i++) {\r\n                    roomList[i] = new MsRoomInfoEx(roominfolist[i].getRoomid(),\r\n                        roominfolist[i].getRoomname(),\r\n                        roominfolist[i].getMaxplayer(),\r\n                        roominfolist[i].getMode(),\r\n                        roominfolist[i].getCanwatch(),\r\n                        utf8ByteArrayToString(roominfolist[i].getRoomproperty()));\r\n                }\r\n                engine.mRsp.getRoomListResponse && engine.mRsp.getRoomListResponse(packet.payload.getStatus(), roomList);\r\n                break;\r\n            case CMD_DISCONNECT_RSP:\r\n                engine.mRsp.disConnectResponse && engine.mRsp.disConnectResponse(packet.payload.getStatus());\r\n                break;\r\n            case CMD_KICK_PLAYER_RSP:\r\n                engine.mRsp.kickPlayerResponse && engine.mRsp.kickPlayerResponse(new MsKickPlayerRsp(packet.payload.getStatus(), packet.payload.getOwner(), packet.payload.getUserid()));\r\n                break;\r\n            case CMD_KICK_PLAYER_NOTIFY:\r\n                if (packet.payload.getUserid().toString() === (\"\"+engine.mUserID) && engine.mHotelHeartBeatTimer != null) {\r\n                    clearInterval(engine.mHotelHeartBeatTimer);\r\n                    engine.mHotelHeartBeatTimer = null;\r\n                    engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n                    engine.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n                    engine.mHotelNetWork.close();\r\n                }\r\n                engine.mRsp.kickPlayerNotify && engine.mRsp.kickPlayerNotify(\r\n                    new MsKickPlayerNotify(packet.payload.getUserid(),\r\n                        packet.payload.getSrcuserid(),\r\n                        utf8ByteArrayToString(packet.payload.getCpproto()),\r\n                        packet.payload.getOwner()\r\n                    ));\r\n                break;\r\n            case CMD_SET_FRAME_SYNCRATEACK_CMDID:\r\n                MatchvsLog.logI(\"SetFrameSyncRateAck:\" + packet.payload);\r\n                engine.mRsp.setFrameSyncResponse && engine.mRsp.setFrameSyncResponse(\r\n                    new MsSetChannelFrameSyncRsp(packet.payload.getStatus()));\r\n                break;\r\n            case CMD_SET_FRAME_SYNCRATENOTIFY_CMDID:\r\n                //MatchvsLog.logI(\"SetFrameSyncRateNotify:\"+packet.payload);\r\n                break;\r\n            case CMD_FRAME_BROADCASTACK_CMDID:\r\n                //MatchvsLog.logI(\"FrameBroadcastAck:\"+packet.payload);\r\n                engine.mRsp.sendFrameEventResponse && engine.mRsp.sendFrameEventResponse(\r\n                    new MsSendFrameEventRsp(packet.payload.getStatus())\r\n                );\r\n                break;\r\n            case CMD_FRAME_DATANOTIFY_CMDID:\r\n                //MatchvsLog.logI(\"FrameDataNotify:\"+packet.payload);\r\n                frameCache.push(new MsFrameItem(packet.payload.getSrcuid(), utf8ByteArrayToString(packet.payload.getCpproto()), packet.payload.getTimestamp()));\r\n                break;\r\n            case CMD_FRAME_SYNCNOTIFY_CMDID:\r\n                //MatchvsLog.logI(\"FrameSyncNotify:\"+packet.payload);\r\n                var frameData = [];\r\n                while (frameCache.length > 0) {\r\n                    frameData.push(frameCache.pop());\r\n                }\r\n                var msFrameData = new MsFrameData(packet.payload.getLastidx(), frameData, frameData.length);\r\n                engine.mRsp.frameUpdate && engine.mRsp.frameUpdate(msFrameData);\r\n                break;\r\n            case CMD_GET_ROOM_LIST_EX_RSP:\r\n                var roomInfoList = packet.payload.getRoominfoexList();\r\n                var roomAttrs = [];\r\n                roomInfoList.forEach(function (roominfo) {\r\n                    var roomAttr = new MsRoomAttribute(\r\n                        roominfo.getRoomid(),\r\n                        roominfo.getRoomname(),\r\n                        roominfo.getMaxplayer(),\r\n                        roominfo.getGameplayer(),\r\n                        roominfo.getWatchplayer(),\r\n                        roominfo.getMode(),\r\n                        roominfo.getCanwatch(),\r\n                        utf8ByteArrayToString(roominfo.getRoomproperty()),\r\n                        roominfo.getOwner(),\r\n                        roominfo.getState(),\r\n                        roominfo.getCreatetime().toString()\r\n                    );\r\n                    roomAttrs.push(roomAttr);\r\n                });\r\n\r\n                var roomListExInfo = new MsGetRoomListExRsp(\r\n                    packet.payload.getStatus(),\r\n                    packet.payload.getTotal(),\r\n                    roomAttrs\r\n                );\r\n                engine.mRsp.getRoomListExResponse && engine.mRsp.getRoomListExResponse(roomListExInfo);\r\n                break;\r\n            case CMD_GET_ROOM_DETAIL_RSP:\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.mRsp.getRoomDetailResponse && engine.mRsp.getRoomDetailResponse(new MsGetRoomDetailRsp(packet.payload.getStatus()));\r\n                    engine.mRsp.errorResponse && engine.mRsp.errorResponse(packet.payload.getStatus(), \"Server error\");\r\n                }\r\n                var roomDetail = packet.payload.getRoomdetail();\r\n                var userInfos = [];\r\n                var playerlist = roomDetail.getPlayerinfosList();\r\n                playerlist.forEach(function (player) {\r\n                    var userinfo = new MsRoomUserInfo(player.getUserid(), utf8ByteArrayToString(player.getUserprofile()));\r\n                    userInfos.push(userinfo);\r\n                });\r\n                var roomDetailRsp = new MsGetRoomDetailRsp(\r\n                    packet.payload.getStatus(),\r\n                    roomDetail.getState(),\r\n                    roomDetail.getMaxplayer(),\r\n                    roomDetail.getMode(),\r\n                    roomDetail.getCanwatch(),\r\n                    utf8ByteArrayToString(roomDetail.getRoomproperty()),\r\n                    roomDetail.getOwner(),\r\n                    roomDetail.getCreateflag(),\r\n                    userInfos\r\n                );\r\n                engine.mRsp.getRoomDetailResponse && engine.mRsp.getRoomDetailResponse(roomDetailRsp);\r\n                break;\r\n            case MATCHVS_ROOM_JOIN_OVER_NOTIFY:\r\n                var joinoverNotifyInfo = new MsJoinOverNotifyInfo(\r\n                    packet.payload.getRoomid(),\r\n                    packet.payload.getSrcuserid(),\r\n                    utf8ByteArrayToString(packet.payload.getCpproto())\r\n                );\r\n                engine.mRsp.joinOverNotify && engine.mRsp.joinOverNotify(joinoverNotifyInfo);\r\n                break;\r\n            case CMD_SET_ROOM_PROPERTY_RSP:\r\n                if (packet.payload.getStatus() !== 200) {\r\n                    engine.errorResponse && engine.errorResponse(packet.payload.getStatus(), \"Server response error\");\r\n                }\r\n                engine.mRsp.setRoomPropertyResponse && engine.mRsp.setRoomPropertyResponse(new MsSetRoomPropertyRspInfo(\r\n                    packet.payload.getStatus(),\r\n                    packet.payload.getRoomid(),\r\n                    packet.payload.getUserid(),\r\n                    utf8ByteArrayToString(packet.payload.getRoomproperty())\r\n                ));\r\n                break;\r\n            case CMD_SET_ROOM_PROPERTY_NOTIFY:\r\n                engine.mRsp.setRoomPropertyNotify && engine.mRsp.setRoomPropertyNotify(new MsRoomPropertyNotifyInfo(\r\n                    packet.payload.getRoomid(),\r\n                    packet.payload.getUserid(),\r\n                    utf8ByteArrayToString(packet.payload.getRoomproperty())\r\n                ));\r\n                break;\r\n            case CMD_ROOM_JOIN_OPEN_RSP:\r\n                engine.mRsp.joinOpenResponse && engine.mRsp.joinOpenResponse(new MsReopenRoomResponse(\r\n                    packet.payload.getStatus(),\r\n                    utf8ByteArrayToString(packet.payload.getCpproto())\r\n                ));\r\n                break;\r\n            case CMD_ROOM_JOIN_OPEN_NOT:\r\n                engine.mRsp.joinOpenNotify && engine.mRsp.joinOpenNotify(new MsReopenRoomNotify(\r\n                    packet.payload.getRoomid(),\r\n                    packet.payload.getUserid(),\r\n                    utf8ByteArrayToString(packet.payload.getCpproto())\r\n                ));\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n\r\n        };\r\n        this.onErr = function (errCode, errMsg) {\r\n            engine.mRsp.errorResponse && engine.mRsp.errorResponse(errCode, errMsg);\r\n        };\r\n        this.onConnect = function (host) {\r\n            engine.mRsp.onConnect && engine.mRsp.onConnect(host);\r\n            timer = setInterval(engine.heartBeat, HEART_BEAT_INTERVAL);\r\n\r\n        };\r\n        this.onDisConnect = function (host,event) {\r\n            engine.mRsp.onDisConnect && engine.mRsp.onDisConnect(host);\r\n            if (host.endsWith(HttpConf.HOST_GATWAY_ADDR)) {\r\n                if ((engine.mEngineState & ENGE_STATE.LOGOUTING) !== ENGE_STATE.LOGOUTING) {\r\n                    //如果gateway 异常断开连接了就返回错误消息\r\n                    if (event&&event.code&&(event.code===1000||event.code===1005)){\r\n                        MatchvsLog.logI(\"gateway close is friend\");\r\n                    } else{\r\n                        engine.mRsp.errorResponse && engine.mRsp.errorResponse(1001, \"gateway network error\");\r\n                    }\r\n                }\r\n                engine.mEngineState = ENGE_STATE.NONE;\r\n                engine.mEngineState |= ENGE_STATE.HAVE_INIT;\r\n                MatchvsLog.logI(\"EngineState\",engine.mEngineState);\r\n                clearInterval(timer);\r\n            } else if (host.endsWith(HttpConf.HOST_HOTEL_ADDR)) {\r\n                MatchvsLog.logI(\"hotel disconnect\");\r\n                if ((engine.mEngineState & ENGE_STATE.LEAVE_ROOMING) !== ENGE_STATE.LEAVE_ROOMING) {\r\n                    //针对，如果直接退出房间，没有调用 leaveRoom接口\r\n                    if (event&&event.code&&(event.code===1000||event.code===1005)){\r\n                        MatchvsLog.logI(\"hotel close is friend\");\r\n                    } else{\r\n                        engine.mRsp.errorResponse && engine.mRsp.errorResponse(1001, \"hotel network error\");\r\n                    }\r\n                }\r\n                //如果房间服务器断开了(包括异常断开情况)就把定时器关掉\r\n                if (engine.mHotelHeartBeatTimer != null) {\r\n                    clearInterval(engine.mHotelHeartBeatTimer);\r\n                    engine.mHotelHeartBeatTimer = null;\r\n                }\r\n                //退出房间状态取消\r\n                engine.mEngineState &= ~ENGE_STATE.LEAVE_ROOMING;\r\n                engine.mEngineState &= ~ENGE_STATE.IN_ROOM;\r\n            }\r\n        };\r\n    };\r\n    this.init = function (response, channel, platform, gameID) {\r\n        this.mRsp = response;\r\n        this.mChannel = channel;\r\n        this.mPlatform = platform;\r\n        this.mGameID = gameID;\r\n        this.mMsPubArgs.channel = channel;\r\n        this.mMsPubArgs.platform = platform;\r\n        this.mEngineState = ENGE_STATE.INITING;\r\n        this.mProtocol.init();\r\n        this.getHostList();\r\n        return 0;\r\n    };\r\n\r\n\r\n    this.reconnect = function () {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return -2;\r\n        if ((this.mEngineState & ENGE_STATE.RECONNECTING) === ENGE_STATE.RECONNECTING) return -9;\r\n\r\n        if (this.mRecntRoomID !== \"0\" && (this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN) {\r\n            this.mEngineState |= ENGE_STATE.RECONNECTING;\r\n            var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.reconnect, this.mMsPubArgs.userID,\r\n                this.mRecntRoomID, this.mMsPubArgs.gameID, 0, 0, 0, \"reconnect\", [{name: \"MatchVS\"}]);\r\n            var buf = this.mProtocol.joinRoomSpecial(roomJoin);\r\n            this.mNetWork.send(buf);\r\n            this.mRecntRoomID = \"0\";\r\n            return 0;\r\n        }\r\n\r\n        if (undefined === this.mMsPubArgs.gameID || undefined === this.mMsPubArgs.secretKey || undefined === this.mMsPubArgs.appKey) {\r\n            return -1;\r\n        }\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN) return -6;\r\n        if (!(undefined === this.mNetWork || null === this.mNetWork)) {\r\n            this.mNetWork.close();\r\n        }\r\n        //登录状态\r\n        this.mEngineState |= ENGE_STATE.LOGINING;\r\n        //重连状态\r\n        this.mEngineState |= ENGE_STATE.RECONNECTING;\r\n        this.mNetWorkCallBackImp = new NetWorkCallBackImp(this);\r\n        this.mNetWork = new MatchvsNetWork(HttpConf.HOST_GATWAY_ADDR, this.mNetWorkCallBackImp);\r\n        var loginbuf = this.mProtocol.login(this.mMsPubArgs.userID, this.mMsPubArgs.token, this.mMsPubArgs.gameID,\r\n            this.mMsPubArgs.gameVersion, this.mMsPubArgs.appKey, this.mMsPubArgs.secretKey,\r\n            this.mMsPubArgs.deviceID, this.mMsPubArgs.gatewayID);\r\n        this.mNetWork.send(loginbuf);\r\n\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * 登录\r\n     * @pUserID {uint32} value 用户ID\r\n     * @pToken {uint64} value 用户的token值\r\n     * @pGameID {uint32} pGameID 游戏ID\r\n     * @pGameVersion {uint16} value  游戏版本\r\n     * @pAppKey { !Array.<string> } app_key 游戏key,通过官网注册获得\r\n     * @pSecretKey pSecretKey 游戏secret，通过官网注册获得\r\n     * @pDeviceID { !Array.<string> } deviceID 设备ID\r\n     * @pGatewayID pGatewayID\r\n     */\r\n    this.login = function (userID, token, pGameID, pGameVersion, pAppKey, pSecretKey, deviceID, gatewayID) {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return -2;       //未初始化\r\n        if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING) return -3;           //正在初始化\r\n        if ((this.mEngineState & ENGE_STATE.LOGINING) === ENGE_STATE.LOGINING) return -5;           //正在登录\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) === ENGE_STATE.HAVE_LOGIN) return -6;     // 已经登录，请勿重复登录\r\n        if ((this.mEngineState & ENGE_STATE.LOGOUTING) === ENGE_STATE.LOGOUTING) return -11;       // 正在登出\r\n\r\n        if (!(undefined === this.mNetWork || null === this.mNetWork)) {\r\n            this.mNetWork.close();\r\n        }\r\n        this.mNetWorkCallBackImp = new NetWorkCallBackImp(this);\r\n        this.mNetWork = new MatchvsNetWork(HttpConf.HOST_GATWAY_ADDR, this.mNetWorkCallBackImp);\r\n        this.mUserID = userID;\r\n        this.mToken = token;\r\n        this.mGameID = pGameID;\r\n        this.mGameVersion = pGameVersion;\r\n        this.mAppKey = pAppKey;\r\n        this.mMsPubArgs.userID = userID;\r\n        this.mMsPubArgs.token = token;\r\n        this.mMsPubArgs.gameID = pGameID;\r\n        this.mMsPubArgs.gameVersion = pGameVersion;\r\n        this.mMsPubArgs.appKey = pAppKey;\r\n        this.mMsPubArgs.deviceID = deviceID;\r\n        this.mMsPubArgs.gatewayID = gatewayID;\r\n        this.mMsPubArgs.secretKey = pSecretKey;\r\n        var buf = this.mProtocol.login(userID, token, pGameID, pGameVersion, pAppKey, pSecretKey, deviceID, gatewayID);\r\n        this.mEngineState |= ENGE_STATE.LOGINING;\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"login,userID\"+userID+\", token:\"+token);\r\n        return 0;\r\n    };\r\n    /**\r\n     * 用户网关速度，暂时先不使用\r\n     */\r\n\r\n    this.speed = function () {\r\n        if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) {\r\n            return -4;//未登录\r\n        }\r\n        var buf = this.mProtocol.speed(this.mUserID, this.mGameID,\r\n            this.mToken, VERSION, this.mGameVersion);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param createRoomInfo {MsCreateRoomInfo}\r\n     * @param userProfile\r\n     * @returns {number}\r\n     */\r\n    this.createRoom = function (createRoomInfo, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0) return ret;\r\n        if (userProfile.length > 512) return -21;\r\n        var roomInfo = new RoomInfo(0\r\n            , createRoomInfo.roomName\r\n            , createRoomInfo.maxPlayer\r\n            , createRoomInfo.mode\r\n            , createRoomInfo.canWatch\r\n            , createRoomInfo.visibility\r\n            , createRoomInfo.roomProperty\r\n            , 0);\r\n        var playInfo = new PlayerInfo(this.mUserID, userProfile);\r\n        var buf = this.mProtocol.roomCreate(createRoomInfo.maxPlayer, 0, this.mGameID, roomInfo, playInfo);\r\n        if (buf.byteLength > 1024 || userProfile.length > 512) return -21;\r\n        this.mEngineState |= ENGE_STATE.CREATEROOM;//设置用户正在创建房间\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"create room\");\r\n        return 0;\r\n    };\r\n    this.getVersion = function () {\r\n        return \"MatchVS-SDK-JS_v1.3.0.beta.201805016\";\r\n    };\r\n\r\n    this.uninit = function () {\r\n        this.mEngineState = ENGE_STATE.NONE;\r\n        MatchvsLog.logI(\"unInit \");\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     * getRoomList\r\n     * @param filter {MsRoomFilter}\r\n     */\r\n    this.getRoomList = function (filter) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0) return ret;\r\n        var buf = this.mProtocol.getRoomList(this.mGameID, filter);\r\n        if (buf.byteLength > 1024) return -21;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     * create a connect to room service and check in\r\n     * @param hotelNetWork {MatchvsNetWork} a connection for Hotel\r\n     * @param bookInfo {Object}bookInfo\r\n     * @param roomInfo {Object}roomInfo\r\n     */\r\n    this.roomCheckIn = function (hotelNetWork, bookInfo, roomInfo) {\r\n        var buf = this.mProtocol.roomCheckIn(bookInfo, roomInfo, this.mUserID, this.mGameID);\r\n        hotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n    /**\r\n     * int joinRandomRoom(int iMaxPlayer, const MsString userProfile);\r\n     */\r\n    this.joinRandomRoom = function (maxPlayer, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0) return ret;\r\n        if (maxPlayer > MVSCONFIG.MAXPLAYER_LIMIT || maxPlayer <= 0) return -20;\r\n        if (userProfile.length > 512) return -21;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinRandomRoom, this.mUserID,\r\n            0, this.mGameID, maxPlayer, 0, 0,\r\n            userProfile, [{name: \"matchvs\"}]);\r\n        var buf = this.mProtocol.joinRandomRoom(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param matchinfo {MsMatchInfo}\r\n     * @param userProfile {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinRoomWithProperties = function (matchinfo, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0) return ret;\r\n        if (userProfile.length > 512) return -21;\r\n        if (typeof matchinfo !== \"object\") return -1;\r\n        if (typeof userProfile !== \"string\") return -1;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinRoomWithProperty, this.mUserID,\r\n            1, this.mGameID, matchinfo.maxPlayer, matchinfo.mode, matchinfo.canWatch, userProfile, matchinfo.tags);\r\n        var buf = this.mProtocol.joinRoomWithProperties(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param roomID {string}\r\n     * @param userProfile {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinRoom = function (roomID, userProfile) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 2);\r\n        if (ret !== 0) return ret;\r\n        if (!(/^[0-9]+$/.test(roomID))) return -1;//判断必须是全为数字\r\n        var roomId = String(roomID).trim();\r\n        if (0 === roomId || roomId === \"\") return -1;\r\n        var roomJoin = new MsRoomJoin(MsEnum.JoinRoomType.joinSpecialRoom, this.mUserID,\r\n            roomID, this.mGameID, 0, 0, 0, userProfile, [{name: \"MatchVS\"}]);\r\n        var buf = this.mProtocol.joinRoomSpecial(roomJoin);\r\n        this.mEngineState |= ENGE_STATE.JOIN_ROOMING;\r\n        this.mNetWork.send(buf);\r\n        MatchvsLog.logI(\"join room\");\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param cpProto {string}\r\n     * @returns {number}\r\n     */\r\n    this.joinOver = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0) return ret;\r\n        var buf = this.mProtocol.joinOver(this.mGameID, this.mRoomInfo.getRoomid(), stringToUtf8ByteArray(cpProto), this.mUserID);\r\n        if (buf.byteLength > 1024) return -21;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param cpProto {string}\r\n     * @returns {number}\r\n     */\r\n    this.leaveRoom = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 3);\r\n        if (ret !== 0) return ret;\r\n        var roomid = this.mRecntRoomID;\r\n        if (this.mRoomInfo && this.mRoomInfo.getRoomid) {\r\n            roomid = this.mRoomInfo.getRoomid();\r\n        }\r\n        var buf = this.mProtocol.leaveRoom(this.mGameID, this.mUserID, roomid, cpProto);\r\n        this.mNetWork.send(buf);\r\n        //设置为正在退出房间\r\n        this.mEngineState |= ENGE_STATE.LEAVE_ROOMING;\r\n        if (this.mHotelNetWork) {\r\n            this.mHotelNetWork.close();\r\n        }\r\n        MatchvsLog.logI(\"leaveRoom\");\r\n        return 0;\r\n    };\r\n    /**\r\n     *\r\n     * @param userID {number} 被剔除者userID\r\n     * @param cpProto {string}\r\n     * @returns {number} 0 成功，1失败\r\n     */\r\n    this.kickPlayer = function (userID, cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0) return ret;\r\n        var buf = this.mProtocol.kickPlayer(userID, this.mUserID, this.mRoomInfo.getRoomid(), cpProto);\r\n        if (buf.byteLength > 1024) return -21;\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param frameRate ex:10/s . = 0 is off,>0 is on.\r\n     * @returns {number}\r\n     */\r\n    this.setFrameSync = function (frameRate) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0) return ret;\r\n        if (frameRate > 20 || frameRate < 0) return -20;\r\n        var buf = this.mProtocol.setFrameSync(Number(frameRate), this.mRoomInfo.getRoomid(), this.mGameID, 0, 1);\r\n        this.mHotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param cpProto {String} payload\r\n     * @returns {number}\r\n     */\r\n    this.sendFrameEvent = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0) return ret;\r\n        if (cpProto.length > 1024) return -21;\r\n        var buf = this.mProtocol.sendFrameEvent(this.mRoomInfo.getRoomid(), 0, cpProto);\r\n        this.mHotelNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n    this.joinOpen = function (cpProto) {\r\n        var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n        if (ret !== 0) return ret;\r\n        var buf = this.mProtocol.joinOpen(this.mGameID, this.mUserID, this.mRoomInfo.getRoomid(), cpProto);\r\n        this.mNetWork.send(buf);\r\n        return 0;\r\n    };\r\n\r\n}\r\n\r\nfunction MatchvsResponse() {\r\n\r\n    /**\r\n     *\r\n     * @param userInfo {MsRegistRsp}\r\n     */\r\n    this.registerUserResponse = function (userInfo) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param loginRsp {MsLoginRsp}\r\n     */\r\n    this.loginResponse = function (loginRsp) {\r\n\r\n    };\r\n    /**\r\n     * MsLogoutRsp\r\n     * @param status {number}\r\n     */\r\n    this.logoutResponse = function (status) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsCreateRoomRsp}\r\n     */\r\n    this.createRoomResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param roomInfos {Array<MsRoomInfoEx>}\r\n     */\r\n    this.getRoomListResponse = function (status, roomInfos) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param status\r\n     * @param roomUserInfoList\r\n     * @param roomInfo\r\n     */\r\n    this.joinRoomResponse = function (status, roomUserInfoList, roomInfo) {\r\n\r\n    };\r\n    /**\r\n     * message NoticeJoin\r\n     *{\r\n     *    PlayerInfo user = 1;\r\n     *}\r\n     * message PlayerInfo\r\n     *{\r\n     *    uint32 userID = 1;\r\n     *    bytes userProfile = 2;\r\n     *}\r\n     * @param roomUserInfo {MsRoomUserInfo}\r\n     */\r\n    this.joinRoomNotify = function (roomUserInfo) {\r\n\r\n    };\r\n    /**\r\n     * message NoticeLeave\r\n     *{\r\n     *    uint32 userID = 1;\r\n     *    uint64 roomID = 2;\r\n     *    uint32 owner = 3;\r\n     *}\r\n     * @type rsp {NoticeLeave}\r\n     */\r\n    this.joinOverResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param notifyInfo {MsJoinOverNotifyInfo}\r\n     */\r\n    this.joinOverNotify = function (notifyInfo) {\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * message LeaveRoomRsp\r\n     *{\r\n     *    ErrorCode status = 1;//200.成功 | 403.房间关闭 | 404.房间不存在 | 500.服务器错误\r\n     *    uint64 roomID = 2;\r\n     *    uint32 userID = 3;\r\n     *    bytes cpProto = 4;\r\n     *}\r\n     * @param rsp {LeaveRoomRsp}\r\n     */\r\n    this.leaveRoomResponse = function (rsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param leaveRoomInfo {MsLeaveRoomNotify}\r\n     */\r\n    this.leaveRoomNotify = function (leaveRoomInfo) {\r\n\r\n    };\r\n    /**\r\n     * MsKickPlayerRsp\r\n     * @param rsp {MsKickPlayerRsp}\r\n     */\r\n    this.kickPlayerResponse = function (rsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param notify {MsKickPlayerNotify}\r\n     */\r\n    this.kickPlayerNotify = function (notify) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSendEventRsp}\r\n     */\r\n    this.sendEventResponse = function (rsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param tRsp {MsSendEventNotify}\r\n     */\r\n    this.sendEventNotify = function (tRsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param tRsp {MsGameServerNotifyInfo}\r\n     */\r\n    this.gameServerNotify = function (tRsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param errCode {Number}\r\n     * @param errMsg {string}\r\n     */\r\n    this.errorResponse = function (errCode, errMsg) {\r\n\r\n    };\r\n    /**\r\n     * status==200 is success.other is fail;\r\n     * @param status {int}\r\n     */\r\n    this.initResponse = function (status) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param int\r\n     */\r\n    // this.networkDelay = function (delay) {\r\n    //\r\n    // };\r\n    /**\r\n     *\r\n     * @param notify{MsNetworkStateNotify}\r\n     */\r\n    this.networkStateNotify = function (notify) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param groups {Array<string>}\r\n     */\r\n    this.subscribeEventGroupResponse = function (status, groups) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param status {number}\r\n     * @param dstNum {number}\r\n     */\r\n    this.sendEventGroupResponse = function (status, dstNum) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param srcUid {number}\r\n     * @param groups {Array<string>}\r\n     * @param cpProto {string}\r\n     */\r\n    this.sendEventGroupNotify = function (srcUid, groups, cpProto) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSetChannelFrameSyncRsp}\r\n     */\r\n    this.setFrameSyncResponse = function (rsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param rsp {MsSendFrameEventRsp}\r\n     */\r\n    this.sendFrameEventResponse = function (rsp) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param data {MsFrameData}\r\n     */\r\n    this.frameUpdate = function (data) {\r\n\r\n    };\r\n    /**\r\n     *\r\n     * @param data {number}\r\n     */\r\n    this.hotelHeartBeatRsp = function (data) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param rsp {MsGatewaySpeedResponse}\r\n     */\r\n    this.gatewaySpeedResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param rsp\r\n     */\r\n    this.heartBeatResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param rsp\r\n     */\r\n    this.roomCheckInNotify = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     * 主动断开网络接口回调\r\n     * @param rep\r\n     */\r\n    this.disConnectResponse = function (rep) {\r\n\r\n    };\r\n\r\n    /**\r\n     * 获取房间详细信息回调\r\n     * @param rsp {MsGetRoomDetailRsp}\r\n     */\r\n    this.getRoomDetailResponse = function (rsp) {\r\n    };\r\n\r\n    /**\r\n     * 获取房间扩展信息返回\r\n     * @param rsp {MsGetRoomListExRsp}\r\n     */\r\n    this.getRoomListExResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param rsp {MsSetRoomPropertyRspInfo}\r\n     */\r\n    this.setRoomPropertyResponse = function (rsp) {\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param notify\r\n     */\r\n    this.setRoomPropertyNotify = function (notify) {\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     *\r\n     * @param status\r\n     * @param roomUserInfoList\r\n     * @param roomInfo\r\n     */\r\n    this.reconnectResponse = function (status, roomUserInfoList, roomInfo) {\r\n    };\r\n\r\n    this.joinOpenNotify = function (rsp) {\r\n    };\r\n    this.joinOpenResponse = function (notify) {\r\n    };\r\n}\r\n\r\n/**\r\n * 注销登录\r\n * @param cpProto {string}\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.logout = function (cpProto) {\r\n\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) return -4;\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) === ENGE_STATE.IN_ROOM) {\r\n        this.mEngineState |= ENGE_STATE.LEAVE_ROOMING;\r\n        this.leaveRoom(\"user logout\");\r\n        this.mHotelNetWork && this.mHotelNetWork.close();\r\n    }\r\n    var buf = this.mProtocol.logout(cpProto);\r\n    this.mEngineState |= ENGE_STATE.LOGOUTING;\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n/**\r\n * 心跳\r\n */\r\nMatchvsEngine.prototype.heartBeat = function () {\r\n    var Instance = M_ENGINE;\r\n    if (Instance.mGameID === undefined || Instance.mGameID === \"\" || Instance.mGameID === 0) {\r\n        return;\r\n    }\r\n    var roomID;\r\n    if (Instance.mRoomInfo === undefined) {\r\n        roomID = 0;\r\n    } else {\r\n        roomID = Instance.mRoomInfo.getRoomid();\r\n    }\r\n    var buf = Instance.mProtocol.heartBeat(Instance.mGameID, roomID);\r\n    Instance.mNetWork.send(buf);\r\n    MatchvsLog.logI(\"gateway heartBeat\");\r\n};\r\n\r\n\r\n/**\r\n * 发送数据\r\n * @destType    : number 0-包含destUids  1-排除destUids\r\n * @destUids    : 玩家ID集合 [1,2,3,4,5]\r\n * @roomID      : 房间号\r\n * @msgType     : 0-客户端+not CPS  1-not客户端+ CPS   2-客户端 + CPS\r\n * @data        : cp 数据\r\n */\r\nMatchvsEngine.prototype.sendEvent = function (data) {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -2\r\n    };//未初始化\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -4\r\n    };//未登录\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -6\r\n    };   //没有进入房间\r\n    if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -3\r\n    };//正在初始化\r\n    if ((this.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -7\r\n    };//在创建房间\r\n    if ((this.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -7\r\n    };//正在加入房间\r\n    if (typeof data !== \"string\") return {sequence: this.mProtocol.seq - 1, result: -1};\r\n\r\n    var destType = 0;\r\n    var msgType = 0;\r\n    var userids = [];\r\n    var num = 0;\r\n    for (var i = 0; i < this.mAllPlayers.length; i++) {\r\n        if (this.mAllPlayers[i] !== parseInt(this.mUserID)) {\r\n            userids[num++] = this.mAllPlayers[i];\r\n        }\r\n    }\r\n    if (userids.length > MVSCONFIG.MAXPLAYER_LIMIT) return -20;\r\n    var buf = this.mProtocol.broadCast(this.mRoomInfo.getRoomid(), userids, destType, msgType, stringToUtf8ByteArray(data));\r\n    if (buf.byteLength > 1024) return -21;\r\n    this.mHotelNetWork.send(buf);\r\n    // this.mProtocol.seq-1 因为发送后会加1所以需要减1\r\n    return {sequence: this.mProtocol.seq - 1, result: 0};\r\n};\r\n\r\n/**\r\n * 扩展消息发送\r\n * @param msgType\r\n * @param data\r\n * @param desttype\r\n * @param userids\r\n * @returns {*}\r\n */\r\nMatchvsEngine.prototype.sendEventEx = function (msgType, data, desttype, userids) {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -2\r\n    };//未初始化\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_LOGIN) !== ENGE_STATE.HAVE_LOGIN) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -4\r\n    };//未登录\r\n    if ((this.mEngineState & ENGE_STATE.IN_ROOM) !== ENGE_STATE.IN_ROOM) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -6\r\n    };   //没有进入房间\r\n    if ((this.mEngineState & ENGE_STATE.INITING) === ENGE_STATE.INITING) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -3\r\n    };//正在初始化\r\n    if ((this.mEngineState & ENGE_STATE.CREATEROOM) === ENGE_STATE.CREATEROOM) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -7\r\n    };//在创建房间\r\n    if ((this.mEngineState & ENGE_STATE.JOIN_ROOMING) === ENGE_STATE.JOIN_ROOMING) return {\r\n        sequence: this.mProtocol.seq - 1,\r\n        result: -7\r\n    };//正在加入房间\r\n    if (typeof data !== \"string\") return {sequence: this.mProtocol.seq - 1, result: -1};\r\n    if (!(msgType === 0 || msgType === 1 || msgType === 2)) return {sequence: this.mProtocol.seq - 1, result: -23};\r\n    if (!(desttype === 0 || desttype === 1)) return {sequence: this.mProtocol.seq - 1, result: -24};\r\n\r\n    var buf = this.mProtocol.broadCast(this.mRoomInfo.getRoomid(), userids, desttype, msgType, stringToUtf8ByteArray(data));\r\n    if (data.length > 1024) return -21;\r\n    this.mHotelNetWork.send(buf);\r\n    // this.mProtocol.seq-1 因为发送后会加1所以需要减1\r\n    return {sequence: this.mProtocol.seq - 1, result: 0};\r\n};\r\n\r\n\r\n/**\r\n * 玩家订阅或取消订阅一批groups，（支持批量和同时订阅和取消），支持同事订阅和取消订阅，\r\n * 是因为游戏角色从一个区域跨越到另一个区域时需要这种原子切换\r\n * @param confirms {!Array.<string>} value  要订阅的分组集合\r\n * @param cancels {!Array.<string>} value  要取消的分组集合\r\n */\r\nMatchvsEngine.prototype.subscribeEventGroup = function (confirms, cancels) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0) return ret;\r\n    if (confirms.length === 0 && cancels.length === 0) return -20;\r\n    var buf = this.mProtocol.subscribeEventGroup(this.mGameID, this.mRoomInfo.getRoomid(), confirms, cancels);\r\n    this.mHotelNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n/**\r\n * @groups { !Array.<string> } value 调用subscribeEventGroup 设置的分组\r\n * @cpproto { !Array.<string> } value 发送的信息\r\n */\r\nMatchvsEngine.prototype.sendEventGroup = function (data, groups) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0) return ret;\r\n    if (groups.length <= 0) return -20;\r\n    if (data.length > 1024) return -21;\r\n    var priority = 1; // 要设置的消息通道优先级\r\n    var buf = this.mProtocol.sendEventGroup(this.mGameID, this.mRoomInfo.getRoomid(), priority, groups, data);\r\n    this.mHotelNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n/**\r\n * @gameID { number } value 游戏ID\r\n * @roomID { string } value 房间号\r\n * @userID { number } value  要订阅的分组集合\r\n */\r\nMatchvsEngine.prototype.hotelHeartBeat = function () {\r\n    var _engine = M_ENGINE;\r\n    this.mEngineState |= ENGE_STATE.IN_ROOM;\r\n    this.mEngineState |= ENGE_STATE.HAVE_LOGIN;\r\n    var buf = _engine.mProtocol.hotelHeartBeat(_engine.mGameID, _engine.mRoomInfo.getRoomid(), _engine.mUserID);\r\n    _engine.mHotelNetWork.send(buf);\r\n    MatchvsLog.logI(\"hotel heartBeat\");\r\n};\r\n\r\n/**\r\n * 注册用户\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.registerUser = function () {\r\n    if ((this.mEngineState & ENGE_STATE.HAVE_INIT) !== ENGE_STATE.HAVE_INIT) return -2;//未初始化\r\n    var deviceid = \"javascript\";\r\n    var channel = this.mChannel;\r\n    var cacheKey = \"regUserInfo\" + channel + this.mPlatform;\r\n    var gameVersion = this.mGameVersion;\r\n    var cacheUserInfo = LocalStore_Load(cacheKey);\r\n    if (cacheUserInfo) {\r\n        var obj = JSON.parse(cacheUserInfo);\r\n        this.mRsp.registerUserResponse(new MsRegistRsp(obj.status, obj.data.userid, obj.data.token, obj.data.nickname, obj.data.avatar));\r\n        MatchvsLog.logI(\"load user info from cache:\" + obj);\r\n        return 0;\r\n    }\r\n    var uri = \"/wc3/regit.do\";\r\n    var url = HttpConf.REGISTER_USER_URL + uri + \"?mac=0\" + \"&deviceid=\" + deviceid + \"&channel=\" + channel + \"&pid=13\" + \"&version=\" + gameVersion;\r\n    var rep = new MatchvsNetWorkCallBack();\r\n    new MatchvsHttp(rep).get(url);\r\n    rep.rsp = this.mRsp.registerUserResponse;\r\n    rep.onMsg = function (buf) {\r\n        var obj = JSON.parse(buf);\r\n        if (obj.status === 0) {\r\n            LocalStore_Save(cacheKey, buf);\r\n            this.rsp(new MsRegistRsp(obj.status, obj.data.userid, obj.data.token, obj.data.nickname, obj.data.avatar));\r\n        } else {\r\n            this.rsp(new MsRegistRsp(obj.status, 0, \"0\", buf, \"\"));\r\n        }\r\n\r\n    };\r\n    rep.onErr = function (errCode, errMsg) {\r\n        this.rsp(new MsRegistRsp(errCode, 0, \"0\", errMsg, \"\"));\r\n    };\r\n    return 0;\r\n};\r\n\r\n/**\r\n * 获取域名列表\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.getHostList = function () {\r\n    var gameId = this.mGameID;\r\n    var channel = this.mChannel;\r\n    var platform = this.mPlatform;\r\n    var uri = \"/v1/gateway/query\";\r\n    var url = \"https://sdk.matchvs.com\" + uri + \"?mac=0\" + \"&gameid=\" + gameId + \"&channel=\" + channel + \"&platform=\" + platform + \"&useWSSProxy=1\";\r\n    var rep = new MatchvsNetWorkCallBack();\r\n    var engine = this;\r\n    new MatchvsHttp(rep).get(url);\r\n    rep.onMsg = function (buf) {\r\n        var obj = JSON.parse(buf);\r\n        if (obj.status === 200) {\r\n            engine.mEngineState |= ENGE_STATE.HAVE_INIT;\r\n            engine.mEngineState &= ~ENGE_STATE.INITING;\r\n            var http = \"https://\";\r\n            var port = \"\";\r\n            HttpConf.REGISTER_USER_URL = http + obj.data.vsuser;\r\n            var websocket = \"wss://\";\r\n            // var wss = (obj.data.wssProxy == \"192.168.8.7\")?\"ws://\":\"wss://\";\r\n            HttpConf.HOST_GATWAY_ADDR = websocket + obj.data.wssProxy;\r\n            HttpConf.CMSNS_URL = http + obj.data.cmsns;\r\n            HttpConf.VS_OPEN_URL = http + obj.data.vsopen;\r\n            HttpConf.VS_PAY_URL = http + obj.data.vspay;\r\n            HttpConf.VS_PRODUCT_URL = http + obj.data.VS_PRODUCT_URL;\r\n        }\r\n        engine.mRsp.initResponse(obj.status);\r\n    };\r\n    rep.onErr = function (errCode, errMsg) {\r\n        console.error(\"getHostListErrCode\" + errCode + \" getHostListErrMsg\" + errMsg);\r\n        engine.mRsp.errorResponse(errCode, errMsg);\r\n    };\r\n    return 0;\r\n};\r\n\r\n/**\r\n * 获取房间列表扩展接口\r\n * @param filter {MsRoomFilterEx}\r\n */\r\nMatchvsEngine.prototype.getRoomListEx = function (filter) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 0);\r\n    if (ret !== 0) return ret;\r\n    var buf = this.mProtocol.getRoomListEx(this.mGameID, filter);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n/**\r\n * 获取房间详细信息\r\n * @param roomID {string}\r\n * @returns {number}\r\n */\r\nMatchvsEngine.prototype.getRoomDetail = function (roomID) {\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 0);\r\n    if (ret !== 0) return ret;\r\n    var buf = this.mProtocol.getRoomDetail(this.mGameID, roomID);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n/**\r\n *\r\n * @param roomID {string}\r\n * @param roomProperty {Array<string>}\r\n * @returns {*}\r\n */\r\nMatchvsEngine.prototype.setRoomProperty = function (roomID, roomProperty) {\r\n    if (roomProperty.length === 0) return -1;\r\n    if (roomProperty.length > 1024) return -21;\r\n    var ret = commEngineStateCheck(this.mEngineState, this.mEngineState, 1);\r\n    if (ret !== 0) return ret;\r\n    var buf = this.mProtocol.setRoomProperty(this.mGameID, this.mUserID, roomID, roomProperty);\r\n    this.mNetWork.send(buf);\r\n    return 0;\r\n};\r\n\r\n\r\n/**\r\n * 断开网络连接\r\n * @param roomID 房间号\r\n */\r\nMatchvsEngine.prototype.disConnect = function (roomID) {\r\n    var buf = engine.mProtocol.disConnect(this.mUserID, this.mGameID, roomID);\r\n    this.mNetWork.send(buf);\r\n};\r\n\r\nMatchvsEngine.prototype.hashSet = function (gameID, userID, key, value) {\r\n    //参数组合是安装首字母排序的\r\n    var params = \"gameID=\" + gameID + \"&key=\" + key + \"&userID=\" + userID + \"&value=\" + value;\r\n    //加上 appkey 和 token 进行MD5签名\r\n    var sign = hex_md5(this.mAppKey + \"&\" + params + \"&\" + this.mToken);\r\n    //组合请求链接\r\n    var url = HttpConf.VS_OPEN_URL + \"/wc5/hashSet.do?\" + params + \"&sign=\" + sign;\r\n    //设置请求回调\r\n    var callback = new MatchvsNetWorkCallBack();\r\n    var httpReq = new MatchvsHttp(callback);\r\n    //请求成功回调\r\n    callback.onMsg = function (rsp) {\r\n        MatchvsLog.logI(\"hashSetRsp:\", rsp);\r\n    };\r\n    //请求失败回调\r\n    callback.onErr = function (errCode, errMsg) {\r\n        MatchvsLog.logI(\"hashSetRsp:errCode=\" + errCode + \" errMsg=\" + errMsg);\r\n    };\r\n    //执行请求\r\n    httpReq.get(url);\r\n};\r\n\r\nMatchvsEngine.prototype.hashGet = function (gameID, userID, key) {\r\n    //参数组合是安装首字母排序的\r\n    var params = \"gameID=\" + gameID + \"&key=\" + key + \"&userID=\" + userID;\r\n    //加上 appkey 和 token 进行MD5签名\r\n    var sign = hex_md5(this.mAppKey + \"&\" + params + \"&\" + this.mToken);\r\n    //组合请求链接\r\n    var url = HttpConf.VS_OPEN_URL + \"/wc5/hashGet.do?\" + params + \"&sign=\" + sign;\r\n    //设置请求回调\r\n    var callback = new MatchvsNetWorkCallBack();\r\n    var httpReq = new MatchvsHttp(callback);\r\n    //请求成功回调\r\n    callback.onMsg = function (rsp) {\r\n        MatchvsLog.logI(\"hashGetRsp:\", rsp);\r\n    };\r\n    //请求失败回调\r\n    callback.onErr = function (errCode, errMsg) {\r\n        MatchvsLog.logI(\"hashGetRsp:errCode=\" + errCode + \" errMsg=\" + errMsg);\r\n    };\r\n    //执行请求\r\n    httpReq.get(url);\r\n};\r\n/* ================ base64.js ================= */\r\nfunction Base64() {\r\n\r\n    // private property\r\n    _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n    // public method for encoding\r\n    this.encode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = _utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output +\r\n                _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n                _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    // public method for decoding\r\n    this.decode = function (input) {\r\n        var output = \"\";\r\n        var chr1, chr2, chr3;\r\n        var enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n        while (i < input.length) {\r\n            enc1 = _keyStr.indexOf(input.charAt(i++));\r\n            enc2 = _keyStr.indexOf(input.charAt(i++));\r\n            enc3 = _keyStr.indexOf(input.charAt(i++));\r\n            enc4 = _keyStr.indexOf(input.charAt(i++));\r\n            chr1 = (enc1 << 2) | (enc2 >> 4);\r\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n            chr3 = ((enc3 & 3) << 6) | enc4;\r\n            output = output + String.fromCharCode(chr1);\r\n            if (enc3 != 64) {\r\n                output = output + String.fromCharCode(chr2);\r\n            }\r\n            if (enc4 != 64) {\r\n                output = output + String.fromCharCode(chr3);\r\n            }\r\n        }\r\n        output = _utf8_decode(output);\r\n        return output;\r\n    };\r\n\r\n    // private method for UTF-8 encoding\r\n    _utf8_encode = function (string) {\r\n        string = string.replace(/\\r\\n/g,\"\\n\");\r\n        var utftext = \"\";\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n\r\n        }\r\n        return utftext;\r\n    };\r\n\r\n    // private method for UTF-8 decoding\r\n    _utf8_decode = function (utftext) {\r\n        var string = \"\";\r\n        var i = 0;\r\n        var c = c1 = c2 = 0;\r\n        while ( i < utftext.length ) {\r\n            c = utftext.charCodeAt(i);\r\n            if (c < 128) {\r\n                string += String.fromCharCode(c);\r\n                i++;\r\n            } else if((c > 191) && (c < 224)) {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n                i += 2;\r\n            } else {\r\n                c2 = utftext.charCodeAt(i+1);\r\n                c3 = utftext.charCodeAt(i+2);\r\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n                i += 3;\r\n            }\r\n        }\r\n        return string;\r\n    };\r\n}\r\n\r\ntry {\r\n  if (module && module.exports) {\r\n     module.exports = {\r\n     MatchvsLog:MatchvsLog,\r\n     MatchvsEngine: MatchvsEngine,\r\n     MatchvsResponse: MatchvsResponse,\r\n     MsMatchInfo: MsMatchInfo,\r\n     MsCreateRoomInfo: MsCreateRoomInfo, \r\n     MsRoomFilter: MsRoomFilter,\r\n     MsRoomFilterEx: MsRoomFilterEx, \r\n     LocalStore_Clear: LocalStore_Clear,\r\n     MsReopenRoomResponse:MsReopenRoomResponse,\r\n     MsReopenRoomNotify:MsReopenRoomNotify,\r\n     MatchvsHttp:MatchvsHttp\r\n\t \r\n     };\r\n    }  \r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n\r\nwindow.MatchvsLog=MatchvsLog;\r\nwindow.MatchvsEngine= MatchvsEngine;\r\nwindow.MatchvsResponse= MatchvsResponse;\r\nwindow.MsMatchInfo= MsMatchInfo;\r\nwindow.MsCreateRoomInfo= MsCreateRoomInfo; \r\nwindow.MsRoomFilter= MsRoomFilter;\r\nwindow.MsRoomFilterEx= MsRoomFilterEx; \r\nwindow.LocalStore_Clear= LocalStore_Clear;\r\nwindow.MsReopenRoomResponse=MsReopenRoomResponse;\r\nwindow.MsReopenRoomNotify=MsReopenRoomNotify;\r\nwindow.MatchvsHttp = MatchvsHttp;\r\n     \r\n    \r\n","var protocol=dcodeIO.ProtoBuf.newBuilder({\"populateAccessors\":true})['import']({\"package\":\"protocol\",\"syntax\":\"proto2\",\"messages\":[{\"name\":\"result_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"attach\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"msg\",\"id\":3}]},{\"name\":\"heart_beat\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"heart_beat_ret\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"kickoff_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"type\",\"id\":1}]},{\"name\":\"role_info\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"icon\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":3},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":4}]},{\"name\":\"DataWorkshop\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7}]},{\"name\":\"DataHunt\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"preyId\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"inHunt\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"huntTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"receive\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"refresh\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"refreshTimestamp\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"rewardId\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"double\",\"name\":\"rewardValue\",\"id\":9},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"advanture\",\"id\":10},{\"rule\":\"optional\",\"type\":\"float\",\"name\":\"seasonRate\",\"id\":11}]},{\"name\":\"DataBuilding\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7}]},{\"name\":\"DataMiracle\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"stage\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":7},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"spurCount\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"spurRecoverTimestamp\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"spurEndTimestamp\",\"id\":11},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"drawTimestamp\",\"id\":12},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawOnce\",\"id\":13}]},{\"name\":\"DataAchievement\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":2},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"draw\",\"id\":4}]},{\"name\":\"DataUnemployed\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"addValue\",\"id\":5}]},{\"name\":\"DataWounded\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"unemployed\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":4}]},{\"name\":\"DataProfession\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":5}]},{\"name\":\"DataArmy\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trainValue\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trainLimit\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":6},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"refID\",\"id\":8}]},{\"name\":\"DataResource\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"limit\",\"id\":3},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"history\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":5}]},{\"name\":\"Technology\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"startTimestamp\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"endTimestamp\",\"id\":3},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"open\",\"id\":5},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"display\",\"id\":6}]},{\"name\":\"Statistics\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"value\",\"id\":2}]},{\"name\":\"Flag\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":3}]},{\"name\":\"Event\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"state\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":3}]},{\"name\":\"Rank\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"rankNum\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"delta\",\"id\":4},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"isNew\",\"id\":5}]},{\"name\":\"sync_data\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataUnemployed\",\"name\":\"unemployed\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataProfession\",\"name\":\"profession\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"resource\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"DataBuilding\",\"name\":\"building\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"Technology\",\"name\":\"technology\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"Flag\",\"name\":\"flag\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"Event\",\"name\":\"event\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"timestamp\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"gameTime\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":11},{\"rule\":\"repeated\",\"type\":\"DataWorkshop\",\"name\":\"workshop\",\"id\":12},{\"rule\":\"optional\",\"type\":\"DataWounded\",\"name\":\"wounded\",\"id\":13},{\"rule\":\"repeated\",\"type\":\"Statistics\",\"name\":\"statistics\",\"id\":14},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"offlineCalTime\",\"id\":15},{\"rule\":\"repeated\",\"type\":\"sync_log\",\"name\":\"logs\",\"id\":16},{\"rule\":\"repeated\",\"type\":\"int64\",\"name\":\"doneOpID\",\"id\":17},{\"rule\":\"repeated\",\"type\":\"DataMiracle\",\"name\":\"miracle\",\"id\":18},{\"rule\":\"repeated\",\"type\":\"DataAchievement\",\"name\":\"achievement\",\"id\":19},{\"rule\":\"optional\",\"type\":\"DataHunt\",\"name\":\"hunt\",\"id\":20}]},{\"name\":\"sync_log\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"resourceID\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"double\",\"name\":\"resourceValue\",\"id\":3}]},{\"name\":\"sync_data_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"timestamp\",\"id\":3}]},{\"name\":\"open_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"buildingID\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"professionID\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"armyID\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"technologyID\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"workshopID\",\"id\":5}]},{\"name\":\"GmOperation\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"opId\",\"id\":1}]},{\"name\":\"login_register\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"username\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"password\",\"id\":2}]},{\"name\":\"login_register_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"register_Result\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"msg\",\"id\":5}]},{\"name\":\"channel_login\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelUID\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sdk\",\"id\":3}]},{\"name\":\"channel_login_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":3}]},{\"name\":\"login_login\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"username\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"password\",\"id\":2}]},{\"name\":\"login_login_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"login_Result\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"gameServer\",\"id\":4}]},{\"name\":\"login_server\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"token\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"platform\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"version\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"serverId\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deviceId\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"userId\",\"id\":7}]},{\"name\":\"login_sever_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"userId\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"serverTime\",\"id\":3}]},{\"name\":\"recoup_role\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_id\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"int64\",\"name\":\"role_id_list\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"resource\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"building\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"profession\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"army\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"recoup_bool_entry\",\"name\":\"technology\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"recoup_entry\",\"name\":\"workshop\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"recoup_time\",\"id\":10}]},{\"name\":\"recoup_entry\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"tid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"value\",\"id\":2}]},{\"name\":\"recoup_bool_entry\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"tid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"done\",\"id\":2}]},{\"name\":\"delete_recoup\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"recoup_index\",\"id\":1}]},{\"name\":\"generate_server\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"server_name\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_state\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_label\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_show_state\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"server_show_time\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"server_release_time\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"string\",\"name\":\"channels\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"extranet_ip\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"intranet_ip\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":12}]},{\"name\":\"server_batch_maintain\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"servers\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":3}]},{\"name\":\"server_all_maintain\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"server_maintain_state\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":2}]},{\"name\":\"guest_bind\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"appid\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"userid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"jz_userid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channel_id\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"sign\",\"id\":5}]},{\"name\":\"Opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"country\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"nickname\",\"id\":3},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":4},{\"rule\":\"optional\",\"type\":\"fight_reward\",\"name\":\"reward\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"epoch\",\"id\":6}]},{\"name\":\"get_fight_opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":5},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":6}]},{\"name\":\"get_fight_opponent_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"opponent\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"lOpponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"hOpponent\",\"id\":3}]},{\"name\":\"random_fight_opponent\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"gold\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":6},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":7}]},{\"name\":\"random_fight_opponent_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"opponent\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"lOpponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"Opponent\",\"name\":\"hOpponent\",\"id\":3}]},{\"name\":\"start_fight\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"pvp\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"uid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"peopleTotal\",\"id\":4},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"army\",\"id\":5},{\"rule\":\"optional\",\"type\":\"float\",\"name\":\"woundedRatio\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"doneTech\",\"id\":8},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentType\",\"id\":9},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"maxPeopleTotal\",\"id\":10}]},{\"name\":\"test_fight\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"selfLevel\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentLevel\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victoryTotal\",\"id\":5}]},{\"name\":\"test_fight_count\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"test_fight\",\"name\":\"fight\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"count\",\"id\":2}]},{\"name\":\"test_fight_count_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"victory\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"lose\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"draw\",\"id\":3}]},{\"name\":\"start_fight_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"fight_reward\",\"name\":\"reward\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"fight_report\",\"name\":\"reports\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"selfDeath\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"selfWounded\",\"id\":6},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"opponentDeath\",\"id\":7},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"opponentWounded\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":9},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":10},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"selfHolyShitArmy\",\"id\":11},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"opponentHolyShitArmy\",\"id\":12},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"totalRatio\",\"id\":13},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"selfMorale\",\"id\":14},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"opponentMorale\",\"id\":15}]},{\"name\":\"fight_reward\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"resource\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"trophy\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataResource\",\"name\":\"luxury\",\"id\":3}]},{\"name\":\"fight_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"id\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"round\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"figh_round_report\",\"name\":\"roundReport\",\"id\":3}]},{\"name\":\"figh_round_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"round\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"self\",\"id\":2},{\"rule\":\"repeated\",\"type\":\"DataArmy\",\"name\":\"opponent\",\"id\":3},{\"rule\":\"optional\",\"type\":\"skill_report\",\"name\":\"selfSkill\",\"id\":6},{\"rule\":\"optional\",\"type\":\"skill_report\",\"name\":\"opponentSkill\",\"id\":7},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"selfDodgeArmy\",\"id\":8},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"opponentDodgeArmy\",\"id\":9},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"selfMorale\",\"id\":10},{\"rule\":\"optional\",\"type\":\"double\",\"name\":\"opponentMorale\",\"id\":11}]},{\"name\":\"skill_report\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"armyID\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"skillID\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"targetArmyID\",\"id\":3}]},{\"name\":\"log_in_out\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logtime\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channeluid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"serverid\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charid\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logmode\",\"id\":6},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logoutmode\",\"id\":7},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"lasttime\",\"id\":8},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"accountname\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charname\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ip\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"mac\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"devicelabel\",\"id\":13},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ostype\",\"id\":14},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"ageid\",\"id\":15},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"countrylv\",\"id\":16},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"techdonenum\",\"id\":17},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalpopulation\",\"id\":18},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalland\",\"id\":19},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"jin_yuanbao\",\"id\":20},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"resources\",\"id\":21},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"resourceRates\",\"id\":22},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"buildings\",\"id\":23},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"workshops\",\"id\":24},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"professions\",\"id\":25},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"armies\",\"id\":26},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"technologies\",\"id\":27}]},{\"name\":\"log_yuanbao\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"logtime\",\"id\":1},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channelid\",\"id\":2},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"channeluid\",\"id\":3},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"serverid\",\"id\":4},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charid\",\"id\":5},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"accountname\",\"id\":6},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"charname\",\"id\":7},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"changetype\",\"id\":8},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"changereason\",\"id\":9},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnuma\",\"id\":10},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deltaa\",\"id\":11},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnumb\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"deltab\",\"id\":13},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"delta\",\"id\":14},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"totalnum\",\"id\":15},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param1\",\"id\":16},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param2\",\"id\":17},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param3\",\"id\":18},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"param4\",\"id\":19}]},{\"name\":\"create_role\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"icon\",\"id\":1},{\"rule\":\"required\",\"type\":\"string\",\"name\":\"nickname\",\"id\":2}]},{\"name\":\"create_role_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"int32\",\"name\":\"result\",\"id\":1},{\"rule\":\"optional\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":2}]},{\"name\":\"get_role_info\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"get_role_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"required\",\"type\":\"role_info\",\"name\":\"roleInfo\",\"id\":1}]},{\"name\":\"change_nickname\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"newNickname\",\"id\":1}]},{\"name\":\"change_nickname_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"result\",\"id\":1}]},{\"name\":\"role_info_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"level\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"exp\",\"id\":2},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"power\",\"id\":3},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"limit\",\"id\":4},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"faith\",\"id\":5},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"diamond\",\"id\":6}]},{\"name\":\"role_power_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"power\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"updateTimestamp\",\"id\":2}]},{\"name\":\"role_flag_info\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"role_flag_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"update_flag\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"update_flag_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"result\",\"id\":1}]},{\"name\":\"role_flag_push\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"flag\",\"id\":1},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"value\",\"id\":2}]},{\"name\":\"get_rank_info\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"type\",\"id\":1}]},{\"name\":\"get_rank_info_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"repeated\",\"type\":\"Rank\",\"name\":\"topRank\",\"id\":1},{\"rule\":\"optional\",\"type\":\"Rank\",\"name\":\"myRank\",\"id\":2}]},{\"name\":\"acc_batch_building\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"buildingID\",\"id\":1}]},{\"name\":\"acc_batch_building_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataBuilding\",\"name\":\"building\",\"id\":1}]},{\"name\":\"acc_batch_people\",\"syntax\":\"proto2\",\"fields\":[]},{\"name\":\"acc_batch_people_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataUnemployed\",\"name\":\"unemployed\",\"id\":1}]},{\"name\":\"acc_upgrade_technology\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"techID\",\"id\":1}]},{\"name\":\"acc_upgrade_technology_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"Technology\",\"name\":\"technology\",\"id\":1}]},{\"name\":\"acc_hunt\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"huntID\",\"id\":1}]},{\"name\":\"acc_hunt_ret\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"DataHunt\",\"name\":\"hunt\",\"id\":1}]},{\"name\":\"C2GS\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"session\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"sequence\",\"id\":2},{\"rule\":\"optional\",\"type\":\"heart_beat\",\"name\":\"heartBeat\",\"id\":3},{\"rule\":\"optional\",\"type\":\"login_register\",\"name\":\"loginRegister\",\"id\":6},{\"rule\":\"optional\",\"type\":\"login_login\",\"name\":\"loginLogin\",\"id\":7},{\"rule\":\"optional\",\"type\":\"login_server\",\"name\":\"loginServer\",\"id\":11},{\"rule\":\"optional\",\"type\":\"create_role\",\"name\":\"createRole\",\"id\":12},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"getNotice\",\"id\":18},{\"rule\":\"optional\",\"type\":\"sync_data\",\"name\":\"syncData\",\"id\":20},{\"rule\":\"optional\",\"type\":\"change_nickname\",\"name\":\"changeNickname\",\"id\":21},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"getFlag\",\"id\":22},{\"rule\":\"optional\",\"type\":\"random_fight_opponent\",\"name\":\"randomFightOpponent\",\"id\":30},{\"rule\":\"optional\",\"type\":\"start_fight\",\"name\":\"startFight\",\"id\":31},{\"rule\":\"optional\",\"type\":\"get_fight_opponent\",\"name\":\"getFightOpponent\",\"id\":32},{\"rule\":\"optional\",\"type\":\"acc_batch_building\",\"name\":\"accBatchBuilding\",\"id\":40},{\"rule\":\"optional\",\"type\":\"acc_batch_people\",\"name\":\"accBatchPeople\",\"id\":41},{\"rule\":\"optional\",\"type\":\"acc_upgrade_technology\",\"name\":\"accUpgradeTechnology\",\"id\":42},{\"rule\":\"optional\",\"type\":\"acc_hunt\",\"name\":\"accHunt\",\"id\":43},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawDayShare\",\"id\":44},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawAchievement\",\"id\":45},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawMiracle\",\"id\":46},{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"drawMiracleOnce\",\"id\":47},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"updateFightData\",\"id\":50},{\"rule\":\"optional\",\"type\":\"get_rank_info\",\"name\":\"getRankInfo\",\"id\":60},{\"rule\":\"optional\",\"type\":\"GmOperation\",\"name\":\"gmOperation\",\"id\":90},{\"rule\":\"optional\",\"type\":\"test_fight\",\"name\":\"testFight\",\"id\":100},{\"rule\":\"optional\",\"type\":\"test_fight_count\",\"name\":\"testFightCount\",\"id\":101},{\"rule\":\"optional\",\"type\":\"log_in_out\",\"name\":\"logInOut\",\"id\":200},{\"rule\":\"optional\",\"type\":\"log_yuanbao\",\"name\":\"logYuanBao\",\"id\":201},{\"rule\":\"optional\",\"type\":\"channel_login\",\"name\":\"channelLogin\",\"id\":400},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"kickoff\",\"id\":500},{\"rule\":\"optional\",\"type\":\"guest_bind\",\"name\":\"guestBind\",\"id\":601},{\"rule\":\"optional\",\"type\":\"recoup_role\",\"name\":\"recoupRole\",\"id\":602}]},{\"name\":\"GS2C\",\"syntax\":\"proto2\",\"fields\":[{\"rule\":\"optional\",\"type\":\"int32\",\"name\":\"session\",\"id\":1},{\"rule\":\"repeated\",\"type\":\"int32\",\"name\":\"sequence\",\"id\":2},{\"rule\":\"optional\",\"type\":\"heart_beat_ret\",\"name\":\"heartBeatRet\",\"id\":3},{\"rule\":\"optional\",\"type\":\"login_register_ret\",\"name\":\"loginRegisterRet\",\"id\":6},{\"rule\":\"optional\",\"type\":\"login_login_ret\",\"name\":\"loginLoginRet\",\"id\":7},{\"rule\":\"optional\",\"type\":\"login_sever_ret\",\"name\":\"loginServerRet\",\"id\":11},{\"rule\":\"optional\",\"type\":\"create_role_ret\",\"name\":\"createRoleRet\",\"id\":12},{\"rule\":\"optional\",\"type\":\"string\",\"name\":\"getNoticeRet\",\"id\":18},{\"rule\":\"optional\",\"type\":\"sync_data_ret\",\"name\":\"syncDataRet\",\"id\":20},{\"rule\":\"optional\",\"type\":\"change_nickname_ret\",\"name\":\"changeNicknameRet\",\"id\":21},{\"rule\":\"optional\",\"type\":\"Flag\",\"name\":\"getFlagRet\",\"id\":22},{\"rule\":\"optional\",\"type\":\"random_fight_opponent_ret\",\"name\":\"randomFightOpponentRet\",\"id\":30},{\"rule\":\"optional\",\"type\":\"start_fight_ret\",\"name\":\"startFightRet\",\"id\":31},{\"rule\":\"optional\",\"type\":\"get_fight_opponent_ret\",\"name\":\"getFightOpponentRet\",\"id\":32},{\"rule\":\"optional\",\"type\":\"acc_batch_building_ret\",\"name\":\"accBatchBuildingRet\",\"id\":40},{\"rule\":\"optional\",\"type\":\"acc_batch_people_ret\",\"name\":\"accBatchPeopleRet\",\"id\":41},{\"rule\":\"optional\",\"type\":\"acc_upgrade_technology_ret\",\"name\":\"accUpgradeTechnologyRet\",\"id\":42},{\"rule\":\"optional\",\"type\":\"acc_hunt_ret\",\"name\":\"accHuntRet\",\"id\":43},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawDayShareRet\",\"id\":44},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawAchievementRet\",\"id\":45},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"drawMiracleRet\",\"id\":46},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"drawMiracleOnceRet\",\"id\":47},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"updateFightDataRet\",\"id\":50},{\"rule\":\"optional\",\"type\":\"get_rank_info_ret\",\"name\":\"getRankInfoRet\",\"id\":60},{\"rule\":\"optional\",\"type\":\"GmOperation\",\"name\":\"gmOperationRet\",\"id\":90},{\"rule\":\"optional\",\"type\":\"start_fight_ret\",\"name\":\"testFightRet\",\"id\":100},{\"rule\":\"optional\",\"type\":\"test_fight_count_ret\",\"name\":\"testFightCountRet\",\"id\":101},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"logInOutRet\",\"id\":200},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"logYuanBaoRet\",\"id\":201},{\"rule\":\"optional\",\"type\":\"channel_login_ret\",\"name\":\"channelLoginRet\",\"id\":400},{\"rule\":\"optional\",\"type\":\"int64\",\"name\":\"kickoffRet\",\"id\":500},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"guestBindRet\",\"id\":601},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"recoupRoleRet\",\"id\":602},{\"rule\":\"optional\",\"type\":\"result_push\",\"name\":\"resultPush\",\"id\":1000},{\"rule\":\"optional\",\"type\":\"kickoff_push\",\"name\":\"kickoffPush\",\"id\":1001},{\"rule\":\"optional\",\"type\":\"open_push\",\"name\":\"openPush\",\"id\":1002},{\"rule\":\"optional\",\"type\":\"Flag\",\"name\":\"flagPush\",\"id\":1003},{\"rule\":\"optional\",\"type\":\"DataResource\",\"name\":\"resourcePush\",\"id\":1004},{\"rule\":\"repeated\",\"type\":\"Statistics\",\"name\":\"statisticsPush\",\"id\":1005},{\"rule\":\"optional\",\"type\":\"recoup_role\",\"name\":\"opRecoupRole\",\"id\":1006},{\"rule\":\"optional\",\"type\":\"bool\",\"name\":\"newNoticePush\",\"id\":1007}]}],\"enums\":[{\"name\":\"login_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"loginSuccess\",\"id\":1},{\"name\":\"invalidUser\",\"id\":2},{\"name\":\"invalidPwd\",\"id\":3},{\"name\":\"forbiddenUser\",\"id\":4},{\"name\":\"invalidMaintain\",\"id\":5},{\"name\":\"invalidGameServer\",\"id\":6}]},{\"name\":\"register_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"registerSuccess\",\"id\":1},{\"name\":\"userExists\",\"id\":2},{\"name\":\"invalidFormat\",\"id\":3},{\"name\":\"invalidServer\",\"id\":6}]},{\"name\":\"server_Result\",\"syntax\":\"proto2\",\"values\":[{\"name\":\"success\",\"id\":1},{\"name\":\"maintenance\",\"id\":2},{\"name\":\"notLogin\",\"id\":3}]}],\"services\":[{\"name\":\"RPCService\",\"options\":{},\"rpc\":{\"request\":{\"request\":\"C2GS\",\"request_stream\":false,\"response\":\"GS2C\",\"response_stream\":false,\"options\":{}}}}],\"isNamespace\":true}).build([\"protocol\"]);\r\nmodule.exports=protocol;","window.network = {\n    initNetwork: function() {\n        this.pomeloBuildObj = pomeloBuild.create();\n        this.pomelo = this.pomeloBuildObj.pomelo;\n\n        this.isBinding = false;\n\n        if (!this.isBinding) { // 主要为了让onMessage绑定this\n            this.onMessage = this.onMessage.bind(this);\n            this.isBinding = true;\n        }\n\n        // 只能被network用，其他人不能用\n        this.netListener = eventListener.create(\"one\");\n        this.reset();\n        this._registerNetEvent();\n    },\n\n    reset: function() {\n        this.curMsgName = \"\";\n\n        // 路由管理器（暂名）重置，重置后立马刷新一次netLoading的显示\n        this.routerManager = {};\n    },\n    /**\n     内部使用的注册网络回调函数\n     */\n    _registerNetEvent: function() {\n        this.pomelo[\"on\"](\"heartbeat timeout\", function() {\n            this.pomelo[\"disconnect\"]();\n\n            this.netListener.dispatch(\"reconnect timeout\", {});\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"heartbeat recv\", function() {\n            clientEvent.dispatch(\"updateNetworkState\", \"heartBeatRet\");\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"close\", function() {\n            this.pomelo[\"disconnect\"]();\n\n            this.netListener.dispatch(\"network close\", {});\n        }.bind(this));\n\n        this.pomelo[\"on\"](\"onKick\", function() {\n            this.netListener.dispatch(\"kick user\", {});\n\n            // 关闭网络loading动画\n            this.receiveRouterFromServer('close all netLoading');\n        }.bind(this));\n    },\n\n    // 网络协议都是在logic注册的，不能注销\n    on: function(route) {\n        this.netListener.on.apply(this.netListener, arguments);\n        pomelo[\"on\"](route, this.onMessage);\n    },\n\n    getCurMsgName: function() {\n        return this.curMsgName;\n    },\n\n    connect: function(ip, port, cb) {\n        var netConfig = {\n            host: ip,\n            port: port,\n            log: true\n        };\n\n        this.isKicked = false;\n        netConfig.wsStr = \"wss://\";\n\n        // 解决微信上点击会崩溃的bug,网络连接不能在放在ui层,所以用timeout包装一层\n        setTimeout(function() {\n            this.pomelo[\"init\"](netConfig, function() {\n                if (cb) cb();\n            }.bind(this));\n        }.bind(this), 0);\n    },\n\n    disconnect: function() {\n        if (this.isConnected()) {\n            this.pomelo[\"disconnect\"]();\n        }\n    },\n    /**\n     *  globally-unique identifiers, 生成一个不重复的随机字符串，用于跟踪请求链\n     */\n    guid: function() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    },\n\n    send: function(routeStr, dataObj) {\n        if (typeof (dataObj) === \"undefined\") {\n            dataObj = {};\n        }\n\n        // 请求参数中加入唯一标识,用于跟踪请求链。\n        dataObj.uuid = this.guid();\n        console.log(\"send route:\" + routeStr + \" data:\" + JSON.stringify(dataObj));\n\n        // 记录路由请求\n        this.addRouterToManager(routeStr);\n\n        if (this.isConnected()) {\n            this.pomelo[\"request\"](routeStr, dataObj, this.onMessage);\n        }\n    },\n\n    onMessage: function(msgOrigin) {\n        var router = msgOrigin[\"route\"];\n\n        this.receiveRouterFromServer(router);\n\n        console.log(\"receive msg from :\" + JSON.stringify(msgOrigin));\n\n        if (msgOrigin[\"body\"][\"code\"] === 500) {\n            cc.error(\"server data error, can't find the route:\" + router);\n            // pomelo异常处理都返回500，仍然需要做分发处理\n            // return;\n        }\n\n        if (!router) {\n            cc.error(\"please add the msg route in server\");\n            return;\n        }\n\n        // 空数据\n        if (Object.keys(msgOrigin[\"body\"]).length <= 0) {\n            cc.error(\"server data error, can't response no data proto\");\n            return;\n        }\n\n        this.curMsgName = msgOrigin[\"route\"];\n\n        this.netListener.dispatch(msgOrigin[\"route\"], msgOrigin[\"body\"]);\n    },\n\n    setNetLoadingStatus: function(flag) {\n        if (flag) {\n            // clientEvent.dispatch(\"showPanel\", \"netLoadingPanel\");\n        } else {\n            clientEvent.dispatch('hidePanel', \"netLoadingPanel\");\n        }\n    },\n\n    /**\n     * 检测 netLoading 的显示状态\n     * 从 routeManager 中获取每个记录的路由的请求时间，与当前时间对比\n     * 如果超出阈值就显示 netLoading\n     * 注：已返回的路由就会从 routerManager 中删掉\n     */\n    checkNetLoadingStatus: function() {\n        var keys = Object.keys(this.routerManager);\n        var keysLength = keys.length;\n        if (keysLength <= 0) {\n            this.netListener.dispatch('hidePanel', \"netLoadingPanel\");\n            return;\n        }\n\n        var currentTime = Date.now();\n        for (var key in this.routerManager) {\n            if (this.routerManager.hasOwnProperty(key)) {\n                var routerTime = this.routerManager[key];\n                var deltaTime = currentTime - routerTime;\n                if (deltaTime > this.netLoadingCheckInterval) {\n                    // 存在路由的请求时间超出了阈值，显示 netLoading\n                    // 有路由显示的话，就不再检查其他的路由\n                    return;\n                }\n            }\n        }\n    },\n\n    /**\n     * 将路由添加到路由管理器（暂名）\n     * @param {String} router 路由名\n     * 将 { 路由名 => 时间 } 作为键值对存起来，如果是已经存在的路由，则跳过\n     */\n    addRouterToManager: function(router) {\n        var keys = Object.keys(this.routerManager);\n\n        // 断线重连期间，拒绝其他的路由加入\n        if (keys.indexOf('connectTimeout') === -1) {\n            // 断线重连时，清空路由\n            if (router === 'connectTimeout') {\n                this.routerManager = {};\n            }\n\n            keys = Object.keys(this.routerManager);\n            var index = keys.indexOf(router);\n            if (index === -1) {\n                var currentTime = Date.now();\n                this.routerManager[router] = currentTime;\n            }\n        }\n    },\n\n    /**\n     * 收到网络返回，将路由管理器（暂名）中对应的路由删掉\n     * @param {String} router 路由名\n     */\n    receiveRouterFromServer: function(router) {\n        if (router === 'close all netLoading') {\n            this.routerManager = {};\n            this.checkNetLoadingStatus();\n            return;\n        }\n        var keys = Object.keys(this.routerManager);\n        var index = keys.indexOf(router);\n        if (index > -1) {\n            console.log(router, \"cost\", Date.now() - this.routerManager[router], \"ms\");\n            delete this.routerManager[router];\n\n            // 删除之后要刷新一次 netLoading 的显示\n            this.checkNetLoadingStatus();\n        }\n    },\n    /**\n     * 请客网络回调\n     */\n    clearCallback: function() {\n        if (this.pomelo) this.pomelo.clearCallback();\n    }\n};\n\nnetwork.isConnecting = function() {\n    return this.pomelo.isConnecting();\n};\n\nnetwork.isConnected = function() {\n    return this.pomelo.isOpen();\n};\n\nnetwork.isClosed = function() {\n    return this.pomelo.isClosed();\n};\n\nnetwork.isClosing = function() {\n    return this.pomelo.isClosing();\n};\n\nnetwork.chooseNetworkMode = function() {\n    this.initNetwork();\n    if (this.pomelo) {\n        for (var key in this.netListener) {\n            this.pomelo[\"on\"](key, this.onMessage);\n        }\n    }\n};\n\nnetwork.on = function(msgName, handler) {\n    this.netListener.on(msgName, handler);\n};\n\nnetwork.dispatch = function(msgName, msgContent) {\n    this.netListener.dispatch(msgName, msgContent);\n};\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        playerSprite: {\n            default: null,\n            type: cc.Sprite\n        }\n    },\n    setData: function(userInfo) {\n        this.userInfo = userInfo;\n        this.playerId = userInfo.id ? userInfo.id : userInfo.userId;\n        this.playerSprite.node.active = true;\n        Game.GameManager.userInfoReq(this.playerId);\n    },\n\n    init: function() {\n        this.userInfo = null;\n        this.playerSprite.node.active = false;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    userInfoSet: function(recvMsg) {\n        if (recvMsg.account == this.playerId) {\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    this.playerSprite.spriteFrame = spriteFrame;\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    reset: function() {\n        this.playerIconAnim.node.active = false;\n    },\n\n    onLoad() {\n        this.init();\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        selfNode: cc.Node,\n        rivalNode: cc.Node,\n    },\n\n    onLoad() {\n        Game.PlayerManager = this;\n        this.self = this.selfNode.getComponent(\"player\");\n        this.self.init(GLB.playerUserIds[0]);\n        this.rival = this.rivalNode.getComponent(\"player\");\n        this.rival.init(GLB.playerUserIds[1]);\n    }\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        boomClip:{\n            default: null,\n            url: cc.AudioClip\n        },\n        shield:{\n            default: null,\n            type: cc.Node\n        },\n        boomPrefab:{\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n    init(playerId) {\n        this.playerId = playerId;\n        this.playerPos = cc.p();\n        this.playerPosBk = this.node.getPosition();\n        this.heart = 2;\n        this.bUnmatched = false;\n        this.shield.active = false;\n    },\n    onCollisionEnter: function (other) {\n        var group = cc.game.groupList[other.node.groupIndex];\n        if(group === \"redBullet\"){\n            this.sendHurtMsg();\n        }\n        else if (group === \"greenBullet\" && this.node.name === \"self\"){\n            this.sendHurtMsg();\n        }\n        else if (group === \"blueBullet\" && this.node.name === \"rival\"){\n            this.sendHurtMsg();\n        }\n        if (group === \"diffuseItem\"){\n            this.sendDiffuseItemMsg(other.id);\n            other.getComponent(\"item\").destroyItem();\n            this.unmatchedState(\"twinkle\");\n        }\n        if(group === \"radiationItem\"){\n            this.sendRadintionItemMsg(other.id);\n            other.getComponent(\"item\").destroyItem();\n            this.unmatchedState(\"twinkle\");\n        }\n\n    },\n    hurt() {\n        //伤害接口\n        if (this.bUnmatched){\n            return;\n        }\n        if (Game.GameManager.playerDie) {\n            return;\n        }\n        cc.audioEngine.play(this.boomClip, false, 1);\n        if (this.heart > 0) {\n            this.heart--;\n            if(this.heart === 1){\n                this.unmatchedState(\"damage\");\n            }\n            else if (this.heart <= 0) {\n                Game.GameManager.playerDie = true;\n                var boom = cc.instantiate(this.boomPrefab);\n                boom.parent = this.node;\n                boom.position = cc.v2(0, 0);\n                this.dead();\n            }\n        }\n    },\n\n    dead() {\n        //游戏结束--\n        if (GLB.isRoomOwner) {\n            var msg = {\n                action: GLB.GAME_OVER_EVENT\n            };\n            Game.GameManager.sendEventEx(msg);\n        }\n\n    },\n    unmatchedState(animation){\n      this.bUnmatched = true;\n      this.shield.active = true;\n      this.node.getComponent(cc.Animation).play(animation);\n      this.scheduleOnce(()=>{\n          this.bUnmatched = false;\n          this.shield.active = false;\n          this.node.getComponent(cc.Animation).pause(animation);\n          this.node.opacity = 255;\n      },3);\n\n    },\n    setPlayerPosBk(){\n        this.playerPosBk = this.node.getPosition();\n    },\n    setDirect(position) {\n        //this.playerPos = position;\n        this.node.setPosition(position);\n    },\n    sendHurtMsg() {\n        if (Game.GameManager.gameState === GameState.Play && GLB.isRoomOwner) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.HURT,\n                playerId: this.playerId\n            }));\n        }\n    },\n    sendDiffuseItemMsg(itemId){\n        if (Game.GameManager.gameState === GameState.Play && GLB.isRoomOwner) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.DIFFUSE_ITEM_GET,\n                playerId: this.playerId,\n            }));\n        }\n    },\n    sendRadintionItemMsg(itemId){\n        if (Game.GameManager.gameState === GameState.Play && GLB.isRoomOwner) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.RADINTION_ITEM_GET,\n                playerId: this.playerId,\n            }));\n        }\n    },\n\n});\n","/**\n * 此文件来自于pomelo helloworld lib/build/build.js\n */\n/**\n * hasOwnProperty.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar pomeloBuild = cc.Class({\n    onLoad: function () {\n        /**\n         * Registered modules.\n         */\n\n        this.modules = {};\n\n        /**\n         * Registered aliases.\n         */\n\n        this.aliases = {};\n    },\n\n    requirePomelo: function(path, parent, orig) {\n        var resolved = this.resolve(path);\n\n        // lookup failed\n        if (null === resolved) {\n            orig = orig || path;\n            parent = parent || 'root';\n            var err = new Error('Failed to requirePomelo \"' + orig + '\" from \"' + parent + '\"');\n            err.path = orig;\n            err.parent = parent;\n            err.requirePomelo = true;\n            throw err;\n        }\n\n        var module = this.modules[resolved];\n\n        // perform real requirePomelo()\n        // by invoking the module's\n        // registered function\n        if (!module.exports) {\n            module.exports = {};\n            module.client = module.component = true;\n            module.call(this, module.exports, this.relative(resolved), module);\n        }\n\n        return module.exports;\n    },\n\n    /**\n     * Resolve `path`.\n     *\n     * Lookup:\n     *\n     *   - PATH/index.js\n     *   - PATH.js\n     *   - PATH\n     *\n     * @param {String} path\n     * @return {String} path or null\n     * @api private\n     */\n\n    resolve: function (path) {\n        if (path.charAt(0) === '/') path = path.slice(1);\n        var index = path + '/index.js';\n\n        var paths = [\n            path,\n            path + '.js',\n            path + '.json',\n            path + '/index.js',\n            path + '/index.json'\n        ];\n\n        for (var i = 0; i < paths.length; i++) {\n            var resolvePath = paths[i];\n            if (has.call(this.modules, resolvePath)) return resolvePath;\n        }\n\n        if (has.call(this.aliases, index)) {\n            return this.aliases[index];\n        }\n    },\n\n    /**\n     * Normalize `path` relative to the current path.\n     *\n     * @param {String} curr\n     * @param {String} path\n     * @return {String}\n     * @api private\n     */\n\n    normalize: function (curr, path) {\n        var segs = [];\n\n        if ('.' !== path.charAt(0)) return path;\n\n        curr = curr.split('/');\n        path = path.split('/');\n\n        for (var i = 0; i < path.length; ++i) {\n            if ('..' === path[i]) {\n                curr.pop();\n            } else if ('.' !== path[i] && '' !== path[i]) {\n                segs.push(path[i]);\n            }\n        }\n\n        return curr.concat(segs).join('/');\n    },\n\n    /**\n     * Register module at `path` with callback `definition`.\n     *\n     * @param {String} path\n     * @param {Function} definition\n     * @api private\n     */\n\n    register: function (path, definition) {\n        this.modules[path] = definition;\n    },\n\n    /**\n     * Alias a module definition.\n     *\n     * @param {String} from\n     * @param {String} to\n     * @api private\n     */\n\n    alias: function (from, to) {\n        if (!has.call(this.modules, from)) {\n            throw new Error('Failed to alias \"' + from + '\", it does not exist');\n        }\n        this.aliases[to] = from;\n    },\n\n    /**\n     * Return a requirePomelo function relative to the `parent` path.\n     *\n     * @param {String} parent\n     * @return {Function}\n     * @api private\n     */\n\n    relative: function (parent) {\n        var p = this.normalize(parent, '..');\n\n        /**\n         * lastIndexOf helper.\n         */\n\n        function lastIndexOf(arr, obj) {\n            var i = arr.length;\n            while (i--) {\n                if (arr[i] === obj) return i;\n            }\n            return -1;\n        }\n\n        /**\n         * The relative requirePomelo() itself.\n         */\n\n        var selfPomelo = this;\n        function localrequirePomelo(path) {\n            var resolved = localrequirePomelo.resolve(path);\n            return selfPomelo.requirePomelo(resolved, parent, path);\n        }\n\n        /**\n         * Resolve relative to the parent.\n         */\n\n        localrequirePomelo.resolve = function (path) {\n            var c = path.charAt(0);\n            if ('/' === c) return path.slice(1);\n            if ('.' === c) return selfPomelo.normalize(p, path);\n\n            // resolve deps by returning\n            // the dep in the nearest \"deps\"\n            // directory\n            var segs = parent.split('/');\n            var i = lastIndexOf(segs, 'deps') + 1;\n            if (!i) i = 0;\n            path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n            return path;\n        };\n\n        /**\n         * Check if module is defined at `path`.\n         */\n\n        localrequirePomelo.exists = function (path) {\n            return has.call(selfPomelo.modules, localrequirePomelo.resolve(path));\n        };\n\n        return localrequirePomelo;\n    }\n});\n\npomeloBuild.create = function () {\n    var pomeloBuildObj = new pomeloBuild();\n    pomeloBuildObj.onLoad();\n\n    pomeloBuildObj.register(\"component-indexof/index.js\", function (exports, requirePomelo, module) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n            if (indexOf) return arr.indexOf(obj);\n            for (var i = 0; i < arr.length; ++i) {\n                if (arr[i] === obj) return i;\n            }\n            return -1;\n        };\n    });\n\n    pomeloBuildObj.register(\"component-emitter/index.js\", function (exports, requirePomelo, module) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var index = requirePomelo('indexof');\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n            if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n            for (var key in Emitter.prototype) {\n                obj[key] = Emitter.prototype[key];\n            }\n            return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = function (event, fn) {\n            this._callbacks = this._callbacks || {};\n            (this._callbacks[event] = this._callbacks[event] || [])\n                .push(fn);\n            return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n            var self = this;\n            this._callbacks = this._callbacks || {};\n\n            function on() {\n                self.off(event, on);\n                fn.apply(this, arguments);\n            }\n\n            fn._off = on;\n            this.on(event, on);\n            return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off =\n            Emitter.prototype.removeListener =\n                Emitter.prototype.removeAllListeners = function (event, fn) {\n                    this._callbacks = this._callbacks || {};\n\n                    // all\n                    if (0 === arguments.length) {\n                        this._callbacks = {};\n                        return this;\n                    }\n\n                    // specific event\n                    var callbacks = this._callbacks[event];\n                    if (!callbacks) return this;\n\n                    // remove all handlers\n                    if (1 === arguments.length) {\n                        delete this._callbacks[event];\n                        return this;\n                    }\n\n                    // remove specific handler\n                    var i = index(callbacks, fn._off || fn);\n                    if (~i) callbacks.splice(i, 1);\n                    return this;\n                };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n            this._callbacks = this._callbacks || {};\n            var args = [].slice.call(arguments, 1), callbacks = this._callbacks[event];\n\n            if (callbacks) {\n                callbacks = callbacks.slice(0);\n                for (var i = 0, len = callbacks.length; i < len; ++i) {\n                    callbacks[i].apply(this, args);\n                }\n            }\n\n            return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n            this._callbacks = this._callbacks || {};\n            return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n            return !!this.listeners(event).length;\n        };\n\n    });\n\n    pomeloBuildObj.register(\"NetEase-pomelo-protocol/lib/protocol.js\", function (exports, requirePomelo, module) {\n        (function (exports, ByteArray, global) {\n            var Protocol = exports;\n\n            var PKG_HEAD_BYTES = 4;\n            var MSG_FLAG_BYTES = 1;\n            var MSG_ROUTE_CODE_BYTES = 2;\n            var MSG_ID_MAX_BYTES = 5;\n            var MSG_ROUTE_LEN_BYTES = 1;\n\n            var MSG_ROUTE_CODE_MAX = 0xffff;\n\n            var MSG_COMPRESS_ROUTE_MASK = 0x1;\n            var MSG_TYPE_MASK = 0x7;\n\n            var Package = Protocol.Package = {};\n            var Message = Protocol.Message = {};\n\n            Package.TYPE_HANDSHAKE = 1;\n            Package.TYPE_HANDSHAKE_ACK = 2;\n            Package.TYPE_HEARTBEAT = 3;\n            Package.TYPE_DATA = 4;\n            Package.TYPE_KICK = 5;\n\n            Message.TYPE_REQUEST = 0;\n            Message.TYPE_NOTIFY = 1;\n            Message.TYPE_RESPONSE = 2;\n            Message.TYPE_PUSH = 3;\n\n            /**\n             * pomele client encode\n             * id message id;\n             * route message route\n             * msg message body\n             * socketio current support string\n             */\n            Protocol.strencode = function (str) {\n                var byteArray = new ByteArray(str.length * 3);\n                var offset = 0;\n                for (var i = 0; i < str.length; i++) {\n                    var charCode = str.charCodeAt(i);\n                    var codes = null;\n                    if (charCode <= 0x7f) {\n                        codes = [charCode];\n                    } else if (charCode <= 0x7ff) {\n                        codes = [0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f)];\n                    } else {\n                        codes = [0xe0 | (charCode >> 12), 0x80 | ((charCode & 0xfc0) >> 6), 0x80 | (charCode & 0x3f)];\n                    }\n                    for (var j = 0; j < codes.length; j++) {\n                        byteArray[offset] = codes[j];\n                        ++offset;\n                    }\n                }\n                var _buffer = new ByteArray(offset);\n                copyArray(_buffer, 0, byteArray, 0, offset);\n                return _buffer;\n            };\n\n            /**\n             * client decode\n             * msg String data\n             * return Message Object\n             */\n            Protocol.strdecode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var array = [];\n                var offset = 0;\n                var charCode = 0;\n                var end = bytes.length;\n                while (offset < end) {\n                    if (bytes[offset] < 128) {\n                        charCode = bytes[offset];\n                        offset += 1;\n                    } else if (bytes[offset] < 224) {\n                        charCode = ((bytes[offset] & 0x3f) << 6) + (bytes[offset + 1] & 0x3f);\n                        offset += 2;\n                    } else {\n                        charCode = ((bytes[offset] & 0x0f) << 12) + ((bytes[offset + 1] & 0x3f) << 6) + (bytes[offset + 2] & 0x3f);\n                        offset += 3;\n                    }\n                    array.push(charCode);\n                }\n                var res = '';\n                var chunk = 8 * 1024;\n                var i;\n                for (i = 0; i < array.length / chunk; i++) {\n                    res += String.fromCharCode.apply(null, array.slice(i * chunk, (i + 1) * chunk));\n                }\n                res += String.fromCharCode.apply(null, array.slice(i * chunk));\n                return res;\n            };\n\n            /**\n             * Package protocol encode.\n             *\n             * Pomelo package format:\n             * +------+-------------+------------------+\n             * | type | body length |       body       |\n             * +------+-------------+------------------+\n             *\n             * Head: 4bytes\n             *   0: package type,\n             *      1 - handshake,\n             *      2 - handshake ack,\n             *      3 - heartbeat,\n             *      4 - data\n             *      5 - kick\n             *   1 - 3: big-endian body length\n             * Body: body length bytes\n             *\n             * @param  {Number}    type   package type\n             * @param  {ByteArray} body   body content in bytes\n             * @return {ByteArray}        new byte array that contains encode result\n             */\n            Package.encode = function (type, body) {\n                var length = body ? body.length : 0;\n                var buffer = new ByteArray(PKG_HEAD_BYTES + length);\n                var index = 0;\n                buffer[index++] = type & 0xff;\n                buffer[index++] = (length >> 16) & 0xff;\n                buffer[index++] = (length >> 8) & 0xff;\n                buffer[index++] = length & 0xff;\n                if (body) {\n                    copyArray(buffer, index, body, 0, length);\n                }\n                return buffer;\n            };\n\n            /**\n             * Package protocol decode.\n             * See encode for package format.\n             *\n             * @param  {ByteArray} buffer byte array containing package content\n             * @return {Object}           {type: package type, buffer: body byte array}\n             */\n            Package.decode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var type = bytes[0];\n                var index = 1;\n                var length = ((bytes[index++]) << 16 | (bytes[index++]) << 8 | bytes[index++]) >>> 0;\n                var body = length ? new ByteArray(length) : null;\n                copyArray(body, 0, bytes, PKG_HEAD_BYTES, length);\n                return {'type': type, 'body': body};\n            };\n\n            /**\n             * Message protocol encode.\n             *\n             * @param  {Number} id            message id\n             * @param  {Number} type          message type\n             * @param  {Number} compressRoute whether compress route\n             * @param  {Number|String} route  route code or route string\n             * @param  {Buffer} msg           message body bytes\n             * @return {Buffer}               encode result\n             */\n            Message.encode = function (id, type, compressRoute, route, msg) {\n                // caculate message max length\n                var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;\n                var msgLen = MSG_FLAG_BYTES + idBytes;\n\n                if (msgHasRoute(type)) {\n                    if (compressRoute) {\n                        if (typeof route !== 'number') {\n                            throw new Error('error flag for number route!');\n                        }\n                        msgLen += MSG_ROUTE_CODE_BYTES;\n                    } else {\n                        msgLen += MSG_ROUTE_LEN_BYTES;\n                        if (route) {\n                            route = Protocol.strencode(route);\n                            if (route.length > 255) {\n                                throw new Error('route maxlength is overflow');\n                            }\n                            msgLen += route.length;\n                        }\n                    }\n                }\n\n                if (msg) {\n                    msgLen += msg.length;\n                }\n\n                var buffer = new ByteArray(msgLen);\n                var offset = 0;\n\n                // add flag\n                offset = encodeMsgFlag(type, compressRoute, buffer, offset);\n\n                // add message id\n                if (msgHasId(type)) {\n                    offset = encodeMsgId(id, idBytes, buffer, offset);\n                }\n\n                // add route\n                if (msgHasRoute(type)) {\n                    offset = encodeMsgRoute(compressRoute, route, buffer, offset);\n                }\n\n                // add body\n                if (msg) {\n                    offset = encodeMsgBody(msg, buffer, offset);\n                }\n\n                return buffer;\n            };\n\n            /**\n             * Message protocol decode.\n             *\n             * @param  {Buffer|Uint8Array} buffer message bytes\n             * @return {Object}            message object\n             */\n            Message.decode = function (buffer) {\n                var bytes = new ByteArray(buffer);\n                var bytesLen = bytes.length || bytes.byteLength;\n                var offset = 0;\n                var id = 0;\n                var route = null;\n\n                // parse flag\n                var flag = bytes[offset++];\n                var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;\n                var type = (flag >> 1) & MSG_TYPE_MASK;\n\n                // parse id\n                if (msgHasId(type)) {\n                    var byte = bytes[offset++];\n                    id = byte & 0x7f;\n                    while (byte & 0x80) {\n                        id <<= 7;\n                        byte = bytes[offset++];\n                        id |= byte & 0x7f;\n                    }\n                }\n\n                // parse route\n                if (msgHasRoute(type)) {\n                    if (compressRoute) {\n                        route = (bytes[offset++]) << 8 | bytes[offset++];\n                    } else {\n                        var routeLen = bytes[offset++];\n                        if (routeLen) {\n                            route = new ByteArray(routeLen);\n                            copyArray(route, 0, bytes, offset, routeLen);\n                            route = Protocol.strdecode(route);\n                        } else {\n                            route = '';\n                        }\n                        offset += routeLen;\n                    }\n                }\n\n                // parse body\n                var bodyLen = bytesLen - offset;\n                var body = new ByteArray(bodyLen);\n\n                copyArray(body, 0, bytes, offset, bodyLen);\n\n                return {\n                    'id': id, 'type': type, 'compressRoute': compressRoute,\n                    'route': route, 'body': body\n                };\n            };\n\n            var copyArray = function (dest, doffset, src, soffset, length) {\n                if ('function' === typeof src.copy) {\n                    // Buffer\n                    src.copy(dest, doffset, soffset, soffset + length);\n                } else {\n                    // Uint8Array\n                    for (var index = 0; index < length; index++) {\n                        dest[doffset++] = src[soffset++];\n                    }\n                }\n            };\n\n            var msgHasId = function (type) {\n                return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;\n            };\n\n            var msgHasRoute = function (type) {\n                return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY ||\n                    type === Message.TYPE_PUSH;\n            };\n\n            var caculateMsgIdBytes = function (id) {\n                var len = 0;\n                do {\n                    len += 1;\n                    id >>= 7;\n                } while (id > 0);\n                return len;\n            };\n\n            var encodeMsgFlag = function (type, compressRoute, buffer, offset) {\n                if (type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY &&\n                    type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) {\n                    throw new Error('unkonw message type: ' + type);\n                }\n\n                buffer[offset] = (type << 1) | (compressRoute ? 1 : 0);\n\n                return offset + MSG_FLAG_BYTES;\n            };\n\n            var encodeMsgId = function (id, idBytes, buffer, offset) {\n                var index = offset + idBytes - 1;\n                buffer[index--] = id & 0x7f;\n                while (index >= offset) {\n                    id >>= 7;\n                    buffer[index--] = id & 0x7f | 0x80;\n                }\n                return offset + idBytes;\n            };\n\n            var encodeMsgRoute = function (compressRoute, route, buffer, offset) {\n                if (compressRoute) {\n                    if (route > MSG_ROUTE_CODE_MAX) {\n                        throw new Error('route number is overflow');\n                    }\n\n                    buffer[offset++] = (route >> 8) & 0xff;\n                    buffer[offset++] = route & 0xff;\n                } else {\n                    if (route) {\n                        buffer[offset++] = route.length & 0xff;\n                        copyArray(buffer, offset, route, 0, route.length);\n                        offset += route.length;\n                    } else {\n                        buffer[offset++] = 0;\n                    }\n                }\n\n                return offset;\n            };\n\n            var encodeMsgBody = function (msg, buffer, offset) {\n                copyArray(buffer, offset, msg, 0, msg.length);\n                return offset + msg.length;\n            };\n\n            module.exports = Protocol;\n        })('object' === typeof module ? module.exports : (this.Protocol = {}), 'object' === typeof module ? Buffer : Uint8Array, this);\n\n    });\n\n    pomeloBuildObj.register(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", function (exports, requirePomelo, module) {\n        /* ProtocolBuffer client 0.1.0*/\n\n        /**\n         * pomelo-protobuf\n         * @author <zhang0935@gmail.com>\n         */\n\n        /**\n         * Protocol buffer root\n         * In browser, it will be window.protbuf\n         */\n        (function (exports, global) {\n            var Protobuf = exports;\n\n            Protobuf.init = function (opts) {\n                //On the serverside, use serverProtos to encode messages send to client\n                Protobuf.encoder.init(opts.encoderProtos);\n\n                //On the serverside, user clientProtos to decode messages receive from clients\n                Protobuf.decoder.init(opts.decoderProtos);\n            };\n\n            Protobuf.encode = function (key, msg) {\n                return Protobuf.encoder.encode(key, msg);\n            };\n\n            Protobuf.decode = function (key, msg) {\n                return Protobuf.decoder.decode(key, msg);\n            };\n\n            // exports to support for components\n            module.exports = Protobuf;\n        })('object' === typeof module ? module.exports : (this.protobuf = {}), this);\n\n        /**\n         * constants\n         */\n        (function (exports, global) {\n            var constants = exports.constants = {};\n\n            constants.TYPES = {\n                uInt32: 0,\n                sInt32: 0,\n                int32: 0,\n                double: 1,\n                string: 2,\n                message: 2,\n                float: 5\n            };\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * util module\n         */\n        (function (exports, global) {\n\n            var Util = exports.util = {};\n\n            Util.isSimpleType = function (type) {\n                return ( type === 'uInt32' ||\n                type === 'sInt32' ||\n                type === 'int32' ||\n                type === 'uInt64' ||\n                type === 'sInt64' ||\n                type === 'float' ||\n                type === 'double' );\n            };\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * codec module\n         */\n        (function (exports, global) {\n\n            var Codec = exports.codec = {};\n\n            var buffer = new ArrayBuffer(8);\n            var float32Array = new Float32Array(buffer);\n            var float64Array = new Float64Array(buffer);\n            var uInt8Array = new Uint8Array(buffer);\n\n            Codec.encodeUInt32 = function (n) {\n                var n = parseInt(n);\n                if (isNaN(n) || n < 0) {\n                    return null;\n                }\n\n                var result = [];\n                do {\n                    var tmp = n % 128;\n                    var next = Math.floor(n / 128);\n\n                    if (next !== 0) {\n                        tmp = tmp + 128;\n                    }\n                    result.push(tmp);\n                    n = next;\n                } while (n !== 0);\n\n                return result;\n            };\n\n            Codec.encodeSInt32 = function (n) {\n                var n = parseInt(n);\n                if (isNaN(n)) {\n                    return null;\n                }\n                n = n < 0 ? (Math.abs(n) * 2 - 1) : n * 2;\n\n                return Codec.encodeUInt32(n);\n            };\n\n            Codec.decodeUInt32 = function (bytes) {\n                var n = 0;\n\n                for (var i = 0; i < bytes.length; i++) {\n                    var m = parseInt(bytes[i]);\n                    n = n + ((m & 0x7f) * Math.pow(2, (7 * i)));\n                    if (m < 128) {\n                        return n;\n                    }\n                }\n\n                return n;\n            };\n\n\n            Codec.decodeSInt32 = function (bytes) {\n                var n = this.decodeUInt32(bytes);\n                var flag = ((n % 2) === 1) ? -1 : 1;\n\n                n = ((n % 2 + n) / 2) * flag;\n\n                return n;\n            };\n\n            Codec.encodeFloat = function (float) {\n                float32Array[0] = float;\n                return uInt8Array;\n            };\n\n            Codec.decodeFloat = function (bytes, offset) {\n                if (!bytes || bytes.length < (offset + 4)) {\n                    return null;\n                }\n\n                for (var i = 0; i < 4; i++) {\n                    uInt8Array[i] = bytes[offset + i];\n                }\n\n                return float32Array[0];\n            };\n\n            Codec.encodeDouble = function (double) {\n                float64Array[0] = double;\n                return uInt8Array.subarray(0, 8);\n            };\n\n            Codec.decodeDouble = function (bytes, offset) {\n                if (!bytes || bytes.length < (8 + offset)) {\n                    return null;\n                }\n\n                for (var i = 0; i < 8; i++) {\n                    uInt8Array[i] = bytes[offset + i];\n                }\n\n                return float64Array[0];\n            };\n\n            Codec.encodeStr = function (bytes, offset, str) {\n                for (var i = 0; i < str.length; i++) {\n                    var code = str.charCodeAt(i);\n                    var codes = encode2UTF8(code);\n\n                    for (var j = 0; j < codes.length; j++) {\n                        bytes[offset] = codes[j];\n                        offset++;\n                    }\n                }\n\n                return offset;\n            };\n\n            /**\n             * Decode string from utf8 bytes\n             */\n            Codec.decodeStr = function (bytes, offset, length) {\n                var array = [];\n                var end = offset + length;\n\n                while (offset < end) {\n                    var code = 0;\n\n                    if (bytes[offset] < 128) {\n                        code = bytes[offset];\n\n                        offset += 1;\n                    } else if (bytes[offset] < 224) {\n                        code = ((bytes[offset] & 0x3f) << 6) + (bytes[offset + 1] & 0x3f);\n                        offset += 2;\n                    } else {\n                        code = ((bytes[offset] & 0x0f) << 12) + ((bytes[offset + 1] & 0x3f) << 6) + (bytes[offset + 2] & 0x3f);\n                        offset += 3;\n                    }\n\n                    array.push(code);\n\n                }\n\n                var str = '';\n                for (var i = 0; i < array.length;) {\n                    str += String.fromCharCode.apply(null, array.slice(i, i + 10000));\n                    i += 10000;\n                }\n\n                return str;\n            };\n\n            /**\n             * Return the byte length of the str use utf8\n             */\n            Codec.byteLength = function (str) {\n                if (typeof(str) !== 'string') {\n                    return -1;\n                }\n\n                var length = 0;\n\n                for (var i = 0; i < str.length; i++) {\n                    var code = str.charCodeAt(i);\n                    length += codeLength(code);\n                }\n\n                return length;\n            };\n\n            /**\n             * Encode a unicode16 char code to utf8 bytes\n             */\n            function encode2UTF8(charCode) {\n                if (charCode <= 0x7f) {\n                    return [charCode];\n                } else if (charCode <= 0x7ff) {\n                    return [0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f)];\n                } else {\n                    return [0xe0 | (charCode >> 12), 0x80 | ((charCode & 0xfc0) >> 6), 0x80 | (charCode & 0x3f)];\n                }\n            }\n\n            function codeLength(code) {\n                if (code <= 0x7f) {\n                    return 1;\n                } else if (code <= 0x7ff) {\n                    return 2;\n                } else {\n                    return 3;\n                }\n            }\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * encoder module\n         */\n        (function (exports, global) {\n\n            var protobuf = exports;\n            var MsgEncoder = exports.encoder = {};\n\n            var codec = protobuf.codec;\n            var constant = protobuf.constants;\n            var util = protobuf.util;\n\n            MsgEncoder.init = function (protos) {\n                this.protos = protos || {};\n            };\n\n            MsgEncoder.encode = function (route, msg) {\n                //Get protos from protos map use the route as key\n                var protos = this.protos[route];\n\n                //Check msg\n                if (!checkMsg(msg, protos)) {\n                    return null;\n                }\n\n                //Set the length of the buffer 2 times bigger to prevent overflow\n                var length = codec.byteLength(JSON.stringify(msg));\n\n                //Init buffer and offset\n                var buffer = new ArrayBuffer(length);\n                var uInt8Array = new Uint8Array(buffer);\n                var offset = 0;\n\n                if (!!protos) {\n                    offset = encodeMsg(uInt8Array, offset, protos, msg);\n                    if (offset > 0) {\n                        return uInt8Array.subarray(0, offset);\n                    }\n                }\n\n                return null;\n            };\n\n            /**\n             * Check if the msg follow the defination in the protos\n             */\n            function checkMsg(msg, protos) {\n                if (!protos) {\n                    return false;\n                }\n\n                for (var name in protos) {\n                    var proto = protos[name];\n\n                    //All required element must exist\n                    switch (proto.option) {\n                        case 'required' :\n                            if (typeof(msg[name]) === 'undefined') {\n                                return false;\n                            }\n                        case 'optional' :\n                            if (typeof(msg[name]) !== 'undefined') {\n                                var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\n                                if (!!message) {\n                                    checkMsg(msg[name], message);\n                                }\n                            }\n                            break;\n                        case 'repeated' :\n                            //Check nest message in repeated elements\n                            var message = protos.__messages[proto.type] || MsgEncoder.protos['message ' + proto.type];\n                            if (!!msg[name] && !!message) {\n                                for (var i = 0; i < msg[name].length; i++) {\n                                    if (!checkMsg(msg[name][i], message)) {\n                                        return false;\n                                    }\n                                }\n                            }\n                            break;\n                    }\n                }\n\n                return true;\n            }\n\n            function encodeMsg(buffer, offset, protos, msg) {\n                for (var name in msg) {\n                    if (!!protos[name]) {\n                        var proto = protos[name];\n\n                        switch (proto.option) {\n                            case 'required' :\n                            case 'optional' :\n                                offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                                offset = encodeProp(msg[name], proto.type, offset, buffer, protos);\n                                break;\n                            case 'repeated' :\n                                if (msg[name].length > 0) {\n                                    offset = encodeArray(msg[name], proto, offset, buffer, protos);\n                                }\n                                break;\n                        }\n                    }\n                }\n\n                return offset;\n            }\n\n            function encodeProp(value, type, offset, buffer, protos) {\n                switch (type) {\n                    case 'uInt32':\n                        offset = writeBytes(buffer, offset, codec.encodeUInt32(value));\n                        break;\n                    case 'int32' :\n                    case 'sInt32':\n                        offset = writeBytes(buffer, offset, codec.encodeSInt32(value));\n                        break;\n                    case 'float':\n                        writeBytes(buffer, offset, codec.encodeFloat(value));\n                        offset += 4;\n                        break;\n                    case 'double':\n                        writeBytes(buffer, offset, codec.encodeDouble(value));\n                        offset += 8;\n                        break;\n                    case 'string':\n                        var length = codec.byteLength(value);\n\n                        //Encode length\n                        offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\n                        //write string\n                        codec.encodeStr(buffer, offset, value);\n                        offset += length;\n                        break;\n                    default :\n                        var message = protos.__messages[type] || MsgEncoder.protos['message ' + type];\n                        if (!!message) {\n                            //Use a tmp buffer to build an internal msg\n                            var tmpBuffer = new ArrayBuffer(codec.byteLength(JSON.stringify(value)));\n                            var length = 0;\n\n                            length = encodeMsg(tmpBuffer, length, message, value);\n                            //Encode length\n                            offset = writeBytes(buffer, offset, codec.encodeUInt32(length));\n                            //contact the object\n                            for (var i = 0; i < length; i++) {\n                                buffer[offset] = tmpBuffer[i];\n                                offset++;\n                            }\n                        }\n                        break;\n                }\n\n                return offset;\n            }\n\n            /**\n             * Encode reapeated properties, simple msg and object are decode differented\n             */\n            function encodeArray(array, proto, offset, buffer, protos) {\n                var i = 0;\n\n                if (util.isSimpleType(proto.type)) {\n                    offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                    offset = writeBytes(buffer, offset, codec.encodeUInt32(array.length));\n                    for (i = 0; i < array.length; i++) {\n                        offset = encodeProp(array[i], proto.type, offset, buffer);\n                    }\n                } else {\n                    for (i = 0; i < array.length; i++) {\n                        offset = writeBytes(buffer, offset, encodeTag(proto.type, proto.tag));\n                        offset = encodeProp(array[i], proto.type, offset, buffer, protos);\n                    }\n                }\n\n                return offset;\n            }\n\n            function writeBytes(buffer, offset, bytes) {\n                for (var i = 0; i < bytes.length; i++, offset++) {\n                    buffer[offset] = bytes[i];\n                }\n\n                return offset;\n            }\n\n            function encodeTag(type, tag) {\n                var value = constant.TYPES[type] || 2;\n                return codec.encodeUInt32((tag << 3) | value);\n            }\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n        /**\n         * decoder module\n         */\n        (function (exports, global) {\n            var protobuf = exports;\n            var MsgDecoder = exports.decoder = {};\n\n            var codec = protobuf.codec;\n            var util = protobuf.util;\n\n            var buffer;\n            var offset = 0;\n\n            MsgDecoder.init = function (protos) {\n                this.protos = protos || {};\n            };\n\n            MsgDecoder.setProtos = function (protos) {\n                if (!!protos) {\n                    this.protos = protos;\n                }\n            };\n\n            MsgDecoder.decode = function (route, buf) {\n                var protos = this.protos[route];\n\n                buffer = buf;\n                offset = 0;\n\n                if (!!protos) {\n                    return decodeMsg({}, protos, buffer.length);\n                }\n\n                return null;\n            };\n\n            function decodeMsg(msg, protos, length) {\n                while (offset < length) {\n                    var head = getHead();\n                    var type = head.type;\n                    var tag = head.tag;\n                    var name = protos.__tags[tag];\n\n                    switch (protos[name].option) {\n                        case 'optional' :\n                        case 'required' :\n                            msg[name] = decodeProp(protos[name].type, protos);\n                            break;\n                        case 'repeated' :\n                            if (!msg[name]) {\n                                msg[name] = [];\n                            }\n                            decodeArray(msg[name], protos[name].type, protos);\n                            break;\n                    }\n                }\n\n                return msg;\n            }\n\n            /**\n             * Test if the given msg is finished\n             */\n            function isFinish(msg, protos) {\n                return (!protos.__tags[peekHead().tag]);\n            }\n\n            /**\n             * Get property head from protobuf\n             */\n            function getHead() {\n                var tag = codec.decodeUInt32(getBytes());\n\n                return {\n                    type: tag & 0x7,\n                    tag: tag >> 3\n                };\n            }\n\n            /**\n             * Get tag head without move the offset\n             */\n            function peekHead() {\n                var tag = codec.decodeUInt32(peekBytes());\n\n                return {\n                    type: tag & 0x7,\n                    tag: tag >> 3\n                };\n            }\n\n            function decodeProp(type, protos) {\n                switch (type) {\n                    case 'uInt32':\n                        return codec.decodeUInt32(getBytes());\n                    case 'int32' :\n                    case 'sInt32' :\n                        return codec.decodeSInt32(getBytes());\n                    case 'float' :\n                        var float = codec.decodeFloat(buffer, offset);\n                        offset += 4;\n                        return float;\n                    case 'double' :\n                        var double = codec.decodeDouble(buffer, offset);\n                        offset += 8;\n                        return double;\n                    case 'string' :\n                        var length = codec.decodeUInt32(getBytes());\n\n                        var str = codec.decodeStr(buffer, offset, length);\n                        offset += length;\n\n                        return str;\n                    default :\n                        var message = protos.__messages[type] || MsgDecoder.protos['message ' + type];\n                        if (!!protos && !!message) {\n                            var length = codec.decodeUInt32(getBytes());\n                            var msg = {};\n                            decodeMsg(msg, message, offset + length);\n                            return msg;\n                        }\n                        break;\n                }\n            }\n\n            function decodeArray(array, type, protos) {\n                if (util.isSimpleType(type)) {\n                    var length = codec.decodeUInt32(getBytes());\n\n                    for (var i = 0; i < length; i++) {\n                        array.push(decodeProp(type));\n                    }\n                } else {\n                    array.push(decodeProp(type, protos));\n                }\n            }\n\n            function getBytes(flag) {\n                var bytes = [];\n                var pos = offset;\n                flag = flag || false;\n\n                var b;\n\n                do {\n                    b = buffer[pos];\n                    bytes.push(b);\n                    pos++;\n                } while (b >= 128);\n\n                if (!flag) {\n                    offset = pos;\n                }\n                return bytes;\n            }\n\n            function peekBytes() {\n                return getBytes(true);\n            }\n\n        })('undefined' !== typeof protobuf ? protobuf : module.exports, this);\n\n\n    });\n\n    pomeloBuildObj.register(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", function (exports, requirePomelo, module) {\n        (function (self) {\n            var JS_WS_CLIENT_TYPE = 'js-websocket';\n            var JS_WS_CLIENT_VERSION = '0.0.1';\n\n            var Protocol = self.Protocol;\n            var Package = Protocol.Package;\n            var Message = Protocol.Message;\n            var EventEmitter = self.EventEmitter;\n            var protobuf = self.protobuf;\n\n            var RES_OK = 200;\n            var RES_FAIL = 500;\n            var RES_OLD_CLIENT = 501;\n\n            if (typeof Object.create !== 'function') {\n                Object.create = function (o) {\n                    function F() {\n                    }\n\n                    F.prototype = o;\n                    return new F();\n                };\n            }\n\n            var root = window;\n            var pomelo = Object.create(EventEmitter.prototype); // object extend from object\n            root.pomelo = pomelo;\n            var socket = null;\n            var reqId = 0;\n            var callbacks = {};\n            var handlers = {};\n            //Map from request id to route\n            var routeMap = {};\n\n            var heartbeatInterval = 0;\n            var heartbeatTimeout = 0;\n            var nextHeartbeatTimeout = 0;\n            var gapThreshold = 100;   // heartbeat gap threashold\n            var heartbeatId = null;\n            var heartbeatTimeoutId = null;\n\n            var handshakeCallback = null;\n\n            var handshakeBuffer = {\n                'sys': {\n                    type: JS_WS_CLIENT_TYPE,\n                    version: JS_WS_CLIENT_VERSION\n                },\n                'user': {}\n            };\n\n            var initCallback = null;\n\n            pomelo.init = function (params, cb) {\n                initCallback = cb;\n                var host = params.host;\n                var port = params.port;\n\n                var wsStr = \"ws://\";\n\n                if (params.wsStr) {\n                    wsStr = params.wsStr;\n                }\n\n                var url = wsStr + host;\n                if (port) {\n                    url += ':' + port;\n                }\n\n                handshakeBuffer.user = params.user;\n                handshakeCallback = params.handshakeCallback;\n                initWebSocket(url, cb);\n            };\n\n            var initWebSocket = function (url, cb) {\n                console.log('connect to ' + url);\n                var onopen = function (event) {\n                    var obj = Package.encode(Package.TYPE_HANDSHAKE, Protocol.strencode(JSON.stringify(handshakeBuffer)));\n                    send(obj);\n                };\n                var onmessage = function (event) {\n                    processPackage(Package.decode(event.data), cb);\n                    // new package arrived, update the heartbeat timeout\n                    if (heartbeatTimeout) {\n                        nextHeartbeatTimeout = Date.now() + heartbeatTimeout;\n                    }\n                };\n                var onerror = function (event) {\n                    pomelo.emit('io-error', event);\n                    console.error('socket error: ', JSON.stringify(event));\n                };\n                var onclose = function (event) {\n                    pomelo.emit('close', event);\n                    console.error('socket close: ', JSON.stringify(event));\n                    // //尝试修复断线后继续发心跳包后报错\n                    // if (heartbeatId) {\n                    //     clearTimeout(heartbeatId);\n                    //     heartbeatId = null;\n                    // }\n                    //\n                    // if (heartbeatTimeoutId) {\n                    //     clearTimeout(heartbeatTimeoutId);\n                    //     heartbeatTimeoutId = null;\n                    // }\n                };\n                socket = new WebSocket(url);\n                socket.binaryType = 'arraybuffer';\n                socket.onopen = onopen;\n                socket.onmessage = onmessage;\n                socket.onerror = onerror;\n                socket.onclose = onclose;\n            };\n\n            pomelo.disconnect = function () {\n                if (socket) {\n                    if (socket.disconnect) socket.disconnect();\n                    if (socket.close) socket.close();\n                    console.log('disconnect');\n                    socket = null;\n                }\n\n                if (heartbeatId) {\n                    clearTimeout(heartbeatId);\n                    heartbeatId = null;\n                }\n                if (heartbeatTimeoutId) {\n                    clearTimeout(heartbeatTimeoutId);\n                    heartbeatTimeoutId = null;\n                }\n            };\n\n            pomelo.request = function (route, msg, cb) {\n                if (arguments.length === 2 && typeof msg === 'function') {\n                    cb = msg;\n                    msg = {};\n                } else {\n                    msg = msg || {};\n                }\n                route = route || msg.route;\n                if (!route) {\n                    return;\n                }\n\n                reqId++;\n                /**\n                 * 128及其倍数的reqId会导致服务端编解码出现异常,128及其倍数是个坑。绕过。\n                 * //pomelo-protocol.js#243\n                 *  do{\n                        m = parseInt(bytes[offset]);\n                        id += (m & 0x7f) << (7 * i);   //这个风骚的位移有bug\n                        offset++;\n                        i++;\n                    }while(m >= 128); \n                 * \n                 */\n                if (reqId % 128 == 0){\n                    reqId++;\n                }\n\n                sendMessage(reqId, route, msg);\n\n                callbacks[reqId] = cb;\n                routeMap[reqId] = route;\n            };\n\n            pomelo.notify = function (route, msg) {\n                msg = msg || {};\n                sendMessage(0, route, msg);\n            };\n\n            pomelo.clearCallback = function () {\n                if(!socket) return;\n                socket.onopen = null;\n                socket.onmessage = null;\n                socket.onerror = null;\n                socket.onclose = null;\n            };\n\n            pomelo.isConnecting = function () {\n                return (socket && socket.readyState === WebSocket.CONNECTING);\n            };\n\n            pomelo.isOpen = function () {\n                return (socket && socket.readyState === WebSocket.OPEN);\n            };\n\n            pomelo.isClosed = function () {\n                return (socket && socket.readyState === WebSocket.CLOSED);\n            };\n\n            pomelo.isClosing = function () {\n                return (socket && socket.readyState === WebSocket.CLOSING);\n            };\n\n            var sendMessage = function (reqId, route, msg) {\n                var type = reqId ? Message.TYPE_REQUEST : Message.TYPE_NOTIFY;\n\n                //compress message by protobuf\n                var protos = !!pomelo.data.protos ? pomelo.data.protos.client : {};\n                if (!!protos[route]) {\n                    msg = protobuf.encode(route, msg);\n                } else {\n                    msg = Protocol.strencode(JSON.stringify(msg));\n                }\n\n\n                var compressRoute = 0;\n                if (pomelo.dict && pomelo.dict[route]) {\n                    route = pomelo.dict[route];\n                    compressRoute = 1;\n                }\n\n                msg = Message.encode(reqId, type, compressRoute, route, msg);\n                var packet = Package.encode(Package.TYPE_DATA, msg);\n                send(packet);\n            };\n\n            var send = function (packet) {\n                if (socket) {\n                    socket.send(packet.buffer);\n                }\n            };\n\n\n            var handler = {};\n\n            var heartbeat = function (data) {\n                if (!heartbeatInterval) {\n                    // no heartbeat\n                    return;\n                }\n\n                pomelo.emit('heartbeat recv');\n\n                var obj = Package.encode(Package.TYPE_HEARTBEAT);\n                if (heartbeatTimeoutId) {\n                    clearTimeout(heartbeatTimeoutId);\n                    heartbeatTimeoutId = null;\n                }\n\n                if (heartbeatId) {\n                    // already in a heartbeat interval\n                    return;\n                }\n\n                heartbeatId = setTimeout(function () {\n                    heartbeatId = null;\n                    send(obj);\n\n                    nextHeartbeatTimeout = Date.now() + heartbeatTimeout;\n                    heartbeatTimeoutId = setTimeout(heartbeatTimeoutCb, heartbeatTimeout);\n                }, heartbeatInterval);\n            };\n\n            var heartbeatTimeoutCb = function () {\n                var gap = nextHeartbeatTimeout - Date.now();\n                if (gap > gapThreshold) {\n                    heartbeatTimeoutId = setTimeout(heartbeatTimeoutCb, gap);\n                } else {\n                    console.error('server heartbeat timeout');\n                    pomelo.emit('heartbeat timeout');\n                    pomelo.disconnect();\n                }\n            };\n\n            var handshake = function (data) {\n                data = JSON.parse(Protocol.strdecode(data));\n                if (data.code === RES_OLD_CLIENT) {\n                    pomelo.emit('error', 'client version not fullfill');\n                    return;\n                }\n\n                if (data.code !== RES_OK) {\n                    pomelo.emit('error', 'handshake fail');\n                    return;\n                }\n\n                handshakeInit(data);\n\n                var obj = Package.encode(Package.TYPE_HANDSHAKE_ACK);\n                send(obj);\n                if (initCallback) {\n                    initCallback(socket);\n                    initCallback = null;\n                }\n            };\n\n            var onData = function (data) {\n                //probuff decode\n                var msg = Message.decode(data);\n\n                if (msg.id > 0) {\n                    msg.route = routeMap[msg.id];\n                    delete routeMap[msg.id];\n                    if (!msg.route) {\n                        return;\n                    }\n                }\n\n                msg.body = deCompose(msg);\n\n                processMessage(pomelo, msg);\n            };\n\n            var onKick = function (data) {\n                var info = JSON.parse(Protocol.strdecode(data));\n\n                var reason = \"kick\";\n                if (info.hasOwnProperty(\"reason\")) {\n                    reason = info[\"reason\"];\n                }\n\n                pomelo.emit('onKick', reason);\n            };\n\n            handlers[Package.TYPE_HANDSHAKE] = handshake;\n            handlers[Package.TYPE_HEARTBEAT] = heartbeat;\n            handlers[Package.TYPE_DATA] = onData;\n            handlers[Package.TYPE_KICK] = onKick;\n\n            var processPackage = function (msg) {\n                handlers[msg.type](msg.body);\n            };\n\n            var processMessage = function (pomelo, msg) {\n                if (!msg.id) {\n                    // server push message\n                    pomelo.emit(msg.route, msg);\n                    return;\n                }\n\n                //if have a id then find the callback function with the request\n                var cb = callbacks[msg.id];\n\n                delete callbacks[msg.id];\n                if (typeof cb !== 'function') {\n                    return;\n                }\n\n                cb(msg);\n                return;\n            };\n\n            var processMessageBatch = function (pomelo, msgs) {\n                for (var i = 0, l = msgs.length; i < l; i++) {\n                    processMessage(pomelo, msgs[i]);\n                }\n            };\n\n            var deCompose = function (msg) {\n                var protos = !!pomelo.data.protos ? pomelo.data.protos.server : {};\n                var abbrs = pomelo.data.abbrs;\n                var route = msg.route;\n\n                //Decompose route from dict\n                if (msg.compressRoute) {\n                    if (!abbrs[route]) {\n                        return {};\n                    }\n\n                    route = msg.route = abbrs[route];\n                }\n                if (!!protos[route]) {\n                    return protobuf.decode(route, msg.body);\n                } else {\n                    return JSON.parse(Protocol.strdecode(msg.body));\n                }\n\n                return msg;\n            };\n\n            var handshakeInit = function (data) {\n                if (data.sys && data.sys.heartbeat) {\n                    heartbeatInterval = data.sys.heartbeat * 1000;   // heartbeat interval\n                    heartbeatTimeout = heartbeatInterval * 2;        // max heartbeat timeout\n                } else {\n                    heartbeatInterval = 0;\n                    heartbeatTimeout = 0;\n                }\n\n                initData(data);\n\n                if (typeof handshakeCallback === 'function') {\n                    handshakeCallback(data.user);\n                }\n            };\n\n            //Initilize data used in pomelo client\n            var initData = function (data) {\n                if (!data || !data.sys) {\n                    return;\n                }\n                pomelo.data = pomelo.data || {};\n                var dict = data.sys.dict;\n                var protos = data.sys.protos;\n\n                //Init compress dict\n                if (dict) {\n                    pomelo.data.dict = dict;\n                    pomelo.data.abbrs = {};\n\n                    for (var route in dict) {\n                        pomelo.data.abbrs[dict[route]] = route;\n                    }\n                }\n\n                //Init protobuf protos\n                if (protos) {\n                    pomelo.data.protos = {\n                        server: protos.server || {},\n                        client: protos.client || {}\n                    };\n                    if (!!protobuf) {\n                        protobuf.init({encoderProtos: protos.client, decoderProtos: protos.server});\n                    }\n                }\n            };\n\n            module.exports = pomelo;\n        })(this);\n\n    });\n\n    pomeloBuildObj.register(\"boot/index.js\", function (exports, requirePomelo, module) {\n        var Emitter = requirePomelo('emitter');\n        this.EventEmitter = Object.create(Emitter);\n\n        var protocol = requirePomelo('pomelo-protocol');\n        this.Protocol = protocol;\n\n        var protobuf = requirePomelo('pomelo-protobuf');\n        this.protobuf = protobuf;\n\n        var pomelo = requirePomelo('pomelo-jsclient-websocket');\n        this.pomelo = pomelo;\n\n    });\n    pomeloBuildObj.alias(\"boot/index.js\", \"pomelo-client/deps/boot/index.js\");\n    pomeloBuildObj.alias(\"component-emitter/index.js\", \"boot/deps/emitter/index.js\");\n    pomeloBuildObj.alias(\"component-indexof/index.js\", \"component-emitter/deps/indexof/index.js\");\n\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"boot/deps/pomelo-protocol/lib/protocol.js\");\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"boot/deps/pomelo-protocol/index.js\");\n    pomeloBuildObj.alias(\"NetEase-pomelo-protocol/lib/protocol.js\", \"NetEase-pomelo-protocol/index.js\");\n\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"boot/deps/pomelo-protobuf/lib/client/protobuf.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"boot/deps/pomelo-protobuf/index.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-protobuf/lib/client/protobuf.js\", \"pomelonode-pomelo-protobuf/index.js\");\n\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"boot/deps/pomelo-jsclient-websocket/lib/pomelo-client.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"boot/deps/pomelo-jsclient-websocket/index.js\");\n    pomeloBuildObj.alias(\"pomelonode-pomelo-jsclient-websocket/lib/pomelo-client.js\", \"pomelonode-pomelo-jsclient-websocket/index.js\");\n\n    pomeloBuildObj.requirePomelo(\"boot\");\n\n    return pomeloBuildObj;\n};\n\nwindow.pomeloBuild = pomeloBuild;\n","cc.Class({\n    extends: cc.Component,\n\n    init(node) {\n        this.trackingNode = node;\n        this.speed = 2;\n        this.scheduleOnce(this.twinkleState,7);\n    },\n\n    destroyBullet() {\n        Game.BulletManager.recycleBullet(this.node);\n    },\n    twinkleState(){\n        this.node.getComponent(cc.Animation).play(\"twinkle\");\n        this.scheduleOnce(()=>{\n            this.node.getComponent(cc.Animation).stop(\"twinkle\");\n            this.node.opacity = 255;\n            this.destroyBullet();\n        },3);\n\n    },\n    update(dt) {\n        this.node.rotation += 5;\n        var trackingNodePos = this.trackingNode.getPosition();\n        this.node.x += this.node.x < trackingNodePos.x ? this.speed : -this.speed;\n        this.node.y += this.node.y < trackingNodePos.y ? this.speed : -this.speed;\n        if (this.node.x < -GLB.limitX || this.node.x > GLB.limitX\n            || this.node.y < -GLB.limitYBottom || this.node.y > GLB.limitYTop){\n            this.destroyBullet();\n        }\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        rankCntLb: cc.Label,\n        userNameLb: cc.Label,\n        userIcon: cc.Sprite,\n        userScoreLb: cc.Label\n    },\n\n    setData(data) {\n        if (this.rankCntLb) {\n            this.rankCntLb.string = data.rank;\n        }\n        this.userNameLb.string = data.userName;\n        if (data.headIcon && data.headIcon !== \"-\") {\n            cc.loader.load({url: data.headIcon, type: 'png'}, function(err, texture) {\n                // Use texture to create sprite frame\n                var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                this.userIcon.spriteFrame = spriteFrame;\n            }.bind(this));\n        }\n        this.userScoreLb.string = data.score;\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        icon: {\n            default: null,\n            type: cc.Sprite\n        },\n\n        nameLb: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    setData: function(id) {\n        this.playerId = id;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n        Game.GameManager.userInfoReq(this.playerId);\n    },\n\n    userInfoSet: function(recvMsg) {\n        if (recvMsg.account == this.playerId) {\n            this.nameLb.string = recvMsg.userName;\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    this.icon.spriteFrame = spriteFrame;\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        roomIdLb: {\n            default: null,\n            type: cc.Label\n        },\n        roomNameLb: {\n            default: null,\n            type: cc.Label\n        },\n    },\n\n    start() {\n        this.node.on(\"click\", this.joinRoom, this);\n    },\n\n    setData: function(msRoomAttribute) {\n        this.msRoomAttribute = msRoomAttribute;\n        this.roomIdLb.string = msRoomAttribute.roomID;\n        this.roomNameLb.string = msRoomAttribute.roomName;\n    },\n\n    joinRoom: function() {\n        mvs.engine.joinRoom(this.msRoomAttribute.roomID, \"joinRoomSpecial\");\n    }\n});\n","var mvs = require(\"Matchvs\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        userName: {\n            default: null,\n            type: cc.Label\n        },\n        ownerTag: {\n            default: null,\n            type: cc.Node\n        },\n        otherTag: {\n            default: null,\n            type: cc.Node\n        },\n        selfTag: {\n            default: null,\n            type: cc.Node\n        },\n        defaultNode: {\n            default: null,\n            type: cc.Node\n        },\n        commonNode: {\n            default: null,\n            type: cc.Node\n        },\n        kick: {\n            default: null,\n            type: cc.Node\n        },\n        userIcon: {\n            default: null,\n            type: cc.Sprite\n        }\n    },\n\n    init: function() {\n        this.defaultNode.active = true;\n        this.otherTag.active = false;\n        this.ownerTag.active = false;\n        this.selfTag.active = false;\n        this.userName.string = '';\n        this.commonNode.active = false;\n        this.kick.active = false;\n        this.kick.on(\"click\", this.kickPlayer, this);\n        this.userId = 0;\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    setData: function(userId, ownerId) {\n        this.userId = userId;\n        if (this.userId === ownerId) {\n            this.ownerTag.active = true;\n            this.otherTag.active = false;\n            this.selfTag.active = false;\n        } else if (this.userId === GLB.userInfo.id) {\n            this.ownerTag.active = false;\n            this.otherTag.active = false;\n            this.selfTag.active = true;\n        } else {\n            this.ownerTag.active = false;\n            this.otherTag.active = true;\n            this.selfTag.active = false;\n        }\n        this.defaultNode.active = false;\n        this.commonNode.active = true;\n        this.userName.string = this.userId;\n\n        if (!GLB.isRoomOwner || this.userId === GLB.userInfo.id) {\n            this.kick.active = false;\n        } else {\n            this.kick.active = true;\n        }\n        Game.GameManager.userInfoReq(this.userId);\n    },\n\n    userInfoSet: function(recvMsg) {\n        console.log(\"recvMsg:\" + recvMsg);\n        if (recvMsg.account == this.userId) {\n            console.log(\"set user info\");\n            console.log(recvMsg);\n            this.userName.string = recvMsg.userName;\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                    this.userIcon.spriteFrame = spriteFrame;\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\n    },\n\n    kickPlayer: function() {\n        mvs.engine.kickPlayer(this.userId, \"kick\");\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.playerCntLb = this.nodeDict[\"playerCnt\"].getComponent(cc.Label);\n        this.playerCnt = GLB.PLAYER_COUNTS[0];\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n        this.nodeDict[\"addNode\"].on(\"click\", this.addPlayerCount, this);\n        this.nodeDict[\"subNode\"].on(\"click\", this.subPlayerCount, this);\n        this.nodeDict[\"create\"].on(\"click\", this.createRoom, this);\n\n        clientEvent.on(clientEvent.eventType.createRoomResponse, this.createRoomResponse, this);\n    },\n\n    addPlayerCount: function() {\n        for (var i = 0; i < GLB.PLAYER_COUNTS.length; i++) {\n            if (this.playerCnt === GLB.PLAYER_COUNTS[i]) {\n                if (GLB.PLAYER_COUNTS.length > i + 1) {\n                    this.playerCnt = GLB.PLAYER_COUNTS[i + 1];\n                    break;\n                }\n            }\n        }\n\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n    },\n\n    subPlayerCount: function() {\n        for (var i = 0; i < GLB.PLAYER_COUNTS.length; i++) {\n            if (this.playerCnt === GLB.PLAYER_COUNTS[i]) {\n                if (i > 0) {\n                    this.playerCnt = GLB.PLAYER_COUNTS[i - 1];\n                    break;\n                }\n            }\n        }\n        this.playerCntLb.string = this.playerCnt;\n        this.refreshBtnState();\n    },\n\n    refreshBtnState() {\n        if (this.playerCnt === GLB.PLAYER_COUNTS[0]) {\n            this.nodeDict[\"subNode\"].getComponent(cc.Button).interactable = false;\n        } else {\n            this.nodeDict[\"subNode\"].getComponent(cc.Button).interactable = true;\n        }\n\n        if (this.playerCnt === GLB.PLAYER_COUNTS[GLB.PLAYER_COUNTS.length - 1]) {\n            this.nodeDict[\"addNode\"].getComponent(cc.Button).interactable = false;\n        } else {\n            this.nodeDict[\"addNode\"].getComponent(cc.Button).interactable = true;\n        }\n    },\n\n    quit: function() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    createRoom: function() {\n\n        Game.GameManager.blockInput();\n\n        var create = new mvs.CreateRoomInfo();\n        create.roomName = this.nodeDict[\"roomName\"].getComponent(cc.EditBox).string;\n        GLB.MAX_PLAYER_COUNT = this.playerCnt;\n        create.maxPlayer = GLB.MAX_PLAYER_COUNT;\n        create.mode = 0;\n        create.canWatch = 0;\n        create.visibility = 1;\n        create.roomProperty = GLB.MAX_PLAYER_COUNT;\n        var result = mvs.engine.createRoom(create, { maxPlayer: GLB.MAX_PLAYER_COUNT });\n        if (result !== 0) {\n            console.log('创建房间失败,错误码:' + result);\n        }\n    },\n\n    createRoomResponse: function(data) {\n        var status = data.rsp.status;\n        if (status !== 200) {\n            console.log('创建房间失败,异步回调错误码: ' + status);\n        } else {\n            console.log('创建房间成功:' + JSON.stringify(data.rsp));\n            console.log('房间号: ' + data.rsp.roomID);\n            GLB.roomId = data.rsp.roomID;\n\n            if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                uiFunc.openUI(\"uiRoomVer\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.createRoomInit(data.rsp);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            } else {\n                uiFunc.openUI(\"uiRoom\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.createRoomInit(data.rsp);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy: function() {\n        clientEvent.off(clientEvent.eventType.createRoomResponse, this.createRoomResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"sure\"].on(\"click\", this.sure, this);\n        this.nodeDict[\"close\"].on(\"click\", this.close, this);\n    },\n\n    close() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    sure() {\n        if (!Game.GameManager.exitGame) {\n            return;\n        }\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n        Game.GameManager.lobbyShow();\n    }\n});\n","var mvs = require(\"Matchvs\");\nvar uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        bgmAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n    onLoad() {\n        this._super();\n        this.node.on(clientEvent.eventType.playerMove, this.playerMove, this);\n        this.bCreateBullet = false;\n        this.bExit = false;\n        clientEvent.on(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.on(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n        this.nodeDict['readyGo'].getComponent(cc.Animation).on('finished',this.onFinished,this);\n        this.nodeDict[\"exit\"].on(cc.Node.EventType.TOUCH_START, this.exit, this);\n        this.bgmId = cc.audioEngine.play(this.bgmAudio, true, 1);\n    },\n    onFinished(){\n        this.bExit = true;\n        this.nodeDict['readyGo'].getComponent(cc.Animation).off('finished',this.onFinished,this)\n    },\n    showLcon() {\n        this.playerLcon = this.nodeDict[\"player\"].getComponent(\"playerIcon\");\n        this.playerLcon.setData({id: GLB.playerUserIds[0]});\n        this.rivalLcon = this.nodeDict[\"rival\"].getComponent(\"playerIcon\");\n        this.rivalLcon.setData({id: GLB.playerUserIds[1]});\n    },\n    createBullet() {\n        for (let i = 0; i < 30; i++) {\n            this.sendAddBulletMsg();\n        }\n        clearInterval(this.scheduleBullet);\n        this.scheduleBullet = setInterval(function() {\n            this.sendAddBulletMsg();\n        }.bind(this), 200);\n    },\n    leaveRoom(data) {\n        if (Game.GameManager.gameState !== GameState.Over) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"对手离开了游戏\");\n                }\n            }.bind(this));\n        }\n    },\n    playerMove() {\n        var playerPos = Game.ClickManager.playerPos;\n        this.sendDirectMsg(playerPos);\n    },\n    sendDirectMsg(position) {\n        if (Game.GameManager.gameState === GameState.Play) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.POSITION,\n                position: position\n            }));\n        }\n\n    },\n    sendAddBulletMsg() {\n        if (!GLB.isRoomOwner) {\n            return;\n        }\n        var bulletData = Game.BulletManager.setBulletData();\n        if (Game.GameManager.gameState === GameState.Play) {\n            mvs.engine.sendFrameEvent(JSON.stringify({\n                action: GLB.ADD_BULLET,\n                bulletData: bulletData\n            }));\n        }\n    },\n    exit() {\n        if (!this.bExit) {\n            return;\n        }\n        uiFunc.openUI(\"uiExit\");\n    },\n\n    gameOver: function() {\n        this.nodeDict['gameOver'].getComponent(cc.Animation).play();\n        this.nodeDict['gameOver'].getComponent(cc.AudioSource).play();\n        clearInterval(this.scheduleBullet);\n        cc.audioEngine.stop(this.bgmId);\n\n    },\n\n    roundStart: function() {\n        this.nodeDict['readyGo'].getComponent(cc.Animation).play();\n        this.nodeDict['readyGo'].getComponent(cc.AudioSource).play();\n        this.createBullet();\n        this.showLcon();\n        Game.GameManager.playerDie = false;\n    },\n    leaveRoom() {\n        if (Game.GameManager.gameState !== GameState.Over) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"对手离开了游戏\");\n                }\n            }.bind(this));\n        }\n        Game.GameManager.exitGame = false;\n        this.scheduleOnce(()=>{\n            Game.GameManager.exitGam = true;\n        },2.0)\n    },\n    onDestroy() {\n        cc.audioEngine.stop(this.bgmId);\n        clientEvent.off(clientEvent.eventType.roundStart, this.roundStart, this);\n        clientEvent.off(clientEvent.eventType.gameOver, this.gameOver, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoom, this);\n    },\n\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {},\n\n    start() {\n        this.nodeDict[\"randomRoom\"].on(\"click\", this.randomRoom, this);\n        this.nodeDict[\"createRoom\"].on(\"click\", this.createRoom, this);\n        this.nodeDict[\"joinRoom\"].on(\"click\", this.joinRoom, this);\n        this.nodeDict[\"inviteFriend\"].on(\"click\", this.inviteFriend, this);\n        this.nodeDict[\"exit\"].on(\"click\", this.exit, this);\n        if (Game.GameManager.nickName) {\n            this.nodeDict[\"name\"].getComponent(cc.Label).string = Game.GameManager.nickName;\n        } else {\n            this.nodeDict[\"name\"].getComponent(cc.Label).string = GLB.userInfo.id;\n        }\n        if (Game.GameManager.avatarUrl) {\n            cc.loader.load({url: Game.GameManager.avatarUrl, type: 'png'}, function(err, texture) {\n                var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\n                this.nodeDict[\"userIcon\"].getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            }.bind(this));\n        }\n\n        /*\n        if (!Game.GameManager.network.isConnected()) {\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT, function() {\n                Game.GameManager.network.send(\"connector.entryHandler.login\", {\n                    \"account\": GLB.userInfo.id + \"\",\n                    \"channel\": \"0\",\n                    \"userName\": Game.GameManager.nickName ? Game.GameManager.nickName : GLB.userInfo.id + \"\",\n                    \"headIcon\": Game.GameManager.avatarUrl ? Game.GameManager.avatarUrl : \"-\"\n                });\n            });\n        }\n        */\n        this.nodeDict[\"rank\"].on(\"click\", this.rank, this);\n    },\n\n    rank: function() {\n        Game.GameManager.blockInput();\n\n        if (!Game.GameManager.network.isConnected()) {\n            Game.GameManager.network.connect(GLB.IP, GLB.PORT, function() {\n                    Game.GameManager.network.send(\"connector.entryHandler.login\", {\n                        \"account\": GLB.userInfo.id + \"\",\n                        \"channel\": \"0\",\n                        \"userName\": Game.GameManager.nickName ? Game.GameManager.nickName : GLB.userInfo.id + \"\",\n                        \"headIcon\": Game.GameManager.avatarUrl ? Game.GameManager.avatarUrl : \"-\"\n                    });\n                    setTimeout(function() {\n                        Game.GameManager.network.send(\"connector.rankHandler.getRankData\", {\n                            \"account\": GLB.userInfo.id + \"\",\n                            \"game\": GLB.GAME_NAME\n                        });\n                    }, 500);\n                }\n            );\n        } else {\n            Game.GameManager.network.send(\"connector.rankHandler.getRankData\", {\n                \"account\": GLB.userInfo.id + \"\",\n                \"game\": GLB.GAME_NAME\n            });\n        }\n    },\n\n    exit: function() {\n        mvs.engine.logout(\"\");\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    onEnable() {\n        GLB.isRoomOwner = false;\n        GLB.MAX_PLAYER_COUNT = 2;\n    },\n\n    randomRoom: function() {\n        Game.GameManager.blockInput();\n\n        GLB.matchType = GLB.RANDOM_MATCH; // 修改匹配方式为随机匹配\n        console.log('开始随机匹配');\n        if (GLB.gameType === GLB.COOPERATION) {\n            if (GLB.MAX_PLAYER_COUNT > 1) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatchingVer\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            } else {\n                cc.director.loadScene('game');\n            }\n        } else if (GLB.gameType === GLB.COMPETITION) {\n            if (GLB.MAX_PLAYER_COUNT === 2) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatching1v1Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching1v1Ver\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching1v1\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching1v1\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            } else if (GLB.MAX_PLAYER_COUNT === 4) {\n                if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                    uiFunc.openUI(\"uiMatching2v2Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching2v2Ver\");\n                        matching.joinRandomRoom();\n                    });\n                } else {\n                    uiFunc.openUI(\"uiMatching2v2Ver\", function(obj) {\n                        var matching = obj.getComponent(\"uiMatching2v2Ver\");\n                        matching.joinRandomRoom();\n                    });\n                }\n            }\n        }\n    },\n\n    createRoom: function() {\n        Game.GameManager.blockInput();\n\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiCreateRoomVer\");\n        } else {\n            uiFunc.openUI(\"uiCreateRoom\");\n        }\n    },\n\n    joinRoom: function() {\n        Game.GameManager.blockInput();\n\n        if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n            uiFunc.openUI(\"uiRoomListVer\");\n        } else {\n            uiFunc.openUI(\"uiRoomList\");\n        }\n    },\n\n    inviteFriend: function() {\n        if (window.wx) {\n            wx.shareAppMessage({imageUrl: \"https://data.tianziyou.com/matchvsGamesRes/logo/extremeEvasionLogo.png\"});\n        }\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"start\"].on(\"click\", this.startGame, this);\n    },\n\n    startGame() {\n        Game.GameManager.matchVsInit();\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    // LIFE-CYCLE CALLBACKS:\n    start() {\n        clientEvent.on(clientEvent.eventType.openUI, this.uiOperateCallBack, this);\n        clientEvent.on(clientEvent.eventType.closeUI, this.uiOperateCallBack, this);\n        this.isUseMask = false;\n        this.node.active = false;\n    },\n\n    uiOperateCallBack: function() {\n        // 最后一个需要使用mask的panel\n        var lastMaskIndex = -1;\n        for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n            var ui = uiFunc.uiList[i];\n            var panel = ui.getComponent(\"uiPanel\");\n            if (panel && panel.isUseMask) {\n                lastMaskIndex = i;\n                break;\n            }\n        }\n        if (lastMaskIndex >= 0) {\n            this.node.active = true;\n            for (var j = lastMaskIndex; j < uiFunc.uiList.length; j++) {\n                var targetUI = uiFunc.uiList[j];\n                if (targetUI) {\n                    this.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                    targetUI.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                } else {\n                    console.log(\"current show ui is null!\");\n                }\n            }\n        } else {\n            this.node.active = false;\n            return;\n        }\n    },\n\n    refresh: function() {\n        // 最后一个需要使用mask的panel\n        var lastMaskIndex = -1;\n        for (var i = uiFunc.uiList.length - 1; i >= 0; i--) {\n            var ui = uiFunc.uiList[i];\n            var panel = ui.getComponent(\"uiPanel\");\n            if (panel.isUseMask) {\n                lastMaskIndex = i;\n                break;\n            }\n        }\n        if (lastMaskIndex >= 0) {\n            this.node.active = true;\n            for (var j = lastMaskIndex; j < uiFunc.uiList.length; j++) {\n                var targetUI = uiFunc.uiList[j];\n                if (targetUI) {\n                    this.node.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                    targetUI.setSiblingIndex(Number.MAX_SAFE_INTEGER);\n                } else {\n                    console.log(\"current show ui is null!\");\n                }\n            }\n        } else {\n            this.node.active = false;\n            return;\n        }\n    },\n\n    onDestroy: function() {\n        clientEvent.off(clientEvent.eventType.openUI, this.uiOperateCallBack, this);\n        clientEvent.off(clientEvent.eventType.closeUI, this.uiOperateCallBack, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom();\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n            return;\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom();\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {\n        playerIcons: [cc.Node]\n    },\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    onDestroy() {\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        GLB.isRoomOwner = false;\n        this.playerIcons = [];\n        this.playerModel = this.nodeDict[\"playerIcon\"];\n        this.playerModel.active = false;\n        for (var i = 0; i < GLB.MAX_PLAYER_COUNT; i++) {\n            var playerTemp = cc.instantiate(this.playerModel);\n            playerTemp.active = true;\n            this.nodeDict[\"playerLayout\"].addChild(playerTemp);\n            playerTemp.position = cc.v2(0, 0);\n            this.playerIcons.push(playerTemp);\n        }\n\n        this.nodeDict[\"quit\"].on(\"click\", this.leaveRoom, this);\n\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n    },\n\n    joinRandomRoom: function() {\n        var result = null;\n        if (GLB.matchType === GLB.RANDOM_MATCH) {\n            result = mvs.engine.joinRandomRoom(GLB.MAX_PLAYER_COUNT, '');\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        } else if (GLB.matchType === GLB.PROPERTY_MATCH) {\n            var matchinfo = new mvs.MatchInfo();\n            matchinfo.maxPlayer = GLB.MAX_PLAYER_COUNT;\n            matchinfo.mode = 0;\n            matchinfo.canWatch = 0;\n            matchinfo.tags = GLB.tagsInfo;\n            result = mvs.engine.joinRoomWithProperties(matchinfo, \"joinRoomWithProperties\");\n            if (result !== 0) {\n                console.log('进入房间失败,错误码:' + result);\n            }\n        }\n    },\n\n    startGame: function() {\n        console.log('游戏即将开始');\n        cc.director.loadScene('game');\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n        }\n        GLB.roomId = data.roomInfo.roomID;\n        var userIds = [GLB.userInfo.id]\n        console.log('房间用户: ' + userIds);\n\n        var playerIcon = null;\n        for (var j = 0; j < data.roomUserInfoList.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfoList[j]);\n                if (GLB.userInfo.id !== data.roomUserInfoList[j].userId) {\n                    userIds.push(data.roomUserInfoList[j].userId);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.playerIcons.length; i++) {\n            playerIcon = this.playerIcons[i].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(GLB.userInfo);\n                break;\n            }\n        }\n        GLB.playerUserIds = userIds;\n        if (userIds.length >= GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        console.log(\"joinRoomNotify, roomUserInfo:\" + JSON.stringify(data.roomUserInfo));\n        var playerIcon = null;\n        for (var j = 0; j < this.playerIcons.length; j++) {\n            playerIcon = this.playerIcons[j].getComponent('playerIcon');\n            if (playerIcon && !playerIcon.userInfo) {\n                playerIcon.setData(data.roomUserInfo);\n                break;\n            }\n        }\n    },\n\n    leaveRoom: function() {\n        mvs.engine.leaveRoom();\n    },\n\n    leaveRoomNotify: function(data) {\n        if (GLB.roomId === data.leaveRoomInfo.roomID) {\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon && playerIcon.userInfo && playerIcon.playerId === data.leaveRoomInfo.userId) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功\");\n            for (var i = 0; i < this.playerIcons.length; i++) {\n                var playerIcon = this.playerIcons[i].getComponent('playerIcon');\n                if (playerIcon) {\n                    playerIcon.init();\n                    break;\n                }\n            }\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        } else {\n            console.log(\"离开房间失败\");\n        }\n    },\n\n\n    joinOverResponse: function(data) {\n        if (data.joinOverRsp.status === 200) {\n            console.log(\"关闭房间成功\");\n            this.notifyGameStart();\n        } else {\n            console.log(\"关闭房间失败，回调通知错误码：\", data.joinOverRsp.status);\n        }\n    },\n\n    notifyGameStart: function() {\n        GLB.isRoomOwner = true;\n        var msg = {\n            action: GLB.GAME_START_EVENT,\n            userIds: GLB.playerUserIds\n        };\n        Game.GameManager.sendEventEx(msg);\n    },\n\n    onDestroy: function() {\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.joinOverResponse, this.joinOverResponse, this);\n\n    }\n});\n","cc.Class({\n    extends: cc.Component,\n    properties: {\n        isTop: false\n    },\n\n    onLoad: function() {\n        // node load --\n        this.nodeDict = {};\n        var linkWidget = function(self, nodeDict) {\n            var children = self.children;\n            for (var i = 0; i < children.length; i++) {\n                var widgetName = children[i].name;\n                if (widgetName && widgetName.indexOf(\"key_\") >= 0) {\n                    var nodeName = widgetName.substring(4);\n                    if (nodeDict[nodeName]) {\n                        cc.error(\"控件名字重复!\" + children[i].name);\n                    }\n                    nodeDict[nodeName] = children[i];\n                }\n                if (children[i].childrenCount > 0) {\n                    linkWidget(children[i], nodeDict);\n                }\n            }\n        }.bind(this);\n        linkWidget(this.node, this.nodeDict);\n    },\n\n    onDestroy: function() {\n        clientEvent.clear(this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\n\ncc.Class({\n\n    extends: uiPanel,\n    properties: {\n        rankPrefab: {\n            default: null,\n            type: cc.Node\n        },\n        rank1Node: {\n            default: null,\n            type: cc.Node\n        },\n        rank2Node: {\n            default: null,\n            type: cc.Node\n        },\n        rank3Node: {\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    onLoad: function() {\n        this._super();\n        this.rankPrefab.active = false;\n        this.rank1Node.active = false;\n        this.rank2Node.active = false;\n        this.rank3Node.active = false;\n        this.rank1Info = this.rank1Node.getComponent(\"rankUserInfo\");\n        this.rank2Info = this.rank2Node.getComponent(\"rankUserInfo\");\n        this.rank3Info = this.rank3Node.getComponent(\"rankUserInfo\");\n        this.nodeDict[\"exit\"].on(\"click\", this.quit, this);\n    },\n\n    quit: function() {\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    setData: function(rankdata) {\n        console.log(\"setData\");\n        for (var i = 0; i < rankdata.length; i++) {\n            if (i === 0) {\n                this.rank1Node.active = true;\n                this.rank1Info.setData(rankdata[i]);\n            } else if (i === 1) {\n                this.rank2Node.active = true;\n                this.rank2Info.setData(rankdata[i]);\n            } else if (i === 2) {\n                this.rank3Node.active = true;\n                this.rank3Info.setData(rankdata[i]);\n            } else {\n                var temp = cc.instantiate(this.rankPrefab);\n                temp.active = true;\n                temp.parent = this.rankPrefab.parent;\n                var rankInfo = temp.getComponent(\"rankUserInfo\");\n                rankInfo.setData(rankdata[i]);\n            }\n        }\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        loseClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        victoryClip: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    onLoad() {\n        this._super();\n\n        this.player1 = this.nodeDict[\"player1\"].getComponent(\"resultPlayerIcon\");\n        this.player1.node.active = false;\n        this.player2 = this.nodeDict[\"player2\"].getComponent(\"resultPlayerIcon\");\n        this.player2.node.active = false;\n        this.player3 = this.nodeDict[\"player3\"].getComponent(\"resultPlayerIcon\");\n        this.player3.node.active = false;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n    },\n\n    setData: function(data) {\n        if (data.length > 0) {\n            this.player1.setData(data[0]);\n            this.player1.node.active = true;\n            if (data.length > 1) {\n                this.player2.setData(data[1]);\n                this.player2.node.active = true;\n            }\n            if (data.length > 2) {\n                this.player3.setData(data[2]);\n                this.player3.node.active = true;\n            }\n        }\n        if (data.loseCamp === Camp.Friend) {\n            cc.audioEngine.play(this.victoryClip, false, 1);\n        } else {\n            cc.audioEngine.play(this.loseClip, false, 1);\n        }\n    },\n\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n\n\n        Game.GameManager.lobbyShow();\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {},\n\n    start() {\n        this.roomPrefab = this.nodeDict[\"roomPrefab\"];\n        this.editBox = this.nodeDict[\"editBox\"].getComponent(cc.EditBox);\n        this.roomPrefab.active = false;\n        this.nodeDict[\"search\"].on(\"click\", this.search, this);\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n\n\n        this.rooms = [];\n\n        clientEvent.on(clientEvent.eventType.getRoomListResponse, this.getRoomListResponse, this);\n        clientEvent.on(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.getRoomListExResponse, this.getRoomListExResponse, this);\n\n        this.getRoomList();\n        this.roomRqId = setInterval(function() {\n            if (this.editBox.string === '') {\n                this.getRoomList();\n            }\n        }.bind(this), 5000);\n    },\n\n    getRoomList: function() {\n        var filter = {\n            maxPlayer: 0,\n            mode: 0,\n            canWatch: 0,\n            roomProperty: \"\",\n            full: 2,\n            state: 1,\n            sort: 1,\n            order: 0,\n            pageNo: 0,\n            pageSize: 20\n        }\n        mvs.engine.getRoomListEx(filter);\n    },\n\n    getRoomListResponse: function(data) {\n        for (var j = 0; j < this.rooms.length; j++) {\n            this.rooms[j].destroy();\n        }\n        this.rooms = [];\n        data.roomInfos.sort(function(a, b) {\n            return a.roomID - b.roomID;\n        });\n        for (var i = 0; i < data.roomInfos.length; i++) {\n            var room = cc.instantiate(this.roomPrefab);\n            room.active = true;\n            room.parent = this.roomPrefab.parent;\n            var roomScript = room.getComponent('roomInfo');\n            roomScript.setData(data.roomInfos[i]);\n\n            this.rooms.push(room);\n        }\n    },\n\n    getRoomListExResponse: function(data) {\n        for (var j = 0; j < this.rooms.length; j++) {\n            this.rooms[j].destroy();\n        }\n        this.rooms = [];\n        this.roomAttrs = data.rsp.roomAttrs;\n        for (var i = 0; i < data.rsp.roomAttrs.length; i++) {\n            var room = cc.instantiate(this.roomPrefab);\n            room.active = true;\n            room.parent = this.roomPrefab.parent;\n            var roomScript = room.getComponent('roomInfo');\n            roomScript.setData(data.rsp.roomAttrs[i]);\n\n            this.rooms.push(room);\n        }\n    },\n\n    quit: function() {\n        clearInterval(this.roomRqId);\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    search: function() {\n        if (this.editBox.string === '') {\n            for (var i = 0; i < this.rooms.length; i++) {\n                this.rooms[i].active = true;\n            }\n        } else {\n            for (var j = 0; j < this.rooms.length; j++) {\n                var roomScript = this.rooms[j].getComponent('roomInfo');\n                if (roomScript.roomIdLb.string == this.editBox.string) {\n                    this.rooms[j].active = true;\n                } else {\n                    this.rooms[j].active = false;\n                }\n            }\n        }\n    },\n\n    joinRoomResponse: function(data) {\n        if (data.status !== 200) {\n            console.log('进入房间失败,异步回调错误码: ' + data.status);\n        } else {\n            console.log('进入房间成功');\n            console.log('房间号: ' + data.roomInfo.roomID);\n            if (!data.roomUserInfoList.some(function(x) {\n                return x.userId === GLB.userInfo.id;\n            })) {\n                data.roomUserInfoList.push({\n                    userId: GLB.userInfo.id,\n                    userProfile: \"\"\n                });\n            }\n            // 设置房间最大人数--\n            for (var i = 0; i < this.roomAttrs.length; i++) {\n                if (data.roomInfo.roomID === this.roomAttrs[i].roomID) {\n                    GLB.MAX_PLAYER_COUNT = this.roomAttrs[i].maxPlayer;\n                    break;\n                }\n            }\n\n            if (cc.Canvas.instance.designResolution.height > cc.Canvas.instance.designResolution.width) {\n                uiFunc.openUI(\"uiRoomVer\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.joinRoomInit(data.roomUserInfoList, data.roomInfo);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            } else {\n                uiFunc.openUI(\"uiRoom\", function(obj) {\n                    var room = obj.getComponent('uiRoom');\n                    room.joinRoomInit(data.roomUserInfoList, data.roomInfo);\n                    uiFunc.closeUI(this.node.name);\n                    this.node.destroy();\n                }.bind(this));\n            }\n        }\n    },\n\n    onDestroy() {\n        clearInterval(this.roomRqId);\n        clientEvent.off(clientEvent.eventType.getRoomListResponse, this.getRoomListResponse, this);\n        clientEvent.off(clientEvent.eventType.joinRoomResponse, this.joinRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.getRoomListExResponse, this.getRoomListExResponse, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.players = [];\n        this.roomId = 0;\n        this.roomInfo = null;\n        this.owner = 0;\n        this.playerPrefab = this.nodeDict[\"player\"];\n        this.playerPrefab.active = false;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n        this.nodeDict[\"startGame\"].on(\"click\", this.startGame, this);\n\n\n        clientEvent.on(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.on(clientEvent.eventType.leaveRoomMedNotify, this.leaveRoomMedNotify, this);\n\n        clientEvent.on(clientEvent.eventType.kickPlayerResponse, this.kickPlayerResponse, this);\n        clientEvent.on(clientEvent.eventType.kickPlayerNotify, this.kickPlayerNotify, this);\n\n        for (var i = 0; i < GLB.MAX_PLAYER_COUNT; i++) {\n            var temp = cc.instantiate(this.playerPrefab);\n            temp.active = true;\n            temp.parent = this.nodeDict[\"layout\"];\n            var roomUserInfo = temp.getComponent('roomUserInfo');\n            roomUserInfo.init();\n            this.players.push(roomUserInfo);\n        }\n    },\n\n    kickPlayerResponse: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.kickPlayerRsp.userID) {\n                this.players[j].init();\n                break;\n            }\n        }\n        if (GLB.userInfo.id === data.kickPlayerRsp.userID) {\n            GLB.isRoomOwner = false;\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        }\n    },\n\n    kickPlayerNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.kickPlayerNotify.userId) {\n                this.players[j].init();\n                break;\n            }\n        }\n\n        if (GLB.userInfo.id === data.kickPlayerNotify.userId) {\n            GLB.isRoomOwner = false;\n            uiFunc.closeUI(this.node.name);\n            this.node.destroy();\n        }\n    },\n\n    joinRoomNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === 0) {\n                this.players[j].setData(data.roomUserInfo.userId, this.ownerId);\n                break;\n            }\n        }\n    },\n\n    leaveRoomResponse: function(data) {\n        if (data.leaveRoomRsp.status === 200) {\n            console.log(\"离开房间成功！\");\n        } else {\n            console.log(\"离开房间失败\");\n        }\n        GLB.isRoomOwner = false;\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n    },\n\n    leaveRoomMedNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.userID) {\n                this.players[j].init();\n                break;\n            }\n        }\n        this.ownerId = data.owner;\n        if (this.ownerId === GLB.userInfo.id) {\n            GLB.isRoomOwner = true;\n        }\n        for (var i = 0; i < this.players.length; i++) {\n            if (this.players[i].userId !== 0) {\n                this.players[i].setData(this.players[i].userId, this.ownerId);\n            }\n        }\n        this.refreshStartBtn();\n    },\n\n    leaveRoomNotify: function(data) {\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId === data.leaveRoomInfo.userId) {\n                this.players[j].init();\n                break;\n            }\n        }\n        this.ownerId = data.leaveRoomInfo.owner;\n        if (this.ownerId === GLB.userInfo.id) {\n            GLB.isRoomOwner = true;\n        }\n        for (var i = 0; i < this.players.length; i++) {\n            if (this.players[i].userId !== 0) {\n                this.players[i].setData(this.players[i].userId, this.ownerId);\n            }\n        }\n        this.refreshStartBtn();\n    },\n\n    refreshStartBtn() {\n        var spNode = this.nodeDict[\"startGame\"];\n        var btn = this.nodeDict[\"startGame\"].getComponent(cc.Button);\n        if (GLB.isRoomOwner) {\n            spNode.color = cc.Color.WHITE;\n            btn.enabled = true;\n        } else {\n            spNode.color = cc.Color.BLACK;\n            btn.enabled = false;\n        }\n    },\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n    },\n\n    startGame: function() {\n        if (!GLB.isRoomOwner) {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"等待房主开始游戏\");\n                }\n            }.bind(this));\n            return;\n        }\n        var userIds = [];\n        var playerCnt = 0;\n        for (var j = 0; j < this.players.length; j++) {\n            if (this.players[j].userId !== 0) {\n                playerCnt++;\n                userIds.push(this.players[j].userId);\n            }\n        }\n\n\n        if (playerCnt === GLB.MAX_PLAYER_COUNT) {\n            var result = mvs.engine.joinOver(\"\");\n            console.log(\"发出关闭房间的通知\");\n            if (result !== 0) {\n                console.log(\"关闭房间失败，错误码：\", result);\n            }\n\n            GLB.playerUserIds = userIds;\n\n            var msg = {\n                action: GLB.GAME_START_EVENT,\n                userIds: userIds\n            };\n            Game.GameManager.sendEventEx(msg);\n        } else {\n            uiFunc.openUI(\"uiTip\", function(obj) {\n                var uiTip = obj.getComponent(\"uiTip\");\n                if (uiTip) {\n                    uiTip.setData(\"房间人数不足\");\n                }\n            }.bind(this));\n        }\n    },\n\n    createRoomInit(rsp) {\n        this.roomId = rsp.roomID;\n        this.ownerId = rsp.owner;\n        this.players[0].setData(this.ownerId, this.ownerId);\n        GLB.isRoomOwner = true;\n        this.refreshStartBtn();\n    },\n\n    joinRoomInit(roomUserInfoList, roomInfo) {\n        roomUserInfoList.sort(function(a, b) {\n            if (roomInfo.ownerId === b.userId) {\n                return 1;\n            }\n            return 0;\n        });\n        this.ownerId = roomInfo.ownerId;\n        for (var j = 0; j < roomUserInfoList.length; j++) {\n            this.players[j].setData(roomUserInfoList[j].userId, this.ownerId);\n        }\n        this.refreshStartBtn();\n    },\n\n    onDestroy() {\n        clientEvent.off(clientEvent.eventType.joinRoomNotify, this.joinRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomResponse, this.leaveRoomResponse, this);\n        clientEvent.off(clientEvent.eventType.leaveRoomNotify, this.leaveRoomNotify, this);\n        clientEvent.off(clientEvent.eventType.kickPlayerResponse, this.kickPlayerResponse, this);\n        clientEvent.off(clientEvent.eventType.kickPlayerNotify, this.kickPlayerNotify, this);\n    }\n});\n","var uiPanel = require(\"uiPanel\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        setTimeout(function() {\n            if (this && this.node) {\n                uiFunc.closeUI(this.node.name);\n                this.node.destroy();\n            }\n        }.bind(this), 2000);\n    },\n\n    setData(content){\n        this.nodeDict[\"tipLb\"].getComponent(cc.Label).string = content;\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n\n    properties: {\n        loseClip: {\n            default: null,\n            url: cc.AudioClip\n        },\n        victoryClip: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    start() {\n        var isLose = Game.GameManager.isRivalLeave ? false : Game.PlayerManager.self.heart < Game.PlayerManager.rival.heart;\n\n        this.player = this.nodeDict[\"player\"].getComponent(\"resultPlayerIcon\");\n        this.player.setData(Game.PlayerManager.self.playerId);\n        this.rival = this.nodeDict[\"rival\"].getComponent(\"resultPlayerIcon\");\n        this.rival.setData(Game.PlayerManager.rival.playerId);\n        this.nodeDict[\"vs\"].active = true;\n        this.nodeDict[\"score\"].active = true;\n        this.nodeDict[\"quit\"].on(\"click\", this.quit, this);\n\n        this.nodeDict[\"lose\"].active = isLose;\n        this.nodeDict[\"win\"].active = !isLose;\n\n        if (!isLose) {\n            cc.audioEngine.play(this.victoryClip, false, 1);\n            // 发送胜局记录--\n            Game.GameManager.loginServer();\n\n        } else {\n            cc.audioEngine.play(this.loseClip, false, 1);\n        }\n    },\n\n    quit: function() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(\"uiGamePanel\");\n            gamePanel.destroy();\n        }\n        uiFunc.closeUI(this.node.name);\n        this.node.destroy();\n\n\n        Game.GameManager.lobbyShow();\n    }\n});\n","var uiPanel = require(\"uiPanel\");\nvar mvs = require(\"Matchvs\");\ncc.Class({\n    extends: uiPanel,\n    properties: {},\n\n    onLoad() {\n        this._super();\n        this.nodeDict[\"sure\"].on(\"click\", this.sure, this);\n        this.nodeDict[\"close\"].on(\"click\", this.close, this);\n    },\n\n    close() {\n        uiFunc.closeUI(this.node);\n    },\n\n    sure() {\n        mvs.engine.leaveRoom(\"\");\n        var gamePanel = uiFunc.findUI(\"uiGamePanel\");\n        if (gamePanel) {\n            uiFunc.closeUI(gamePanel);\n        }\n        uiFunc.closeUI(this.node);\n        Game.GameManager.lobbyShow();\n    }\n});\n"],"sourceRoot":"/source/","file":"project.dev.js"}